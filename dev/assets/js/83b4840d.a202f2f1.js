"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[6566],{8029:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Portfolio/Jsonamic/components/user-interface","title":"User Interface Components","description":"Overview","source":"@site/docs/Portfolio/Jsonamic/components/user-interface.md","sourceDirName":"Portfolio/Jsonamic/components","slug":"/Portfolio/Jsonamic/components/user-interface","permalink":"/dev/docs/Portfolio/Jsonamic/components/user-interface","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Data View Components","permalink":"/dev/docs/Portfolio/Jsonamic/components/data-views"},"next":{"title":"State Management System","permalink":"/dev/docs/Portfolio/Jsonamic/contexts/state-management"}}');var t=r(4848),a=r(8453);const i={},l="User Interface Components",o={},d=[{value:"Overview",id:"overview",level:2},{value:"FileUpload Component",id:"fileupload-component",level:2},{value:"Input Methods",id:"input-methods",level:3},{value:"1. File Upload (Drag &amp; Drop or Browse)",id:"1-file-upload-drag--drop-or-browse",level:4},{value:"2. Clipboard Paste",id:"2-clipboard-paste",level:4},{value:"3. Manual Entry",id:"3-manual-entry",level:4},{value:"4. Sample Data Loading",id:"4-sample-data-loading",level:4},{value:"Smart Feedback System",id:"smart-feedback-system",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"SearchBar Component",id:"searchbar-component",level:2},{value:"Search Features",id:"search-features",level:3},{value:"Real-time Input with Deferred Search",id:"real-time-input-with-deferred-search",level:4},{value:"Regex Support",id:"regex-support",level:4},{value:"Search History Management",id:"search-history-management",level:3},{value:"Automatic History Tracking",id:"automatic-history-tracking",level:4},{value:"Search History UI",id:"search-history-ui",level:4},{value:"Saved Searches",id:"saved-searches",level:3},{value:"Bookmark Functionality",id:"bookmark-functionality",level:4},{value:"Saved Search UI",id:"saved-search-ui",level:4},{value:"Results Display",id:"results-display",level:3},{value:"Controls Component",id:"controls-component",level:2},{value:"View Mode Toggle",id:"view-mode-toggle",level:3},{value:"Bulk Operations",id:"bulk-operations",level:3},{value:"Design Patterns",id:"design-patterns",level:2},{value:"Consistent State Management",id:"consistent-state-management",level:3},{value:"Error Handling Strategy",id:"error-handling-strategy",level:3},{value:"Loading State Management",id:"loading-state-management",level:3},{value:"Dark Mode Support",id:"dark-mode-support",level:3},{value:"Accessibility Features",id:"accessibility-features",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"user-interface-components",children:"User Interface Components"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The Dynamic JSON Visualizer's user interface is built with modular React components that handle different aspects of data interaction. Each component focuses on a specific functionality while maintaining consistent styling and user experience patterns."}),"\n",(0,t.jsx)(n.h2,{id:"fileupload-component",children:"FileUpload Component"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"FileUpload"})," component serves as the primary entry point for getting JSON data into the application. It supports multiple input methods and provides comprehensive error handling."]}),"\n",(0,t.jsx)(n.h3,{id:"input-methods",children:"Input Methods"}),"\n",(0,t.jsx)(n.p,{children:"The component supports four different ways to load JSON data:"}),"\n",(0,t.jsx)(n.h4,{id:"1-file-upload-drag--drop-or-browse",children:"1. File Upload (Drag & Drop or Browse)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const handleFileUpload = async (file: File) => {\r\n  try {\r\n    setError(null);\r\n    const content = await file.text();\r\n    const parsedData = parseJson(content);\r\n    \r\n    if (!parsedData) {\r\n      setError('Invalid JSON format. Please provide a valid JSON file.');\r\n      return;\r\n    }\r\n    \r\n    const result = await loadJsonData(parsedData, uniqueFields);\r\n    // Success feedback with detailed statistics\r\n  } catch (err) {\r\n    // Error handling\r\n  }\r\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Drag and drop support"})," - Visual feedback when dragging files over the drop zone"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File browser"})," - Traditional file input for selecting JSON files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File validation"})," - Only accepts ",(0,t.jsx)(n.code,{children:".json"})," files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Visual state changes"})," - Drop zone changes appearance during drag operations"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"2-clipboard-paste",children:"2. Clipboard Paste"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const handlePaste = async () => {\r\n  try {\r\n    const clipboardText = await navigator.clipboard.readText();\r\n    const parsedData = parseJson(clipboardText);\r\n    // Process clipboard JSON data\r\n  } catch (err) {\r\n    // Handle clipboard access errors\r\n  }\r\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Uses the Clipboard API"})," to read JSON data directly from the user's clipboard, enabling quick data import from other applications."]}),"\n",(0,t.jsx)(n.h4,{id:"3-manual-entry",children:"3. Manual Entry"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const handleManualEntry = async () => {\r\n  const jsonStr = prompt('Enter JSON data:');\r\n  if (!jsonStr) return;\r\n  \r\n  const parsedData = parseJson(jsonStr);\r\n  // Process manually entered JSON\r\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Simple prompt-based input"})," for small JSON datasets or quick testing."]}),"\n",(0,t.jsx)(n.h4,{id:"4-sample-data-loading",children:"4. Sample Data Loading"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'const handleSampleData = async () => {\r\n  try {\r\n    const response = await fetch(\'https://dummyjson.com/products\');\r\n    const data = await response.json();\r\n    const products = data.products;\r\n\r\n    await loadJsonData(products);\r\n    await setImageField(\'thumbnail\');\r\n    await setDisplayFields(["title", "description", "price", "brand", "category"]);\r\n  } catch (err) {\r\n    // Handle API errors\r\n  }\r\n};\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Loads sample product data"})," from an external API and automatically configures the application for optimal display of that data type."]}),"\n",(0,t.jsx)(n.h3,{id:"smart-feedback-system",children:"Smart Feedback System"}),"\n",(0,t.jsx)(n.p,{children:"The component provides detailed feedback about data loading operations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"let message = `Successfully loaded ${objectCount} ${objectCount === 1 ? 'object' : 'objects'}`;\r\n\r\nif (uniqueFields.length > 0) {\r\n  message += ` using ${uniqueFields.join(', ')} as unique identifiers`;\r\n  if (result) {\r\n    if (result.newCount > 0) {\r\n      message += `, ${result.newCount} new objects added`;\r\n    }\r\n    if (result.updatedCount > 0) {\r\n      message += `, ${result.updatedCount} objects replaced`;\r\n    }\r\n  }\r\n}\r\n\r\ntoast.success(message);\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Dynamic messages"})," that inform users about:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Number of objects loaded"}),"\n",(0,t.jsx)(n.li,{children:"Which fields were used as unique identifiers"}),"\n",(0,t.jsx)(n.li,{children:"How many objects were new vs. updated (when using unique fields)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.p,{children:"The component implements comprehensive error handling:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const [error, setError] = useState<string | null>(null);\r\n\r\n// Clear errors before new operations\r\nsetError(null);\r\n\r\n// Display errors both in toast and component state\r\nif (!parsedData) {\r\n  setError('Invalid JSON format. Please provide a valid JSON file.');\r\n  toast.error('Invalid JSON format. Please provide a valid JSON file.');\r\n  return;\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Dual error display"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Toast notifications"})," - Temporary, non-intrusive error messages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Component state"})," - Persistent error display within the component"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"searchbar-component",children:"SearchBar Component"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"SearchBar"})," component provides powerful search functionality with history management and saved searches."]}),"\n",(0,t.jsx)(n.h3,{id:"search-features",children:"Search Features"}),"\n",(0,t.jsx)(n.h4,{id:"real-time-input-with-deferred-search",children:"Real-time Input with Deferred Search"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const [inputValue, setInputValue] = useState(searchTerm);\r\n\r\nconst handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n  const value = e.target.value;\r\n  setInputValue(value); // Update input immediately\r\n};\r\n\r\nconst handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n  if (e.key === 'Enter') {\r\n    handleSearch(inputValue); // Search only on Enter\r\n  }\r\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Responsive input design"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Immediate visual feedback"})," - Input updates as user types"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Deliberate search execution"})," - Search only triggers on Enter key"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prevents excessive filtering"})," - Avoids performance issues with large datasets"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"regex-support",children:"Regex Support"}),"\n",(0,t.jsx)(n.p,{children:"The search automatically supports regular expressions:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Valid regex patterns"})," - Used directly for advanced pattern matching"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Invalid regex"})," - Automatically escaped and treated as literal strings"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Case insensitive"})," - All searches use the ",(0,t.jsx)(n.code,{children:"'i'"})," flag"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"search-history-management",children:"Search History Management"}),"\n",(0,t.jsx)(n.h4,{id:"automatic-history-tracking",children:"Automatic History Tracking"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const [searchHistory, setSearchHistory] = useState<string[]>(() => {\r\n  const saved = localStorage.getItem('searchHistory');\r\n  return saved ? JSON.parse(saved) : [];\r\n});\r\n\r\nconst addToHistory = (term: string) => {\r\n  if (term.trim() && !searchHistory.includes(term)) {\r\n    setSearchHistory(prev => [term, ...prev.slice(0, MAX_HISTORY_ITEMS - 1)]);\r\n  }\r\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Smart history management"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Persistent storage"})," - Uses localStorage to survive browser sessions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Duplicate prevention"})," - Doesn't add terms that already exist"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Limited size"})," - Keeps only the 5 most recent searches"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automatic ordering"})," - Most recent searches appear first"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"search-history-ui",children:"Search History UI"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'{showHistory && searchHistory.length > 0 && (\r\n  <div className="absolute top-full left-0 right-0 mt-1 bg-white dark:bg-gray-800 border rounded-md shadow-lg z-50">\r\n    <div className="p-2">\r\n      <div className="flex items-center justify-between mb-2">\r\n        <span className="text-sm font-medium">Recent Searches</span>\r\n        <button onClick={clearHistory} className="text-xs text-red-500">\r\n          Clear History\r\n        </button>\r\n      </div>\r\n      {searchHistory.map((term, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={() => handleHistoryClick(term)}\r\n          className="w-full text-left px-3 py-2 text-sm hover:bg-gray-100 rounded-md"\r\n        >\r\n          {term}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n)}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Dropdown interface"})," with:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Click to reuse"})," - Clicking a history item performs that search"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clear option"})," - Button to clear entire history"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hover effects"})," - Visual feedback for interactive elements"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"saved-searches",children:"Saved Searches"}),"\n",(0,t.jsx)(n.h4,{id:"bookmark-functionality",children:"Bookmark Functionality"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const saveSearch = (term: string) => {\r\n  if (term.trim() && !savedSearches.includes(term)) {\r\n    setSavedSearches(prev => [...prev, term]);\r\n  }\r\n};\r\n\r\nconst removeSavedSearch = (term: string) => {\r\n  setSavedSearches(prev => prev.filter(t => t !== term));\r\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Persistent bookmarks"})," for frequently used searches:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manual saving"})," - Users explicitly save searches they want to keep"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Persistent storage"})," - Saved searches survive browser sessions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Easy removal"})," - Individual saved searches can be deleted"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"saved-search-ui",children:"Saved Search UI"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'{savedSearches.length > 0 && (\r\n  <div className="flex flex-wrap gap-2 mb-4">\r\n    {savedSearches.map((term, index) => (\r\n      <div key={index} className="flex items-center bg-blue-100 dark:bg-blue-900 rounded-full">\r\n        <button\r\n          onClick={() => handleHistoryClick(term)}\r\n          className="px-3 py-1 text-sm text-blue-800 dark:text-blue-200"\r\n        >\r\n          {term}\r\n        </button>\r\n        <button\r\n          onClick={() => removeSavedSearch(term)}\r\n          className="p-1 text-blue-800 dark:text-blue-200 hover:bg-blue-200 rounded-full mr-1"\r\n        >\r\n          <BookmarkX className="h-4 w-4" />\r\n        </button>\r\n      </div>\r\n    ))}\r\n  </div>\r\n)}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Tag-like interface"})," displaying saved searches as removable chips above the search input."]}),"\n",(0,t.jsx)(n.h3,{id:"results-display",children:"Results Display"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"{searchTerm && (\r\n  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n    Found {data.length} {data.length === 1 ? 'result' : 'results'}\r\n  </div>\r\n)}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Live result count"})," that updates automatically as the filtered data changes."]}),"\n",(0,t.jsx)(n.h2,{id:"controls-component",children:"Controls Component"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Controls"})," component provides view switching, bulk operations, and application configuration."]}),"\n",(0,t.jsx)(n.h3,{id:"view-mode-toggle",children:"View Mode Toggle"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const viewModeButtons = [\r\n  { mode: 'card' as ViewMode, icon: LayoutGrid, label: 'Card View' },\r\n  { mode: 'table' as ViewMode, icon: TableIcon, label: 'Table View' }\r\n];\r\n\r\n{viewModeButtons.map(({ mode, icon: Icon, label }) => (\r\n  <button\r\n    key={mode}\r\n    onClick={() => setViewMode(mode)}\r\n    className={`p-2 rounded-md transition-colors ${\r\n      viewMode === mode \r\n        ? 'bg-blue-600 text-white' \r\n        : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\r\n    }`}\r\n    title={label}\r\n  >\r\n    <Icon className=\"h-5 w-5\" />\r\n  </button>\r\n))}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Visual toggle buttons"})," with:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Active state styling"})," - Currently selected view is highlighted"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Icon representation"})," - Grid icon for cards, table icon for table view"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tooltips"})," - Hover text explains each option"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"bulk-operations",children:"Bulk Operations"}),"\n",(0,t.jsx)(n.p,{children:"The component handles operations on multiple selected items:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'{selectedIds.length > 0 && (\r\n  <div className="flex items-center gap-2">\r\n    <span className="text-sm text-gray-600 dark:text-gray-400">\r\n      {selectedIds.length} selected\r\n    </span>\r\n    <button\r\n      onClick={() => {\r\n        deleteObjects(selectedIds);\r\n        clearSelection();\r\n      }}\r\n      className="p-2 rounded-md bg-red-600 text-white hover:bg-red-700"\r\n      title="Delete selected items"\r\n    >\r\n      <Trash2 className="h-5 w-5" />\r\n    </button>\r\n  </div>\r\n)}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Selection-aware interface"})," that:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Shows selection count"})," - Displays number of selected items"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Provides bulk actions"})," - Delete button for removing multiple items"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clears selection"})," - Automatically deselects items after operations"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"design-patterns",children:"Design Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"consistent-state-management",children:"Consistent State Management"}),"\n",(0,t.jsx)(n.p,{children:"All components use the same patterns for accessing application state:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const { \r\n  searchTerm, \r\n  setSearchTerm, \r\n  data, \r\n  loading \r\n} = useData();\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Centralized state access"})," through the custom ",(0,t.jsx)(n.code,{children:"useData"})," hook."]}),"\n",(0,t.jsx)(n.h3,{id:"error-handling-strategy",children:"Error Handling Strategy"}),"\n",(0,t.jsx)(n.p,{children:"Components implement a dual error handling approach:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User-facing errors"})," - Toast notifications for immediate feedback"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Component errors"})," - Local error state for persistent display"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Console logging"})," - Detailed error information for debugging"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"loading-state-management",children:"Loading State Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"disabled={loading}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Consistent loading states"})," where interactive elements are disabled during async operations."]}),"\n",(0,t.jsx)(n.h3,{id:"dark-mode-support",children:"Dark Mode Support"}),"\n",(0,t.jsx)(n.p,{children:"All components include dark mode styling:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'className="bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100"\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Automatic theme switching"})," based on the application's dark mode state."]}),"\n",(0,t.jsx)(n.h3,{id:"accessibility-features",children:"Accessibility Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Keyboard navigation"})," - Enter key support, tab order"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Screen reader support"})," - Proper ARIA labels and semantic HTML"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Visual feedback"})," - Hover states, focus indicators"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error communication"})," - Clear error messages and validation feedback"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These components work together to create a cohesive, user-friendly interface for JSON data visualization and management."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(6540);const t={},a=s.createContext(t);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);