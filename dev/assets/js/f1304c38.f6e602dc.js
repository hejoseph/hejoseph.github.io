"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[3715],{3051:s=>{s.exports=JSON.parse('{"tag":{"label":"abstract classes","permalink":"/dev/docs/tags/abstract-classes","allTagsPath":"/dev/docs/tags","count":1,"items":[{"id":"java/Core/OOP/interface-abstract","title":"Interfaces vs. Abstract Classes","description":"In Java\'s object-oriented programming (OOP) paradigm, both interfaces and abstract classes provide mechanisms for achieving abstraction and polymorphism. While they share some similarities, their primary purposes, capabilities, and use cases differ significantly.","permalink":"/dev/docs/java/Core/OOP/interface-abstract"}],"unlisted":false}}')}}]);