"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[3038],{2216:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"tech-related/Langchain/langchain-intro","title":"LangChain Overview","description":"langchain-intro.png","source":"@site/docs/tech-related/Langchain/langchain-intro.md","sourceDirName":"tech-related/Langchain","slug":"/tech-related/Langchain/langchain-intro","permalink":"/dev/docs/tech-related/Langchain/langchain-intro","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"langchain","permalink":"/dev/docs/tags/langchain"},{"inline":true,"label":"large language models","permalink":"/dev/docs/tags/large-language-models"},{"inline":true,"label":"orchestration framework","permalink":"/dev/docs/tags/orchestration-framework"}],"version":"current","sidebarPosition":1,"frontMatter":{"title":"LangChain Overview","sidebar_position":1,"tags":["langchain","large language models","orchestration framework"]},"sidebar":"tutorialSidebar","previous":{"title":"Hugging Face API Risks","permalink":"/dev/docs/tech-related/Huggingface/Models/models-api-risk"},"next":{"title":"LangChain Evolution","permalink":"/dev/docs/tech-related/Langchain/langchain-before-after"}}');var t=i(4848),s=i(8453);const r={title:"LangChain Overview",sidebar_position:1,tags:["langchain","large language models","orchestration framework"]},o="LangChain Overview",l={},c=[{value:"Key Themes",id:"key-themes",level:2},{value:"LLM Orchestration",id:"llm-orchestration",level:3},{value:"Simplified Development with Abstractions",id:"simplified-development-with-abstractions",level:3},{value:"Modularity and Composability",id:"modularity-and-composability",level:3},{value:"Integration with External Data",id:"integration-with-external-data",level:3},{value:"Memory Management",id:"memory-management",level:3},{value:"Important Features and Concepts",id:"important-features-and-concepts",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Related Tools",id:"related-tools",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"langchain-overview",children:"LangChain Overview"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"langchain-intro.png",src:i(7885).A+"",width:"512",height:"360"})}),"\n",(0,t.jsx)(n.p,{children:"LangChain is an open-source orchestration framework designed to simplify the development of applications leveraging large language models (LLMs). Launched by Harrison Chase in October 2022, LangChain quickly became one of the fastest-growing open-source projects on GitHub. While the initial hype has settled, LangChain remains highly valuable due to its ability to provide a generic interface for nearly any LLM and to integrate these models with external data sources and workflows."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"key-themes",children:"Key Themes"}),"\n",(0,t.jsx)(n.h3,{id:"llm-orchestration",children:"LLM Orchestration"}),"\n",(0,t.jsx)(n.p,{children:"LangChain enables the coordination of multiple LLMs, allowing developers to use different models for interpreting user queries and generating responses. It provides a centralized development environment for building LLM-powered applications."}),"\n",(0,t.jsx)(n.h3,{id:"simplified-development-with-abstractions",children:"Simplified Development with Abstractions"}),"\n",(0,t.jsx)(n.p,{children:"LangChain streamlines LLM application programming through abstractions. These abstractions represent common steps and concepts needed to work with language models, much like a thermostat abstracts away the complexity of temperature control."}),"\n",(0,t.jsx)(n.h3,{id:"modularity-and-composability",children:"Modularity and Composability"}),"\n",(0,t.jsx)(n.p,{children:'LangChain is built from various modules that can be combined ("chained") to create complex applications. Each module represents a key element in LLM application development.'}),"\n",(0,t.jsx)(n.h3,{id:"integration-with-external-data",children:"Integration with External Data"}),"\n",(0,t.jsx)(n.p,{children:'A crucial feature of LangChain is its ability to let LLMs access external data sources not included in their training data. This is managed through the concept of "indexes."'}),"\n",(0,t.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,t.jsx)(n.p,{children:"LangChain provides utilities to add memory to applications, allowing LLMs to retain conversation history\u2014either the full conversation or a summarized version."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"important-features-and-concepts",children:"Important Features and Concepts"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multilingual Support:"})," Available as Python and JavaScript libraries."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Generic LLM Interface:"})," Offers a standard interface for interacting with almost any LLM, whether proprietary (e.g., GPT-4) or open-source (e.g., LLaMA 2). Typically, an API key is required."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prompts and PromptTemplate:"})," Prompts are instructions given to LLMs. The ",(0,t.jsx)(n.code,{children:"PromptTemplate"})," class formalizes prompt composition, allowing inclusion of instructions, examples (few-shot prompting), or output formats without manual coding."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Chains:"})," The core of LangChain workflows. Chains combine LLMs with other components, executing a sequence of functions where the output of one can be the input for the next. Different steps can use different prompts, parameters, or even models."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Indexes and External Data Sources:"}),' "Indexes" collectively refer to external data sources in LangChain.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Document Loaders:"})," Import data from third-party applications (e.g., Dropbox, Google Drive, YouTube transcripts, Airtable, pandas, MongoDB)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Vector Databases:"})," Support for vector databases, which store data as vector embeddings for efficient retrieval."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Text Splitters:"})," Tools to divide text into semantically meaningful chunks."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Agents:"})," Agents use an LLM as a reasoning engine to determine which actions to take and when. When building an agent chain, you specify available tools, user input, and previously executed steps."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Chatbots:"})," Provide context and integrate chatbots into existing communication channels and workflows."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Summarization:"})," Summarize various types of text, from academic articles to emails."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Question Answering:"})," Retrieve relevant information from specific documents or specialized knowledge bases."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Augmentation:"})," Generate synthetic data for machine learning."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Virtual Agents:"})," Enable LLMs to autonomously determine next steps and act using robotic process automation (RPA)."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"related-tools",children:"Related Tools"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LangServe:"})," Create chains as REST APIs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LangSmith:"})," Tools for monitoring, evaluating, and debugging LangChain applications."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"LangChain is a powerful and flexible framework that significantly simplifies the process of building applications leveraging large language models. By providing abstractions, modular components, and integration capabilities with external data and workflows, LangChain makes LLM-based application development more accessible and efficient. Its tools and APIs are designed to streamline and enhance the developer experience in the rapidly evolving field of AI-powered applications."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7885:(e,n,i)=>{i.d(n,{A:()=>a});const a=i.p+"assets/images/langchain-intro-90331557381763cdf492edafeb3972fc.png"},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var a=i(6540);const t={},s=a.createContext(t);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);