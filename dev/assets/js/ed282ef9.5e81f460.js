"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[8942],{609:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"SQL/Basics/filtering","title":"Filtering (WHERE, LIKE, IN, BETWEEN)","description":"Filtering is a key part of writing useful SQL queries. It allows you to control which rows are returned or affected by your statements. The WHERE clause, combined with operators like LIKE, IN, and BETWEEN, makes filtering powerful and flexible.","source":"@site/docs/SQL/2-Basics/3-filtering.md","sourceDirName":"SQL/2-Basics","slug":"/SQL/Basics/filtering","permalink":"/dev/docs/SQL/Basics/filtering","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Basic Statements: SELECT, INSERT, UPDATE, DELETE","permalink":"/dev/docs/SQL/Basics/basic-statement"},"next":{"title":"Sorting and Aliasing","permalink":"/dev/docs/SQL/Basics/sorting-alias"}}');var i=s(4848),l=s(8453);const c={},d="Filtering (WHERE, LIKE, IN, BETWEEN)",t={},o=[{value:"WHERE",id:"where",level:2},{value:"LIKE",id:"like",level:2},{value:"IN",id:"in",level:2},{value:"BETWEEN",id:"between",level:2},{value:"Combining Filters",id:"combining-filters",level:2},{value:"Summary",id:"summary",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"filtering-where-like-in-between",children:"Filtering (WHERE, LIKE, IN, BETWEEN)"})}),"\n",(0,i.jsxs)(n.p,{children:["Filtering is a key part of writing useful SQL queries. It allows you to control which rows are returned or affected by your statements. The ",(0,i.jsx)(n.code,{children:"WHERE"})," clause, combined with operators like ",(0,i.jsx)(n.code,{children:"LIKE"}),", ",(0,i.jsx)(n.code,{children:"IN"}),", and ",(0,i.jsx)(n.code,{children:"BETWEEN"}),", makes filtering powerful and flexible."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"where",children:"WHERE"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"WHERE"})," clause filters rows based on a condition."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Basic Syntax:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT column1, column2\r\nFROM table_name\r\nWHERE condition;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM employees\r\nWHERE department = 'Sales';\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Key Points:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Used with ",(0,i.jsx)(n.code,{children:"SELECT"}),", ",(0,i.jsx)(n.code,{children:"UPDATE"}),", ",(0,i.jsx)(n.code,{children:"DELETE"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Conditions can use ",(0,i.jsx)(n.code,{children:"="}),", ",(0,i.jsx)(n.code,{children:"<>"}),", ",(0,i.jsx)(n.code,{children:"<"}),", ",(0,i.jsx)(n.code,{children:">"}),", ",(0,i.jsx)(n.code,{children:"<="}),", ",(0,i.jsx)(n.code,{children:">="}),", ",(0,i.jsx)(n.code,{children:"AND"}),", ",(0,i.jsx)(n.code,{children:"OR"}),", ",(0,i.jsx)(n.code,{children:"NOT"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"like",children:"LIKE"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"LIKE"})," operator is used in the ",(0,i.jsx)(n.code,{children:"WHERE"})," clause to search for a pattern in a column, often combined with wildcard characters."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Basic Syntax:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM table_name\r\nWHERE column LIKE pattern;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM customers\r\nWHERE name LIKE 'A%';\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Common Wildcards:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"%"})," : Represents zero or more characters."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"_"})," : Represents a single character."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM products\r\nWHERE product_code LIKE 'AB_1%';\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"in",children:"IN"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"IN"})," operator tests whether a value matches any value in a list of values."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Basic Syntax:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM table_name\r\nWHERE column IN (value1, value2, ...);\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM orders\r\nWHERE status IN ('Pending', 'Processing');\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Key Points:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Can be used with subqueries."}),"\n",(0,i.jsxs)(n.li,{children:["Makes complex ",(0,i.jsx)(n.code,{children:"OR"})," conditions more concise."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"between",children:"BETWEEN"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"BETWEEN"})," operator selects values within a range (inclusive)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Basic Syntax:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM table_name\r\nWHERE column BETWEEN value1 AND value2;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM employees\r\nWHERE hire_date BETWEEN '2023-01-01' AND '2023-12-31';\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Key Points:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Works for numeric, date, and text ranges."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"BETWEEN"})," is inclusive of both endpoints."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"combining-filters",children:"Combining Filters"}),"\n",(0,i.jsxs)(n.p,{children:["You can combine ",(0,i.jsx)(n.code,{children:"WHERE"}),", ",(0,i.jsx)(n.code,{children:"LIKE"}),", ",(0,i.jsx)(n.code,{children:"IN"}),", and ",(0,i.jsx)(n.code,{children:"BETWEEN"})," with ",(0,i.jsx)(n.code,{children:"AND"}),", ",(0,i.jsx)(n.code,{children:"OR"}),", and parentheses for more complex filters."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM products\r\nWHERE category = 'Books'\r\n  AND price BETWEEN 10 AND 50\r\n  AND title LIKE 'SQL%';\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Filter"}),(0,i.jsx)(n.th,{children:"Purpose"}),(0,i.jsx)(n.th,{children:"Example"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"WHERE"})}),(0,i.jsx)(n.td,{children:"Filter rows"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"WHERE salary > 50000"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"LIKE"})}),(0,i.jsx)(n.td,{children:"Match patterns"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"LIKE 'A%'"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"IN"})}),(0,i.jsx)(n.td,{children:"Match any in a list"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"IN ('Active', 'Pending')"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"BETWEEN"})}),(0,i.jsx)(n.td,{children:"Match a range"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"BETWEEN 1 AND 10"})})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Filtering is a core skill for writing precise, efficient queries. Master these operators to get exactly the data you need."})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>d});var r=s(6540);const i={},l=r.createContext(i);function c(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);