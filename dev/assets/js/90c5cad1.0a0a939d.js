"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[1285],{866:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Portfolio/YT-DL-Batch/chrome-extension/architecture","title":"Chrome Extension Architecture","description":"Overview","source":"@site/docs/Portfolio/YT-DL-Batch/chrome-extension/architecture.md","sourceDirName":"Portfolio/YT-DL-Batch/chrome-extension","slug":"/Portfolio/YT-DL-Batch/chrome-extension/architecture","permalink":"/dev/docs/Portfolio/YT-DL-Batch/chrome-extension/architecture","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"YouTube Download Tools - Project Introduction","permalink":"/dev/docs/Portfolio/YT-DL-Batch/introduction"},"next":{"title":"Data Formats & Communication Protocol","permalink":"/dev/docs/Portfolio/YT-DL-Batch/data-formats/communication-protocol"}}');var t=s(4848),i=s(8453);const o={},c="Chrome Extension Architecture",a={},l=[{value:"Overview",id:"overview",level:2},{value:"Component Structure",id:"component-structure",level:2},{value:"1. Manifest Configuration (<code>manifest.json</code>)",id:"1-manifest-configuration-manifestjson",level:3},{value:"2. Service Worker (<code>background.js</code>)",id:"2-service-worker-backgroundjs",level:3},{value:"Context Menu Management",id:"context-menu-management",level:4},{value:"URL Processing Logic",id:"url-processing-logic",level:4},{value:"3. Content Script (<code>js/content.js</code>)",id:"3-content-script-jscontentjs",level:3},{value:"Visual Indicators",id:"visual-indicators",level:4},{value:"DOM Change Detection",id:"dom-change-detection",level:4},{value:"4. Popup Interface (<code>popup.html</code> + <code>js/popup.js</code>)",id:"4-popup-interface-popuphtml--jspopupjs",level:3},{value:"User Interface Elements",id:"user-interface-elements",level:4},{value:"Data Management Logic",id:"data-management-logic",level:4},{value:"Data Flow Architecture",id:"data-flow-architecture",level:2},{value:"Storage Strategy",id:"storage-strategy",level:3},{value:"Event-Driven Communication",id:"event-driven-communication",level:3},{value:"Technical Considerations",id:"technical-considerations",level:2},{value:"Performance Optimizations",id:"performance-optimizations",level:3},{value:"Browser Compatibility",id:"browser-compatibility",level:3},{value:"Security Features",id:"security-features",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"chrome-extension-architecture",children:"Chrome Extension Architecture"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The YouTube Copy Link Chrome Extension is built using Manifest V3 and consists of four main components that work together to provide seamless YouTube video collection functionality. The extension follows modern Chrome extension best practices with a service worker architecture."}),"\n",(0,t.jsx)(n.h2,{id:"component-structure",children:"Component Structure"}),"\n",(0,t.jsxs)(n.h3,{id:"1-manifest-configuration-manifestjson",children:["1. Manifest Configuration (",(0,t.jsx)(n.code,{children:"manifest.json"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"The manifest file defines the extension's capabilities and structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\r\n  "name": "Youtube Links Copy",\r\n  "description": "Help you classify youtube links for download later",\r\n  "version": "1.1",\r\n  "manifest_version": 3,\r\n  "permissions": ["activeTab","contextMenus", "storage", "unlimitedStorage"],\r\n  "background": {\r\n    "service_worker": "background.js",\r\n    "type": "module"\r\n  },\r\n  "action": {\r\n    "default_popup": "popup.html"\r\n  },\r\n  "content_scripts": [\r\n    {\r\n      "matches": ["https://www.youtube.com/*"],\r\n      "js": ["js/content.js"],\r\n      "run_at": "document_idle"\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key Features:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manifest V3"}),": Uses the latest Chrome extension standard with service workers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Permissions"}),": Requests minimal necessary permissions for tab access, context menus, and storage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Content Script Injection"}),": Automatically runs on YouTube pages when the DOM is ready"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Action Popup"}),": Provides a popup interface accessible from the browser toolbar"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"2-service-worker-backgroundjs",children:["2. Service Worker (",(0,t.jsx)(n.code,{children:"background.js"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"The background script manages the extension's core functionality and handles events:"}),"\n",(0,t.jsx)(n.h4,{id:"context-menu-management",children:"Context Menu Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"function buildContextMenu() {\r\n  const params = chrome.storage.sync.get(\"params\", function (promise) {\r\n    const params = promise.params;\r\n    if (params === undefined) return;\r\n    let paramsArr = [...new Set(params.split('\\n').filter(Boolean))]\r\n    paramsArr.sort((a, b) => a.localeCompare(b, 'en', { numeric: true }));\r\n    for (const param of paramsArr) {\r\n      chrome.contextMenus.create({\r\n        id: param,\r\n        title: param,\r\n        type: 'normal',\r\n        contexts: ['all']\r\n      });\r\n    }\r\n  });\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Responsibilities:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Context Menu Creation"}),": Builds right-click menu items based on user-defined parameters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Storage Event Handling"}),": Listens for changes to user parameters and updates context menus accordingly"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Link Processing"}),": Extracts and normalizes YouTube video URLs when context menu items are clicked"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Persistence"}),": Stores collected video links and IDs in Chrome's storage APIs"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"url-processing-logic",children:"URL Processing Logic"}),"\n",(0,t.jsx)(n.p,{children:"The service worker includes sophisticated URL handling:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Extracts 11-character YouTube video IDs using regex patterns"}),"\n",(0,t.jsx)(n.li,{children:"Normalizes URLs to standard YouTube watch format"}),"\n",(0,t.jsx)(n.li,{children:"Maintains a deduplicated list of video IDs for tracking purposes"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"3-content-script-jscontentjs",children:["3. Content Script (",(0,t.jsx)(n.code,{children:"js/content.js"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"The content script runs on YouTube pages and provides visual feedback:"}),"\n",(0,t.jsx)(n.h4,{id:"visual-indicators",children:"Visual Indicators"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const square = document.createElement('div');\r\nsquare.style.width = '50px';\r\nsquare.style.height = '50px';\r\nsquare.style.backgroundColor = 'rgba(0, 128, 0, 0.5)';\r\nsquare.style.position = 'absolute';\r\nsquare.style.top = '0';\r\nsquare.style.left = '0';\r\nsquare.style.zIndex = '9999';\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key Features:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DOM Monitoring"}),": Uses MutationObserver to detect when YouTube's dynamic content changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Visual Feedback"}),": Adds green overlay squares to video thumbnails that have been previously collected"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance Optimization"}),": Implements throttling to prevent excessive function calls during rapid DOM changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Storage Integration"}),": Retrieves the list of seen video IDs from local storage"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"dom-change-detection",children:"DOM Change Detection"}),"\n",(0,t.jsx)(n.p,{children:"The script uses the modern MutationObserver API to handle YouTube's single-page application behavior:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const observer = new MutationObserver(mutationCallback);\r\nobserver.observe(document.documentElement, { childList: true, subtree: true });\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"4-popup-interface-popuphtml--jspopupjs",children:["4. Popup Interface (",(0,t.jsx)(n.code,{children:"popup.html"})," + ",(0,t.jsx)(n.code,{children:"js/popup.js"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"The popup provides the main user interface for managing the extension:"}),"\n",(0,t.jsx)(n.h4,{id:"user-interface-elements",children:"User Interface Elements"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters Textarea"}),": Where users define custom category labels"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Links Display"}),": Shows collected videos organized by category"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Control Buttons"}),": Save, Clear, and Copy functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"IDs Management"}),": Displays and manages the list of seen video IDs"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"data-management-logic",children:"Data Management Logic"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const newText = Object.entries(listObj)\r\n  .sort(([keyA], [keyB]) => keyA.localeCompare(keyB))\r\n  .map(([key, value]) => `${key}\\n${value.filter(Boolean).join('\\n')}`)\r\n  .join('\\n');\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Functionality:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Real-time Updates"}),": Automatically loads and displays current data from storage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Formatting"}),": Converts internal storage format to user-friendly display format"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Export Capability"}),": Formats collected links for easy copying to the Java downloader"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Validation"}),": Ensures data integrity when saving user inputs"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"data-flow-architecture",children:"Data Flow Architecture"}),"\n",(0,t.jsx)(n.h3,{id:"storage-strategy",children:"Storage Strategy"}),"\n",(0,t.jsx)(n.p,{children:"The extension uses two Chrome storage APIs:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"chrome.storage.sync"}),": For user preferences and collected links (synced across devices)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"chrome.storage.local"}),": For video ID tracking (device-specific)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"event-driven-communication",children:"Event-Driven Communication"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User defines parameters"})," \u2192 Popup saves to sync storage \u2192 Background script updates context menus"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User right-clicks video"})," \u2192 Context menu click \u2192 Background script processes URL and stores data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"YouTube page loads"})," \u2192 Content script checks for seen videos \u2192 Visual indicators added"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User opens popup"})," \u2192 Interface loads current data \u2192 User can copy formatted output"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"technical-considerations",children:"Technical Considerations"}),"\n",(0,t.jsx)(n.h3,{id:"performance-optimizations",children:"Performance Optimizations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Debouncing"}),": Content script limits DOM observation frequency"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Deduplication"}),": Uses Set operations to prevent duplicate entries"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lazy Loading"}),": Only processes data when needed"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"browser-compatibility",children:"Browser Compatibility"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manifest V3"}),": Ensures future compatibility with Chrome's extension platform"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Modern APIs"}),": Uses contemporary web APIs like MutationObserver and Clipboard API"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"}),": Includes fallbacks for storage and clipboard operations"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"security-features",children:"Security Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minimal Permissions"}),": Requests only necessary permissions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Content Security"}),": Runs content scripts only on YouTube domains"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Isolation"}),": Uses Chrome's secure storage APIs instead of localStorage"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This architecture provides a robust, efficient, and user-friendly system for collecting and organizing YouTube video links while maintaining good performance and security practices."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var r=s(6540);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);