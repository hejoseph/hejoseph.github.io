"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[8595],{3987:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Portfolio/NoteApp/Frontend/ui-components","title":"UI Components","description":"Overview","source":"@site/docs/Portfolio/NoteApp/Frontend/ui-components.md","sourceDirName":"Portfolio/NoteApp/Frontend","slug":"/Portfolio/NoteApp/Frontend/ui-components","permalink":"/dev/docs/Portfolio/NoteApp/Frontend/ui-components","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Main Dashboard","permalink":"/dev/docs/Portfolio/NoteApp/Frontend/main-dashboard"},"next":{"title":"Frontend Utilities","permalink":"/dev/docs/Portfolio/NoteApp/Frontend/utilities"}}');var r=s(4848),i=s(8453);const l={},a="UI Components",o={},d=[{value:"Overview",id:"overview",level:2},{value:"What are UI Components?",id:"what-are-ui-components",level:2},{value:"Card Components",id:"card-components",level:2},{value:"NoteCard Component",id:"notecard-component",level:3},{value:"Props Interface",id:"props-interface",level:4},{value:"Key Features",id:"key-features",level:4},{value:"ProfileInfo Component",id:"profileinfo-component",level:3},{value:"Component Features",id:"component-features",level:4},{value:"EmptyCard Component",id:"emptycard-component",level:3},{value:"Usage Scenarios",id:"usage-scenarios",level:4},{value:"Design Features",id:"design-features",level:4},{value:"Input Components",id:"input-components",level:2},{value:"TagInput Component",id:"taginput-component",level:3},{value:"State Management",id:"state-management",level:4},{value:"Tag Operations",id:"tag-operations",level:4},{value:"User Interface",id:"user-interface",level:4},{value:"Component Design Patterns",id:"component-design-patterns",level:2},{value:"Props Interface Design",id:"props-interface-design",level:3},{value:"State Management Patterns",id:"state-management-patterns",level:3},{value:"Event Handling Patterns",id:"event-handling-patterns",level:3},{value:"Styling and Visual Design",id:"styling-and-visual-design",level:2},{value:"CSS Framework",id:"css-framework",level:3},{value:"Design Consistency",id:"design-consistency",level:3},{value:"Connection to Other Components",id:"connection-to-other-components",level:2},{value:"Parent-Child Communication",id:"parent-child-communication",level:3},{value:"Integration Points",id:"integration-points",level:3},{value:"Reusability",id:"reusability",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"ui-components",children:"UI Components"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The Notes App frontend uses a collection of reusable UI components that handle specific interface elements and user interactions. These components follow React best practices for modularity, reusability, and clear separation of concerns."}),"\n",(0,r.jsx)(n.h2,{id:"what-are-ui-components",children:"What are UI Components?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"UI Components"})," are self-contained pieces of the user interface that:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Encapsulate specific functionality"})," like displaying data or handling user input"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Accept props"})," to customize their behavior and appearance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Emit events"})," through callback functions to communicate with parent components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Maintain their own internal state"})," when needed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Provide consistent styling"})," and behavior across the application"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"card-components",children:"Card Components"}),"\n",(0,r.jsx)(n.h3,{id:"notecard-component",children:"NoteCard Component"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File"}),": ",(0,r.jsx)(n.code,{children:"frontend/notes-app/src/components/Cards/NoteCard.jsx"})]}),"\n",(0,r.jsx)(n.p,{children:"The NoteCard component displays individual notes in a card format with actions for editing, deleting, and pinning."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const NoteCard = ({ title, date, content, tags, isPinned, onEdit, onDelete, onPinNote }) => {\r\n  return (\r\n    <div className="border rounded p-4 bg-white hover:shadow:xl transition-all ease-in-out">\r\n      <div className="flex items-center justify-between">\r\n        <div>\r\n          <h6 className="text-sm font-medium">{title}</h6>\r\n          <span className="text-xs text-slate-500">{moment(date).format("Do MMM YYYY")}</span>\r\n        </div>\r\n\r\n        <MdOutlinePushPin className={`icon-btn ${isPinned ? \'text-primary\' : \'text-slate-300\'}`} onClick={onPinNote}/>\r\n      </div>\r\n        \r\n      <p className="text-xs text-slate-600 mt-2">{content?.slice(0,60)}</p>\r\n      <div className="flex items-center justify-between mt-2">\r\n        <div className="text-xs text-slate-500">{tags.map((item) => `#${item} `)}</div>\r\n        <div className="flex items-center gap-2">\r\n          <MdCreate \r\n            className="icon-btn hover:text-green-600"\r\n            onClick={onEdit}\r\n          />\r\n          <MdDelete \r\n            className="icon-btn hover:text-red-500"\r\n            onClick={onDelete} \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\n'})}),"\n",(0,r.jsx)(n.h4,{id:"props-interface",children:"Props Interface"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"title"})}),": The note's title text"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"date"})}),": Creation or modification timestamp"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"content"})}),": The note's main content text"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"tags"})}),": Array of tag strings"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"isPinned"})}),": Boolean indicating if the note is pinned"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"onEdit"})}),": Callback function triggered when edit button is clicked"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"onDelete"})}),": Callback function triggered when delete button is clicked"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"onPinNote"})}),": Callback function triggered when pin button is clicked"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Date Formatting"}),": Uses Moment.js library to format dates"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'{moment(date).format("Do MMM YYYY")}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"moment(date)"})}),": Creates a Moment object from the date"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:'.format("Do MMM YYYY")'})}),': Formats as "1st Jan 2024"']}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Content Truncation"}),": Limits displayed content to 60 characters"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"{content?.slice(0,60)}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"?."})}),": Optional chaining prevents errors if content is null/undefined"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:".slice(0,60)"})}),": Takes first 60 characters of the content"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Conditional Styling"}),": Pin button changes appearance based on state"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"className={`icon-btn ${isPinned ? 'text-primary' : 'text-slate-300'}`}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Template literals"}),": Uses backticks for string interpolation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Conditional classes"}),": Different colors for pinned vs unpinned states"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tag Display"}),": Maps over tags array to display formatted tags"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"{tags.map((item) => `#${item} `)}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:".map()"})}),": Transforms each tag into a formatted string"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Template literals"}),": Adds # prefix to each tag"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"profileinfo-component",children:"ProfileInfo Component"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File"}),": ",(0,r.jsx)(n.code,{children:"frontend/notes-app/src/components/Cards/ProfileInfo.jsx"})]}),"\n",(0,r.jsx)(n.p,{children:"Displays user profile information with avatar and logout functionality."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const ProfileInfo = ({userInfo, onLogout}) => {\r\n  return (\r\n    <div className="flex items-center gap-3">\r\n        <div className="w-12 h-12 flex items-center justify-center rounded-full text-slate-950 font-medium bg-slate-100">\r\n          {getInitials(userInfo?.fullName)}\r\n        </div>\r\n\r\n        <div>\r\n            <p className="text-sm font-medium">{userInfo?.fullName}</p>\r\n            <button className="" onClick={onLogout}>\r\n                Logout\r\n            </button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"component-features",children:"Component Features"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Avatar Generation"}),": Creates a circular avatar with user initials"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fixed dimensions"}),": ",(0,r.jsx)(n.code,{children:"w-12 h-12"})," creates a 48x48 pixel circle"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Centered content"}),": Flexbox centers the initials within the circle"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Helper function"}),": ",(0,r.jsx)(n.code,{children:"getInitials()"})," extracts initials from full name"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"User Information Display"}),": Shows full name and logout option"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optional chaining"}),": ",(0,r.jsx)(n.code,{children:"userInfo?.fullName"})," safely accesses nested properties"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Callback integration"}),": ",(0,r.jsx)(n.code,{children:"onLogout"})," prop allows parent to handle logout logic"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"emptycard-component",children:"EmptyCard Component"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File"}),": ",(0,r.jsx)(n.code,{children:"frontend/notes-app/src/components/EmptyCard/EmptyCard.jsx"})]}),"\n",(0,r.jsx)(n.p,{children:"A reusable component for displaying empty states with images and messages."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const EmptyCard = ({imgSrc, message}) => {\r\n  return (\r\n    <div className="flex flex-col items-center justify-center mt-20">\r\n      <img src={imgSrc} alt="No notes" className="w-60" />\r\n      <p className="w-1/2 text-sm font-medium text-slate-700 text-center leading-7 mt-5">\r\n        {message}\r\n      </p>\r\n    </div>\r\n  )\r\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"usage-scenarios",children:"Usage Scenarios"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"No Notes State"}),": When user has no notes created\r\n",(0,r.jsx)(n.strong,{children:"No Search Results"}),": When search query returns no matches\r\n",(0,r.jsx)(n.strong,{children:"Loading States"}),": While data is being fetched"]}),"\n",(0,r.jsx)(n.h4,{id:"design-features",children:"Design Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Centered layout"}),": Flexbox centers content vertically and horizontally"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Visual hierarchy"}),": Large image followed by descriptive text"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responsive text"}),": ",(0,r.jsx)(n.code,{children:"w-1/2"})," makes text width responsive to container"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Accessibility"}),": Proper alt text for screen readers"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"input-components",children:"Input Components"}),"\n",(0,r.jsx)(n.h3,{id:"taginput-component",children:"TagInput Component"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File"}),": ",(0,r.jsx)(n.code,{children:"frontend/notes-app/src/components/Input/TagInput.jsx"})]}),"\n",(0,r.jsx)(n.p,{children:"A specialized input component for managing tags with add and remove functionality."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const TagInput = ({ tags, setTags }) => {\r\n  const [inputValue, setInputValue] = useState("");\r\n  \r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const addNewTag = () => {\r\n    setTags([...tags, inputValue.trim()]);\r\n    setInputValue("");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === "Enter") {\r\n      addNewTag();\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    setTags(tags.filter((tag) => tag !== tagToRemove))\r\n  };\n'})}),"\n",(0,r.jsx)(n.h4,{id:"state-management",children:"State Management"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Local State"}),": ",(0,r.jsx)(n.code,{children:"inputValue"})," manages the current input field value\r\n",(0,r.jsx)(n.strong,{children:"Parent State"}),": ",(0,r.jsx)(n.code,{children:"tags"})," and ",(0,r.jsx)(n.code,{children:"setTags"})," are controlled by parent component"]}),"\n",(0,r.jsx)(n.h4,{id:"tag-operations",children:"Tag Operations"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Adding Tags"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const addNewTag = () => {\r\n  setTags([...tags, inputValue.trim()]);\r\n  setInputValue("");\r\n};\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spread operator"}),": ",(0,r.jsx)(n.code,{children:"...tags"})," creates a new array with existing tags"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:".trim()"})}),": Removes whitespace from input"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"State reset"}),": Clears input field after adding"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Removing Tags"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const handleRemoveTag = (tagToRemove) => {\r\n  setTags(tags.filter((tag) => tag !== tagToRemove))\r\n};\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:".filter()"})}),": Creates new array excluding the specified tag"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Immutable updates"}),": Doesn't modify original array"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Keyboard Support"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const handleKeyDown = (e) => {\r\n  if (e.key === "Enter") {\r\n    addNewTag();\r\n  }\r\n};\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enter key"}),": Allows adding tags without clicking button"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event handling"}),": Checks specific key press"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"user-interface",children:"User Interface"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tag Display"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'{tags?.length > 0 && (\r\n  <div className="flex items-center gap-2 flex-wrap mt-2">\r\n    {tags.map((tag, index) => ( \r\n      <span key={index} className="flex items-center gap-2 text-sm text-slate-900 bg-slate-100 px-3 py-1 rounded">\r\n        # {tag}\r\n        <button onClick={() => {\r\n          handleRemoveTag(tag);\r\n        }}>\r\n          <MdClose />\r\n        </button>\r\n      </span>\r\n    ))}\r\n  </div>\r\n)}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features Explained"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Conditional rendering"}),": Only shows tags section if tags exist"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flex wrap"}),": Tags wrap to new lines when needed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Individual removal"}),": Each tag has its own remove button"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Visual styling"}),": Tags appear as rounded chips with # prefix"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Input Section"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<div className="flex items-center gap-4 mt-3">\r\n  <input\r\n    type="text"\r\n    value={inputValue}\r\n    className="text-sm bg-transparent border px-3 py-2 rounded outline-none"\r\n    placeholder="Add tags"\r\n    onChange={handleInputChange}\r\n    onKeyDown={handleKeyDown}\r\n  />\r\n  <button className="w-8 h-8 flex items-center justify-center rounded border border-blue-700 hover:bg-blue-700"\r\n    onClick={() => {\r\n      addNewTag();\r\n    }}\r\n  >\r\n    <MdAdd className="text-2xl text-blue-700 hover:text-white" />\r\n  </button>\r\n</div>\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Input Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Controlled input"}),": Value managed by React state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event handlers"}),": Responds to typing and key presses"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add button"}),": Visual button for adding tags"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hover effects"}),": Button changes appearance on hover"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"component-design-patterns",children:"Component Design Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"props-interface-design",children:"Props Interface Design"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Callback Props"}),": Components receive functions to communicate with parents"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// NoteCard receives multiple callback functions\r\nconst NoteCard = ({ title, date, content, tags, isPinned, onEdit, onDelete, onPinNote })\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Data Props"}),": Components receive data to display"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// EmptyCard receives display data\r\nconst EmptyCard = ({imgSrc, message})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"State Props"}),": Components receive state and state setters"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// TagInput receives both state and setter\r\nconst TagInput = ({ tags, setTags })\n"})}),"\n",(0,r.jsx)(n.h3,{id:"state-management-patterns",children:"State Management Patterns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Local State"}),": Components manage their own internal state when needed"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const [inputValue, setInputValue] = useState("");\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Lifted State"}),": Important state is managed by parent components"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// Tags state managed by parent, passed down as props\r\nconst [tags, setTags] = useState(noteData?.tags || []);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"event-handling-patterns",children:"Event Handling Patterns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Event Delegation"}),": Parent components handle events from children"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// Parent defines the handler, child calls it\r\n<NoteCard onEdit={() => handleEdit(note)} />\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Event Prevention"}),": Components handle their own simple events"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// TagInput handles its own input changes\r\nconst handleInputChange = (e) => {\r\n  setInputValue(e.target.value);\r\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"styling-and-visual-design",children:"Styling and Visual Design"}),"\n",(0,r.jsx)(n.h3,{id:"css-framework",children:"CSS Framework"}),"\n",(0,r.jsxs)(n.p,{children:["The application uses ",(0,r.jsx)(n.strong,{children:"Tailwind CSS"})," for styling:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Utility classes"}),": ",(0,r.jsx)(n.code,{children:"flex"}),", ",(0,r.jsx)(n.code,{children:"items-center"}),", ",(0,r.jsx)(n.code,{children:"justify-between"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responsive design"}),": ",(0,r.jsx)(n.code,{children:"w-1/2"}),", ",(0,r.jsx)(n.code,{children:"mt-20"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Color system"}),": ",(0,r.jsx)(n.code,{children:"text-slate-500"}),", ",(0,r.jsx)(n.code,{children:"bg-slate-100"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interactive states"}),": ",(0,r.jsx)(n.code,{children:"hover:shadow-xl"}),", ",(0,r.jsx)(n.code,{children:"hover:text-green-600"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"design-consistency",children:"Design Consistency"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Spacing"}),": Consistent use of margin and padding classes\r\n",(0,r.jsx)(n.strong,{children:"Colors"}),": Standardized color palette using Tailwind's slate colors\r\n",(0,r.jsx)(n.strong,{children:"Typography"}),": Consistent text sizes and weights\r\n",(0,r.jsx)(n.strong,{children:"Interactive elements"}),": Hover effects on clickable items"]}),"\n",(0,r.jsx)(n.h2,{id:"connection-to-other-components",children:"Connection to Other Components"}),"\n",(0,r.jsx)(n.h3,{id:"parent-child-communication",children:"Parent-Child Communication"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Props down"}),": Data flows from parent to child components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Events up"}),": User interactions bubble up through callback functions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"State lifting"}),": Shared state managed at appropriate parent level"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"integration-points",children:"Integration Points"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Home component"}),": Uses NoteCard to display notes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Navbar"}),": Uses ProfileInfo for user display"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AddEditNotes"}),": Uses TagInput for tag management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dashboard"}),": Uses EmptyCard for empty states"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"reusability",children:"Reusability"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"EmptyCard"}),": Used for multiple empty states"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TagInput"}),": Reusable across different forms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ProfileInfo"}),": Could be used in multiple locations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NoteCard"}),": Template for displaying any note data"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var t=s(6540);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);