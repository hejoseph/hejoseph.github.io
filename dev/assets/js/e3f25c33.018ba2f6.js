"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[3997],{9667:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Java","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Core","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"OOP","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Java OOP Principles","href":"/dev/docs/java/Core/OOP/java-oop-principles","docId":"java/Core/OOP/java-oop-principles","unlisted":false},{"type":"link","label":"Interfaces vs. Abstract Classes","href":"/dev/docs/java/Core/OOP/interface-abstract","docId":"java/Core/OOP/interface-abstract","unlisted":false},{"type":"link","label":"Composition Over Inheritance","href":"/dev/docs/java/Core/OOP/composition-inheritance","docId":"java/Core/OOP/composition-inheritance","unlisted":false},{"type":"link","label":"SOLID Principles","href":"/dev/docs/java/Core/OOP/solid-principles","docId":"java/Core/OOP/solid-principles","unlisted":false},{"type":"link","label":"Object Equality - equals() and hashCode()","href":"/dev/docs/java/Core/OOP/object-equality","docId":"java/Core/OOP/object-equality","unlisted":false},{"type":"link","label":"Immutability - final and Defensive Copies","href":"/dev/docs/java/Core/OOP/immutability","docId":"java/Core/OOP/immutability","unlisted":false},{"type":"link","label":"Access Modifiers & Visibility","href":"/dev/docs/java/Core/OOP/access-modifiers-visibility","docId":"java/Core/OOP/access-modifiers-visibility","unlisted":false}]}]},{"type":"link","label":"Garbage Collection","href":"/dev/docs/java/garbage-collector","docId":"java/garbage-collector","unlisted":false},{"type":"category","label":"Memory","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Heap vs. Stack Memory","href":"/dev/docs/java/Memory/heap-stack","docId":"java/Memory/heap-stack","unlisted":false}]}],"href":"/dev/docs/category/java"},{"type":"category","label":"Javascript","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"NodeJs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Difference Between export default and module.exports = {}","href":"/dev/docs/javascript/nodejs/export","docId":"javascript/nodejs/export","unlisted":false}],"href":"/dev/docs/category/nodejs"}],"href":"/dev/docs/category/javascript"},{"type":"category","label":"React","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Astro file","href":"/dev/docs/react/astro","docId":"react/astro","unlisted":false},{"type":"link","label":"Package.json file","href":"/dev/docs/react/package.json","docId":"react/package.json","unlisted":false},{"type":"link","label":"Vite","href":"/dev/docs/react/vite","docId":"react/vite","unlisted":false},{"type":"category","label":"Tailwind CSS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro Tailwind CSS","href":"/dev/docs/react/tailwind/tailwindcss","docId":"react/tailwind/tailwindcss","unlisted":false},{"type":"link","label":"Tailwind with docusaurus","href":"/dev/docs/react/tailwind/integrate-tailwind-docusaurus","docId":"react/tailwind/integrate-tailwind-docusaurus","unlisted":false},{"type":"link","label":"Tailwind init error","href":"/dev/docs/react/tailwind/tailwind-error","docId":"react/tailwind/tailwind-error","unlisted":false}],"href":"/dev/docs/category/tailwind-css"},{"type":"category","label":"Code-Analysis-Tools","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Why Some React Apps Use \\"lint\\": \\"npx biome lint --write && npx tsc --noEmit\\"","href":"/dev/docs/react/Code-Analysis-Tools/biome","docId":"react/Code-Analysis-Tools/biome","unlisted":false},{"type":"link","label":"Integrating ESLint into Your React App","href":"/dev/docs/react/Code-Analysis-Tools/lint","docId":"react/Code-Analysis-Tools/lint","unlisted":false}]},{"type":"link","label":"Choosing a React Build Tool: Next.js, Vite, CRA & More","href":"/dev/docs/react/react-build-tools","docId":"react/react-build-tools","unlisted":false}],"href":"/dev/docs/category/react"},{"type":"category","label":"Tech Related","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"How M3U8 works on VLC","href":"/dev/docs/tech-related/m3u8","docId":"tech-related/m3u8","unlisted":false},{"type":"category","label":"Chatbot","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Conversational Memory","href":"/dev/docs/tech-related/Chatbot/build-ai-chatbot","docId":"tech-related/Chatbot/build-ai-chatbot","unlisted":false},{"type":"link","label":"AI Agents Intro","href":"/dev/docs/tech-related/Chatbot/ai-agent-intro","docId":"tech-related/Chatbot/ai-agent-intro","unlisted":false},{"type":"link","label":"AI Agents FAQ","href":"/dev/docs/tech-related/Chatbot/faq-ai-agent","docId":"tech-related/Chatbot/faq-ai-agent","unlisted":false},{"type":"link","label":"Token Management","href":"/dev/docs/tech-related/Chatbot/models-limit","docId":"tech-related/Chatbot/models-limit","unlisted":false},{"type":"link","label":"Token Counts in AI","href":"/dev/docs/tech-related/Chatbot/understand-models-token","docId":"tech-related/Chatbot/understand-models-token","unlisted":false},{"type":"link","label":"Max Token","href":"/dev/docs/tech-related/Chatbot/understand-models-max-token","docId":"tech-related/Chatbot/understand-models-max-token","unlisted":false},{"type":"link","label":"Token Limit Management","href":"/dev/docs/tech-related/Chatbot/optimize-chat-memory-limit-token-reached","docId":"tech-related/Chatbot/optimize-chat-memory-limit-token-reached","unlisted":false}]},{"type":"category","label":"Clean Code","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Clean Code Principles","href":"/dev/docs/tech-related/Clean Code/clean-code-basics","docId":"tech-related/Clean Code/clean-code-basics","unlisted":false}]},{"type":"category","label":"Huggingface","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Hugging Face Overview","href":"/dev/docs/tech-related/Huggingface/huggingface-intro","docId":"tech-related/Huggingface/huggingface-intro","unlisted":false},{"type":"category","label":"Models","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Hugging Face Usage","href":"/dev/docs/tech-related/Huggingface/Models/huggingface-models","docId":"tech-related/Huggingface/Models/huggingface-models","unlisted":false},{"type":"link","label":"Model Risks","href":"/dev/docs/tech-related/Huggingface/Models/huggingface-models-danger","docId":"tech-related/Huggingface/Models/huggingface-models-danger","unlisted":false},{"type":"link","label":"Hugging Face Model Security","href":"/dev/docs/tech-related/Huggingface/Models/models-payload","docId":"tech-related/Huggingface/Models/models-payload","unlisted":false},{"type":"link","label":"Hugging Face Model Hosting","href":"/dev/docs/tech-related/Huggingface/Models/models-api","docId":"tech-related/Huggingface/Models/models-api","unlisted":false},{"type":"link","label":"Hugging Face API Usage","href":"/dev/docs/tech-related/Huggingface/Models/models-api-usage-example","docId":"tech-related/Huggingface/Models/models-api-usage-example","unlisted":false},{"type":"link","label":"Hugging Face API Risks","href":"/dev/docs/tech-related/Huggingface/Models/models-api-risk","docId":"tech-related/Huggingface/Models/models-api-risk","unlisted":false}]}]},{"type":"category","label":"Langchain","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"LangChain Overview","href":"/dev/docs/tech-related/Langchain/langchain-intro","docId":"tech-related/Langchain/langchain-intro","unlisted":false},{"type":"link","label":"LangChain Evolution","href":"/dev/docs/tech-related/Langchain/langchain-before-after","docId":"tech-related/Langchain/langchain-before-after","unlisted":false},{"type":"link","label":"LangChain Workflow","href":"/dev/docs/tech-related/Langchain/langchain-how-does-it-work","docId":"tech-related/Langchain/langchain-how-does-it-work","unlisted":false},{"type":"link","label":"API vs LangChain","href":"/dev/docs/tech-related/Langchain/langchain-benefits","docId":"tech-related/Langchain/langchain-benefits","unlisted":false}]},{"type":"category","label":"Networking","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Hosting Local Web App","href":"/dev/docs/tech-related/Networking/server-web-app-local-network","docId":"tech-related/Networking/server-web-app-local-network","unlisted":false}]},{"type":"link","label":"Microservices Architecture","href":"/dev/docs/tech-related/microservices-architecture","docId":"tech-related/microservices-architecture","unlisted":false}],"href":"/dev/docs/category/tech-related"},{"type":"category","label":"Git","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Pro Git Usage","href":"/dev/docs/Git/master-git","docId":"Git/master-git","unlisted":false},{"type":"link","label":"Gitflow","href":"/dev/docs/Git/git-flow","docId":"Git/git-flow","unlisted":false},{"type":"link","label":"Git Flow Usage","href":"/dev/docs/Git/gitflow-real-usecase","docId":"Git/gitflow-real-usecase","unlisted":false},{"type":"link","label":"GitHub rate limit","href":"/dev/docs/Git/github-ai","docId":"Git/github-ai","unlisted":false}]},{"type":"category","label":"Portfolio","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Chatbot","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Apple-Inspired Chat Interface - Introduction","href":"/dev/docs/Portfolio/Chatbot/intro","docId":"Portfolio/Chatbot/intro","unlisted":false},{"type":"link","label":"Hamburger Menu Toggle Bug - Fix Documentation","href":"/dev/docs/Portfolio/Chatbot/hamburger-bug","docId":"Portfolio/Chatbot/hamburger-bug","unlisted":false},{"type":"link","label":"Chat Interface Layout Solution","href":"/dev/docs/Portfolio/Chatbot/scrolling-bug","docId":"Portfolio/Chatbot/scrolling-bug","unlisted":false},{"type":"link","label":"IndexedDB Chat Persistence Implementation","href":"/dev/docs/Portfolio/Chatbot/persist-chat-data","docId":"Portfolio/Chatbot/persist-chat-data","unlisted":false},{"type":"link","label":"Settings Modal Implementation Documentation","href":"/dev/docs/Portfolio/Chatbot/settings-modal","docId":"Portfolio/Chatbot/settings-modal","unlisted":false},{"type":"link","label":"LLM Selection Feature - Use Cases & User Guide","href":"/dev/docs/Portfolio/Chatbot/model-selection","docId":"Portfolio/Chatbot/model-selection","unlisted":false},{"type":"link","label":"Production Build Guide for Angular Chat Application","href":"/dev/docs/Portfolio/Chatbot/build-production-guide","docId":"Portfolio/Chatbot/build-production-guide","unlisted":false}]},{"type":"category","label":"CodeTyper","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CodeTyper Use Case: Introduction","href":"/dev/docs/Portfolio/CodeTyper/introduction","docId":"Portfolio/CodeTyper/introduction","unlisted":false},{"type":"link","label":"CodeTyper Use Case: Challenges","href":"/dev/docs/Portfolio/CodeTyper/challenges","docId":"Portfolio/CodeTyper/challenges","unlisted":false},{"type":"link","label":"CodeTyper Use Case: Solutions","href":"/dev/docs/Portfolio/CodeTyper/solutions","docId":"Portfolio/CodeTyper/solutions","unlisted":false},{"type":"link","label":"CodeTyper Use Case: Code Deep Dive","href":"/dev/docs/Portfolio/CodeTyper/code-deep-dive","docId":"Portfolio/CodeTyper/code-deep-dive","unlisted":false},{"type":"category","label":"Code-Breakdown","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CodeTyper Use Case: Code Breakdown - CodeTyper.tsx","href":"/dev/docs/Portfolio/CodeTyper/Code-Breakdown/CodeTyper","docId":"Portfolio/CodeTyper/Code-Breakdown/CodeTyper","unlisted":false},{"type":"link","label":"CodeTyper Use Case: Code Breakdown - App.tsx","href":"/dev/docs/Portfolio/CodeTyper/Code-Breakdown/App","docId":"Portfolio/CodeTyper/Code-Breakdown/App","unlisted":false},{"type":"link","label":"CodeTyper Use Case: Code Breakdown - sampleCodes.ts","href":"/dev/docs/Portfolio/CodeTyper/Code-Breakdown/sampleCodes","docId":"Portfolio/CodeTyper/Code-Breakdown/sampleCodes","unlisted":false}]},{"type":"category","label":"Feature","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Score Logging Implementation Guide","href":"/dev/docs/Portfolio/CodeTyper/Feature/SCORE_LOGGING_IMPLEMENTATION","docId":"Portfolio/CodeTyper/Feature/SCORE_LOGGING_IMPLEMENTATION","unlisted":false}]}]}]},{"type":"category","label":"Python","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Naming Conventions","href":"/dev/docs/Python/python-naming-convention","docId":"Python/python-naming-convention","unlisted":false},{"type":"category","label":"Chatbot","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Extensible AI Chat Structure","href":"/dev/docs/Python/Chatbot/chat-with-different-ai-api","docId":"Python/Chatbot/chat-with-different-ai-api","unlisted":false}]},{"type":"category","label":"Gemini","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Api","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AI Chat Sessions","href":"/dev/docs/Python/Gemini/Api/chat-api","docId":"Python/Gemini/Api/chat-api","unlisted":false},{"type":"link","label":"Conversational AI","href":"/dev/docs/Python/Gemini/Api/chat-conversation","docId":"Python/Gemini/Api/chat-conversation","unlisted":false},{"type":"link","label":"Preserve Chat Configuration Updates","href":"/dev/docs/Python/Gemini/Api/preserve-chat-config","docId":"Python/Gemini/Api/preserve-chat-config","unlisted":false}]}]},{"type":"category","label":"Openai","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Api","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OpenAI API Uses","href":"/dev/docs/Python/Openai/Api/openai-api-intro","docId":"Python/Openai/Api/openai-api-intro","unlisted":false},{"type":"link","label":"OpenAI Chat Completion","href":"/dev/docs/Python/Openai/Api/open-api-code-examples","docId":"Python/Openai/Api/open-api-code-examples","unlisted":false},{"type":"link","label":"OpenAI API Examples","href":"/dev/docs/Python/Openai/Api/openai-use-case","docId":"Python/Openai/Api/openai-use-case","unlisted":false}]}]}]},{"type":"category","label":"QA-Testing","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Intro","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Waterfall vs Agile vs DevOps Testing","href":"/dev/docs/QA-Testing/Intro/model-of-testing","docId":"QA-Testing/Intro/model-of-testing","unlisted":false},{"type":"link","label":"Role of QA in SDLC & STLC","href":"/dev/docs/QA-Testing/Intro/role-qa","docId":"QA-Testing/Intro/role-qa","unlisted":false},{"type":"link","label":"How Senior QA Differs from Junior and Mid-Level Roles","href":"/dev/docs/QA-Testing/Intro/senior-junior-qa-diff","docId":"QA-Testing/Intro/senior-junior-qa-diff","unlisted":false},{"type":"link","label":"Shift-Left & Shift-Right Testing","href":"/dev/docs/QA-Testing/Intro/shit-left-right-testing","docId":"QA-Testing/Intro/shit-left-right-testing","unlisted":false},{"type":"link","label":"Canary Testing, A/B Testing & Chaos Testing","href":"/dev/docs/QA-Testing/Intro/types-of-testing","docId":"QA-Testing/Intro/types-of-testing","unlisted":false}]},{"type":"category","label":"Test-Strategy-Planning","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Test Strategy and Planning","href":"/dev/docs/QA-Testing/Test-Strategy-Planning/overview","docId":"QA-Testing/Test-Strategy-Planning/overview","unlisted":false},{"type":"link","label":"Testing Strategies: Risk-Based, Requirement-Based, Exploratory, and More","href":"/dev/docs/QA-Testing/Test-Strategy-Planning/different-type-of-test-strategies","docId":"QA-Testing/Test-Strategy-Planning/different-type-of-test-strategies","unlisted":false},{"type":"link","label":"Writing a Test Plan: Objectives, Resources, Risks, and Timelines","href":"/dev/docs/QA-Testing/Test-Strategy-Planning/test-plan","docId":"QA-Testing/Test-Strategy-Planning/test-plan","unlisted":false},{"type":"link","label":"Test Estimation Models: PERT, Use-Case Point, WBS","href":"/dev/docs/QA-Testing/Test-Strategy-Planning/test-estimation-models","docId":"QA-Testing/Test-Strategy-Planning/test-estimation-models","unlisted":false}]},{"type":"category","label":"Test-Design-Coverage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Test Case Design Technique: Equivalence Partitioning","href":"/dev/docs/QA-Testing/Test-Design-Coverage/equivalence-partitioning","docId":"QA-Testing/Test-Design-Coverage/equivalence-partitioning","unlisted":false},{"type":"link","label":"Test Case Design Technique: Boundary Value Analysis (BVA)","href":"/dev/docs/QA-Testing/Test-Design-Coverage/boundary-value-analysis","docId":"QA-Testing/Test-Design-Coverage/boundary-value-analysis","unlisted":false},{"type":"link","label":"Test Case Design Technique: Decision Table Testing","href":"/dev/docs/QA-Testing/Test-Design-Coverage/decision-table","docId":"QA-Testing/Test-Design-Coverage/decision-table","unlisted":false},{"type":"link","label":"Test Case Design Technique: State Transition Testing","href":"/dev/docs/QA-Testing/Test-Design-Coverage/state-transition","docId":"QA-Testing/Test-Design-Coverage/state-transition","unlisted":false},{"type":"link","label":"Test Case Design Technique: Pairwise Testing","href":"/dev/docs/QA-Testing/Test-Design-Coverage/pairwise-testing","docId":"QA-Testing/Test-Design-Coverage/pairwise-testing","unlisted":false},{"type":"link","label":"Types of Test Coverage: Requirement, Code, and Risk Coverage","href":"/dev/docs/QA-Testing/Test-Design-Coverage/test-coverage-types","docId":"QA-Testing/Test-Design-Coverage/test-coverage-types","unlisted":false},{"type":"link","label":"Mapping Test Cases to Requirements/User Stories","href":"/dev/docs/QA-Testing/Test-Design-Coverage/map-test-case-user-story","docId":"QA-Testing/Test-Design-Coverage/map-test-case-user-story","unlisted":false}]},{"type":"category","label":"Automation-Framework-Strategy","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Choosing What to Automate: ROI, Stability, and Frequency of Execution","href":"/dev/docs/QA-Testing/Automation-Framework-Strategy/what-to-automate","docId":"QA-Testing/Automation-Framework-Strategy/what-to-automate","unlisted":false},{"type":"link","label":"Designing a Scalable Automation Framework","href":"/dev/docs/QA-Testing/Automation-Framework-Strategy/scalable-automation-framework","docId":"QA-Testing/Automation-Framework-Strategy/scalable-automation-framework","unlisted":false},{"type":"link","label":"Automating Different Layers of Testing","href":"/dev/docs/QA-Testing/Automation-Framework-Strategy/automate-different-layers","docId":"QA-Testing/Automation-Framework-Strategy/automate-different-layers","unlisted":false},{"type":"link","label":"Integration with CI/CD Pipelines","href":"/dev/docs/QA-Testing/Automation-Framework-Strategy/integrate-with-pipelines","docId":"QA-Testing/Automation-Framework-Strategy/integrate-with-pipelines","unlisted":false},{"type":"link","label":"Test Execution on Cloud Environments","href":"/dev/docs/QA-Testing/Automation-Framework-Strategy/test-execution-on-cloud","docId":"QA-Testing/Automation-Framework-Strategy/test-execution-on-cloud","unlisted":false}]}]},{"type":"category","label":"SQL","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Intro","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to SQL","href":"/dev/docs/SQL/Intro/intro-sql","docId":"SQL/Intro/intro-sql","unlisted":false},{"type":"link","label":"Types of SQL","href":"/dev/docs/SQL/Intro/type-of-sql","docId":"SQL/Intro/type-of-sql","unlisted":false},{"type":"link","label":"RDBMS vs SQL vs NoSQL","href":"/dev/docs/SQL/Intro/rdbms-sql-nosql","docId":"SQL/Intro/rdbms-sql-nosql","unlisted":false}]},{"type":"category","label":"Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Data Types in SQL","href":"/dev/docs/SQL/Basics/data-types","docId":"SQL/Basics/data-types","unlisted":false},{"type":"link","label":"Basic Statements: SELECT, INSERT, UPDATE, DELETE","href":"/dev/docs/SQL/Basics/basic-statement","docId":"SQL/Basics/basic-statement","unlisted":false},{"type":"link","label":"Filtering (WHERE, LIKE, IN, BETWEEN)","href":"/dev/docs/SQL/Basics/filtering","docId":"SQL/Basics/filtering","unlisted":false},{"type":"link","label":"Sorting and Aliasing","href":"/dev/docs/SQL/Basics/sorting-alias","docId":"SQL/Basics/sorting-alias","unlisted":false},{"type":"link","label":"NULL Handling","href":"/dev/docs/SQL/Basics/null-handling","docId":"SQL/Basics/null-handling","unlisted":false}]}]}]},"docs":{"Git/git-flow":{"id":"Git/git-flow","title":"Gitflow","description":"What is Gitflow?","sidebar":"tutorialSidebar"},"Git/gitflow-real-usecase":{"id":"Git/gitflow-real-usecase","title":"Git Flow Usage","description":"Git Flow is a branching model for Git, introduced by Vincent Driessen, designed to manage feature development, releases, and hotfixes in a robust and structured way.","sidebar":"tutorialSidebar"},"Git/github-ai":{"id":"Git/github-ai","title":"GitHub rate limit","description":"You can check your rate limit (usage/quota) via the GitHub REST API using your token. Run this in your terminal:","sidebar":"tutorialSidebar"},"Git/master-git":{"id":"Git/master-git","title":"Pro Git Usage","description":"Git is an essential tool for modern software development. Mastering Git empowers you to manage code efficiently, collaborate seamlessly, and safeguard your project\u2019s history. Here are tips and best practices to help you use Git like a pro:","sidebar":"tutorialSidebar"},"java/Core/OOP/access-modifiers-visibility":{"id":"java/Core/OOP/access-modifiers-visibility","title":"Access Modifiers & Visibility","description":"In Java, access modifiers are keywords that set the accessibility (visibility) of classes, constructors, methods, and fields. They are a fundamental aspect of encapsulation, an object-oriented programming principle that allows you to hide internal implementation details and control how other parts of the code can interact with your classes and their members.","sidebar":"tutorialSidebar"},"java/Core/OOP/composition-inheritance":{"id":"java/Core/OOP/composition-inheritance","title":"Composition Over Inheritance","description":"\\"Composition over Inheritance\\" (also known as \\"favor composition over inheritance\\") is a design principle in object-oriented programming that suggests that classes should achieve new functionality by composing objects of existing classes (i.e., by containing instances of other classes) rather than by inheriting from them. This principle promotes greater flexibility, reduced coupling, and better code reusability.","sidebar":"tutorialSidebar"},"java/Core/OOP/immutability":{"id":"java/Core/OOP/immutability","title":"Immutability - final and Defensive Copies","description":"Immutability is a core concept in object-oriented programming, particularly important in Java, which refers to the state of an object remaining unchanged after it has been created. An immutable object is one whose internal state cannot be modified once it has been fully constructed.","sidebar":"tutorialSidebar"},"java/Core/OOP/interface-abstract":{"id":"java/Core/OOP/interface-abstract","title":"Interfaces vs. Abstract Classes","description":"In Java\'s object-oriented programming (OOP) paradigm, both interfaces and abstract classes provide mechanisms for achieving abstraction and polymorphism. While they share some similarities, their primary purposes, capabilities, and use cases differ significantly.","sidebar":"tutorialSidebar"},"java/Core/OOP/java-oop-principles":{"id":"java/Core/OOP/java-oop-principles","title":"Java OOP Principles","description":"Object-Oriented Programming (OOP) is a programming paradigm that organizes software design around data, or objects, rather than functions and logic. Java is a purely object-oriented language, meaning almost everything in Java revolves around classes and objects.","sidebar":"tutorialSidebar"},"java/Core/OOP/object-equality":{"id":"java/Core/OOP/object-equality","title":"Object Equality - equals() and hashCode()","description":"In Java, determining whether two objects are \\"equal\\" is a fundamental concept, especially when working with collections. Java provides two methods in the Object class that are crucial for defining and managing object equality: equals() and hashCode(). Understanding their contract and how to override them correctly is vital for robust applications.","sidebar":"tutorialSidebar"},"java/Core/OOP/solid-principles":{"id":"java/Core/OOP/solid-principles","title":"SOLID Principles","description":"The SOLID principles are a set of five design principles in object-oriented programming intended to make software designs more understandable, flexible, and maintainable. They were promoted by Robert C. Martin (Uncle Bob) and are widely considered best practices for writing clean, robust, and scalable code.","sidebar":"tutorialSidebar"},"java/garbage-collector":{"id":"java/garbage-collector","title":"Garbage Collection","description":"java-garbage-collector.png","sidebar":"tutorialSidebar"},"java/Memory/heap-stack":{"id":"java/Memory/heap-stack","title":"Heap vs. Stack Memory","description":"In the context of the Java Virtual Machine (JVM) and the Java Memory Model (JMM), \\"Heap\\" and \\"Stack\\" are two fundamental memory regions with distinct purposes, characteristics, and management approaches. Understanding their differences is crucial for comprehending how Java programs execute, manage memory, and handle concurrent operations.","sidebar":"tutorialSidebar"},"javascript/nodejs/export":{"id":"javascript/nodejs/export","title":"Difference Between export default and module.exports = {}","description":"In JavaScript, especially in Node.js and front-end tooling (e.g., Webpack, Babel), you\u2019ll encounter two main module systems:","sidebar":"tutorialSidebar"},"Portfolio/Chatbot/build-production-guide":{"id":"Portfolio/Chatbot/build-production-guide","title":"Production Build Guide for Angular Chat Application","description":"Overview","sidebar":"tutorialSidebar"},"Portfolio/Chatbot/hamburger-bug":{"id":"Portfolio/Chatbot/hamburger-bug","title":"Hamburger Menu Toggle Bug - Fix Documentation","description":"Overview","sidebar":"tutorialSidebar"},"Portfolio/Chatbot/intro":{"id":"Portfolio/Chatbot/intro","title":"Apple-Inspired Chat Interface - Introduction","description":"Title","sidebar":"tutorialSidebar"},"Portfolio/Chatbot/model-selection":{"id":"Portfolio/Chatbot/model-selection","title":"LLM Selection Feature - Use Cases & User Guide","description":"Overview","sidebar":"tutorialSidebar"},"Portfolio/Chatbot/persist-chat-data":{"id":"Portfolio/Chatbot/persist-chat-data","title":"IndexedDB Chat Persistence Implementation","description":"Overview","sidebar":"tutorialSidebar"},"Portfolio/Chatbot/scrolling-bug":{"id":"Portfolio/Chatbot/scrolling-bug","title":"Chat Interface Layout Solution","description":"Problem Statement","sidebar":"tutorialSidebar"},"Portfolio/Chatbot/settings-modal":{"id":"Portfolio/Chatbot/settings-modal","title":"Settings Modal Implementation Documentation","description":"Overview","sidebar":"tutorialSidebar"},"Portfolio/CodeTyper/challenges":{"id":"Portfolio/CodeTyper/challenges","title":"CodeTyper Use Case: Challenges","description":"This document outlines the primary challenges encountered during the development of the CodeTyper application.","sidebar":"tutorialSidebar"},"Portfolio/CodeTyper/Code-Breakdown/App":{"id":"Portfolio/CodeTyper/Code-Breakdown/App","title":"CodeTyper Use Case: Code Breakdown - App.tsx","description":"This document provides a detailed breakdown of the App.tsx component, which is the root component of the application.","sidebar":"tutorialSidebar"},"Portfolio/CodeTyper/Code-Breakdown/CodeTyper":{"id":"Portfolio/CodeTyper/Code-Breakdown/CodeTyper","title":"CodeTyper Use Case: Code Breakdown - CodeTyper.tsx","description":"This document provides a detailed breakdown of the CodeTyper.tsx component, which is the most complex and important component in the application.","sidebar":"tutorialSidebar"},"Portfolio/CodeTyper/Code-Breakdown/sampleCodes":{"id":"Portfolio/CodeTyper/Code-Breakdown/sampleCodes","title":"CodeTyper Use Case: Code Breakdown - sampleCodes.ts","description":"This document provides a detailed breakdown of the sampleCodes.ts file, which provides the code snippets for the application.","sidebar":"tutorialSidebar"},"Portfolio/CodeTyper/code-deep-dive":{"id":"Portfolio/CodeTyper/code-deep-dive","title":"CodeTyper Use Case: Code Deep Dive","description":"This document provides a detailed, line-by-line explanation of the CodeTyper.tsx component, which is the heart of the CodeTyper application.","sidebar":"tutorialSidebar"},"Portfolio/CodeTyper/Feature/SCORE_LOGGING_IMPLEMENTATION":{"id":"Portfolio/CodeTyper/Feature/SCORE_LOGGING_IMPLEMENTATION","title":"Score Logging Implementation Guide","description":"Overview","sidebar":"tutorialSidebar"},"Portfolio/CodeTyper/introduction":{"id":"Portfolio/CodeTyper/introduction","title":"CodeTyper Use Case: Introduction","description":"This document is the first in a series that details the development of the CodeTyper application. This series will cover the project\'s initial goals, the challenges encountered during development, and the solutions implemented to overcome them.","sidebar":"tutorialSidebar"},"Portfolio/CodeTyper/solutions":{"id":"Portfolio/CodeTyper/solutions","title":"CodeTyper Use Case: Solutions","description":"This document describes the solutions implemented to address the challenges encountered during the development of the CodeTyper application.","sidebar":"tutorialSidebar"},"Python/Chatbot/chat-with-different-ai-api":{"id":"Python/Chatbot/chat-with-different-ai-api","title":"Extensible AI Chat Structure","description":"For an extensible chat application where users can choose different AI models (e.g., Gemini, OpenAI, and more in the future), a structured approach using Abstract Base Classes (ABCs) and the Factory Pattern is highly effective. This allows you to define a common interface for all AI providers and easily plug in new ones without modifying existing core logic.","sidebar":"tutorialSidebar"},"Python/Gemini/Api/chat-api":{"id":"Python/Gemini/Api/chat-api","title":"AI Chat Sessions","description":"The chats.py module, part of the google.genai library, is designed to facilitate and manage multi-turn conversations (chat sessions) with a Generative AI model, such as Google\'s Gemini. It abstracts away the complexities of managing conversation history, sending messages, and processing responses, providing a higher-level interface for building conversational AI applications.","sidebar":"tutorialSidebar"},"Python/Gemini/Api/chat-conversation":{"id":"Python/Gemini/Api/chat-conversation","title":"Conversational AI","description":"This document outlines how to create and manage conversational sessions using the google.genai library in Python. It covers initializing chat sessions, sending messages, overriding parameters for single requests, and importantly, how to permanently update parameters like temperature and maxoutputtokens while preserving system_instruction and existing history.","sidebar":"tutorialSidebar"},"Python/Gemini/Api/preserve-chat-config":{"id":"Python/Gemini/Api/preserve-chat-config","title":"Preserve Chat Configuration Updates","description":"When working with the Gemini API\'s chat functionality, it\'s common to initialize a chat session with specific parameters such as temperature, maxoutputtokens, systeminstruction, and an initial history. A challenge arises when you later want to dynamically update only the temperature and maxoutputtokens without losing the previously set systeminstruction or the accumulated conversation history.","sidebar":"tutorialSidebar"},"Python/Openai/Api/open-api-code-examples":{"id":"Python/Openai/Api/open-api-code-examples","title":"OpenAI Chat Completion","description":"The most common use case for the OpenAI API in Python is generating chat completions. This involves sending a list of messages to a specified model and receiving a generated response. The API supports both synchronous (blocking) and asynchronous (non-blocking) calls, and responses can be received as a single object or streamed as chunks.","sidebar":"tutorialSidebar"},"Python/Openai/Api/openai-api-intro":{"id":"Python/Openai/Api/openai-api-intro","title":"OpenAI API Uses","description":"The provided OpenAI API client structure reveals several common use cases for interacting with OpenAI\'s models:","sidebar":"tutorialSidebar"},"Python/Openai/Api/openai-use-case":{"id":"Python/Openai/Api/openai-use-case","title":"OpenAI API Examples","description":"Here are concrete examples for the common use cases of the OpenAI API:","sidebar":"tutorialSidebar"},"Python/python-naming-convention":{"id":"Python/python-naming-convention","title":"Naming Conventions","description":"Python follows the PEP 8 style guide for naming conventions. This guide helps improve code readability and maintainability across files, classes, methods, and variables. Below are best practices for naming in Python:","sidebar":"tutorialSidebar"},"QA-Testing/Automation-Framework-Strategy/automate-different-layers":{"id":"QA-Testing/Automation-Framework-Strategy/automate-different-layers","title":"Automating Different Layers of Testing","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Automation-Framework-Strategy/integrate-with-pipelines":{"id":"QA-Testing/Automation-Framework-Strategy/integrate-with-pipelines","title":"Integration with CI/CD Pipelines","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Automation-Framework-Strategy/scalable-automation-framework":{"id":"QA-Testing/Automation-Framework-Strategy/scalable-automation-framework","title":"Designing a Scalable Automation Framework","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Automation-Framework-Strategy/test-execution-on-cloud":{"id":"QA-Testing/Automation-Framework-Strategy/test-execution-on-cloud","title":"Test Execution on Cloud Environments","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Automation-Framework-Strategy/what-to-automate":{"id":"QA-Testing/Automation-Framework-Strategy/what-to-automate","title":"Choosing What to Automate: ROI, Stability, and Frequency of Execution","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Intro/model-of-testing":{"id":"QA-Testing/Intro/model-of-testing","title":"Waterfall vs Agile vs DevOps Testing","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Intro/role-qa":{"id":"QA-Testing/Intro/role-qa","title":"Role of QA in SDLC & STLC","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Intro/senior-junior-qa-diff":{"id":"QA-Testing/Intro/senior-junior-qa-diff","title":"How Senior QA Differs from Junior and Mid-Level Roles","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Intro/shit-left-right-testing":{"id":"QA-Testing/Intro/shit-left-right-testing","title":"Shift-Left & Shift-Right Testing","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Intro/types-of-testing":{"id":"QA-Testing/Intro/types-of-testing","title":"Canary Testing, A/B Testing & Chaos Testing","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Test-Design-Coverage/boundary-value-analysis":{"id":"QA-Testing/Test-Design-Coverage/boundary-value-analysis","title":"Test Case Design Technique: Boundary Value Analysis (BVA)","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Test-Design-Coverage/decision-table":{"id":"QA-Testing/Test-Design-Coverage/decision-table","title":"Test Case Design Technique: Decision Table Testing","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Test-Design-Coverage/equivalence-partitioning":{"id":"QA-Testing/Test-Design-Coverage/equivalence-partitioning","title":"Test Case Design Technique: Equivalence Partitioning","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Test-Design-Coverage/map-test-case-user-story":{"id":"QA-Testing/Test-Design-Coverage/map-test-case-user-story","title":"Mapping Test Cases to Requirements/User Stories","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Test-Design-Coverage/pairwise-testing":{"id":"QA-Testing/Test-Design-Coverage/pairwise-testing","title":"Test Case Design Technique: Pairwise Testing","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Test-Design-Coverage/state-transition":{"id":"QA-Testing/Test-Design-Coverage/state-transition","title":"Test Case Design Technique: State Transition Testing","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Test-Design-Coverage/test-coverage-types":{"id":"QA-Testing/Test-Design-Coverage/test-coverage-types","title":"Types of Test Coverage: Requirement, Code, and Risk Coverage","description":"In software testing, test coverage measures how much of the system is tested. It\'s a metric that helps QA teams assess the effectiveness, completeness, and focus of the testing effort. Three essential types of test coverage are:","sidebar":"tutorialSidebar"},"QA-Testing/Test-Strategy-Planning/different-type-of-test-strategies":{"id":"QA-Testing/Test-Strategy-Planning/different-type-of-test-strategies","title":"Testing Strategies: Risk-Based, Requirement-Based, Exploratory, and More","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Test-Strategy-Planning/overview":{"id":"QA-Testing/Test-Strategy-Planning/overview","title":"Test Strategy and Planning","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Test-Strategy-Planning/test-estimation-models":{"id":"QA-Testing/Test-Strategy-Planning/test-estimation-models","title":"Test Estimation Models: PERT, Use-Case Point, WBS","description":"Overview","sidebar":"tutorialSidebar"},"QA-Testing/Test-Strategy-Planning/test-plan":{"id":"QA-Testing/Test-Strategy-Planning/test-plan","title":"Writing a Test Plan: Objectives, Resources, Risks, and Timelines","description":"Overview","sidebar":"tutorialSidebar"},"react/astro":{"id":"react/astro","title":"Astro file","description":"The astro.config.mjs file is the main configuration file for an Astro project. It defines how Astro should behave during development and build processes. It\u2019s written in JavaScript (with the .mjs extension to enable ES module syntax).","sidebar":"tutorialSidebar"},"react/Code-Analysis-Tools/biome":{"id":"react/Code-Analysis-Tools/biome","title":"Why Some React Apps Use \\"lint\\": \\"npx biome lint --write && npx tsc --noEmit\\"","description":"This script combines two important tools in one command:","sidebar":"tutorialSidebar"},"react/Code-Analysis-Tools/lint":{"id":"react/Code-Analysis-Tools/lint","title":"Integrating ESLint into Your React App","description":"Why Use ESLint?","sidebar":"tutorialSidebar"},"react/package.json":{"id":"react/package.json","title":"Package.json file","description":"The package.json file is the core descriptor of a Node.js (or JavaScript-based) project. It contains metadata about the project, scripts, dependencies, and other configurations that tools like npm and yarn use to manage and run the application.","sidebar":"tutorialSidebar"},"react/react-build-tools":{"id":"react/react-build-tools","title":"Choosing a React Build Tool: Next.js, Vite, CRA & More","description":"When building React applications, developers choose different tools/frameworks depending on project requirements. Let\u2019s break down the most common options, what they do, and when you should pick each.","sidebar":"tutorialSidebar"},"react/tailwind/integrate-tailwind-docusaurus":{"id":"react/tailwind/integrate-tailwind-docusaurus","title":"Tailwind with docusaurus","description":"Step 1: Install Tailwind CSS and its dependencies","sidebar":"tutorialSidebar"},"react/tailwind/tailwind-error":{"id":"react/tailwind/tailwind-error","title":"Tailwind init error","description":"When trying to initialize Tailwind CSS with the following command:","sidebar":"tutorialSidebar"},"react/tailwind/tailwindcss":{"id":"react/tailwind/tailwindcss","title":"Intro Tailwind CSS","description":"What is Tailwind CSS?","sidebar":"tutorialSidebar"},"react/vite":{"id":"react/vite","title":"Vite","description":"Vite is a modern build tool that is increasingly used to build React applications (as well as Vue, Svelte, Astro, etc.). It was designed to offer a faster development experience, ultra-fast builds, and simple configuration.","sidebar":"tutorialSidebar"},"SQL/Basics/basic-statement":{"id":"SQL/Basics/basic-statement","title":"Basic Statements: SELECT, INSERT, UPDATE, DELETE","description":"These four SQL statements form the foundation of everyday database operations. Mastering them is essential for any SQL professional.","sidebar":"tutorialSidebar"},"SQL/Basics/data-types":{"id":"SQL/Basics/data-types","title":"Data Types in SQL","description":"Data types define the kind of data that can be stored in a column, variable, or expression. Choosing the correct data type is critical for data integrity, performance, and storage efficiency.","sidebar":"tutorialSidebar"},"SQL/Basics/filtering":{"id":"SQL/Basics/filtering","title":"Filtering (WHERE, LIKE, IN, BETWEEN)","description":"Filtering is a key part of writing useful SQL queries. It allows you to control which rows are returned or affected by your statements. The WHERE clause, combined with operators like LIKE, IN, and BETWEEN, makes filtering powerful and flexible.","sidebar":"tutorialSidebar"},"SQL/Basics/null-handling":{"id":"SQL/Basics/null-handling","title":"NULL Handling","description":"In SQL, NULL represents a missing or unknown value. It is not the same as zero (0) or an empty string (\'\'). Handling NULL values correctly is essential for writing accurate and reliable queries.","sidebar":"tutorialSidebar"},"SQL/Basics/sorting-alias":{"id":"SQL/Basics/sorting-alias","title":"Sorting and Aliasing","description":"Sorting and aliasing are two essential SQL techniques that help you control the presentation of query results and make your queries more readable and efficient.","sidebar":"tutorialSidebar"},"SQL/Intro/intro-sql":{"id":"SQL/Intro/intro-sql","title":"Introduction to SQL","description":"What is SQL?","sidebar":"tutorialSidebar"},"SQL/Intro/rdbms-sql-nosql":{"id":"SQL/Intro/rdbms-sql-nosql","title":"RDBMS vs SQL vs NoSQL","description":"When learning SQL, it\u2019s important to understand how it relates to database systems as a whole, and how it differs from other data storage approaches like NoSQL.","sidebar":"tutorialSidebar"},"SQL/Intro/type-of-sql":{"id":"SQL/Intro/type-of-sql","title":"Types of SQL","description":"SQL is a versatile language that can be categorized into four main types based on the kinds of operations it performs. Understanding these categories will help you write clear, purpose-driven queries and scripts.","sidebar":"tutorialSidebar"},"tech-related/Chatbot/ai-agent-intro":{"id":"tech-related/Chatbot/ai-agent-intro","title":"AI Agents Intro","description":"This document explores the nature of AI agents, distinguishing them from other AI systems such as LLMs, chatbots, and workflows. It highlights the recent debate between OpenAI and LangChain regarding the definition and architecture of AI agents, and examines key components, types, current use cases, and challenges associated with this emerging technology. Vector databases are identified as crucial elements for the long-term memory of agents.","sidebar":"tutorialSidebar"},"tech-related/Chatbot/build-ai-chatbot":{"id":"tech-related/Chatbot/build-ai-chatbot","title":"Conversational Memory","description":"This document explores the crucial concept of conversational state, or memory, in the development of chatbots and AI agents. It focuses on how an application can remember messages from past conversations, comparing traditional memory management approaches with the simplified method provided by the OpenAI API.","sidebar":"tutorialSidebar"},"tech-related/Chatbot/faq-ai-agent":{"id":"tech-related/Chatbot/faq-ai-agent","title":"AI Agents FAQ","description":"What is an AI agent and how does it differ from other AI systems?","sidebar":"tutorialSidebar"},"tech-related/Chatbot/models-limit":{"id":"tech-related/Chatbot/models-limit","title":"Token Management","description":"Understanding Tokens in AI Models","sidebar":"tutorialSidebar"},"tech-related/Chatbot/optimize-chat-memory-limit-token-reached":{"id":"tech-related/Chatbot/optimize-chat-memory-limit-token-reached","title":"Token Limit Management","description":"When working with large language model (LLM) APIs such as OpenAI\u2019s gpt-4, each API call is subject to a maximum token limit (e.g., 8192 or 128k tokens). As conversations grow longer, especially when maintaining history for context, you may quickly approach or exceed these limits.","sidebar":"tutorialSidebar"},"tech-related/Chatbot/understand-models-max-token":{"id":"tech-related/Chatbot/understand-models-max-token","title":"Max Token","description":"When interacting with AI models like OpenAI\'s GPT through APIs, understanding how tokens work is essential for optimizing performance, controlling costs, and ensuring reliable responses\u2014especially when generating code.","sidebar":"tutorialSidebar"},"tech-related/Chatbot/understand-models-token":{"id":"tech-related/Chatbot/understand-models-token","title":"Token Counts in AI","description":"Understanding AI Model Token Counts","sidebar":"tutorialSidebar"},"tech-related/Clean Code/clean-code-basics":{"id":"tech-related/Clean Code/clean-code-basics","title":"Clean Code Principles","description":"clean-code-representation.png","sidebar":"tutorialSidebar"},"tech-related/Huggingface/huggingface-intro":{"id":"tech-related/Huggingface/huggingface-intro","title":"Hugging Face Overview","description":"What is Hugging Face?","sidebar":"tutorialSidebar"},"tech-related/Huggingface/Models/huggingface-models":{"id":"tech-related/Huggingface/Models/huggingface-models","title":"Hugging Face Usage","description":"Hugging Face has become a leading platform for sharing and using state-of-the-art machine learning models, especially in Natural Language Processing (NLP). Here are the main reasons people use Hugging Face models:","sidebar":"tutorialSidebar"},"tech-related/Huggingface/Models/huggingface-models-danger":{"id":"tech-related/Huggingface/Models/huggingface-models-danger","title":"Model Risks","description":"HuggingFace hosts a vast range of machine learning models, including language, vision, and multimodal models. While these resources accelerate AI development, there are important risks and dangers to consider when using or sharing models on HuggingFace.","sidebar":"tutorialSidebar"},"tech-related/Huggingface/Models/models-api":{"id":"tech-related/Huggingface/Models/models-api","title":"Hugging Face Model Hosting","description":"Hugging Face provides a platform where machine learning models (for NLP, vision, audio, etc.) can be hosted and accessed via APIs. Here\u2019s an overview of how it works:","sidebar":"tutorialSidebar"},"tech-related/Huggingface/Models/models-api-risk":{"id":"tech-related/Huggingface/Models/models-api-risk","title":"Hugging Face API Risks","description":"Using Hugging Face models through their API is generally considered safe, but there are some potential risks and considerations you should be aware of:","sidebar":"tutorialSidebar"},"tech-related/Huggingface/Models/models-api-usage-example":{"id":"tech-related/Huggingface/Models/models-api-usage-example","title":"Hugging Face API Usage","description":"Hugging Face provides a simple and efficient API to access and interact with a wide variety of pre-trained machine learning models. You can use these models for tasks like text generation, sentiment analysis, translation, and more, directly from your application via HTTP requests.","sidebar":"tutorialSidebar"},"tech-related/Huggingface/Models/models-payload":{"id":"tech-related/Huggingface/Models/models-payload","title":"Hugging Face Model Security","description":"1. Can Anyone Upload Models to Hugging Face?","sidebar":"tutorialSidebar"},"tech-related/Langchain/langchain-before-after":{"id":"tech-related/Langchain/langchain-before-after","title":"LangChain Evolution","description":"LangChain is a popular open-source framework that simplifies the development of applications powered by large language models (LLMs). Here is an overview of the landscape before and after LangChain\u2019s introduction:","sidebar":"tutorialSidebar"},"tech-related/Langchain/langchain-benefits":{"id":"tech-related/Langchain/langchain-benefits","title":"API vs LangChain","description":"When working with language model APIs (like OpenAI, Anthropic, or others), you can interact with them either directly via their HTTP APIs or indirectly by using a framework such as LangChain. Here are the main differences:","sidebar":"tutorialSidebar"},"tech-related/Langchain/langchain-how-does-it-work":{"id":"tech-related/Langchain/langchain-how-does-it-work","title":"LangChain Workflow","description":"LangChain operates as a framework to build applications powered by language models (LLMs). Here\u2019s a technical breakdown of how LangChain works:","sidebar":"tutorialSidebar"},"tech-related/Langchain/langchain-intro":{"id":"tech-related/Langchain/langchain-intro","title":"LangChain Overview","description":"langchain-intro.png","sidebar":"tutorialSidebar"},"tech-related/m3u8":{"id":"tech-related/m3u8","title":"How M3U8 works on VLC","description":"You can watch a video stream using VLC player when you have an .m3u8 URL because VLC is designed to understand and implement the HTTP Live Streaming (HLS) protocol. The .m3u8 file is essentially the playlist or manifest that HLS uses to describe the stream.","sidebar":"tutorialSidebar"},"tech-related/microservices-architecture":{"id":"tech-related/microservices-architecture","title":"Microservices Architecture","description":"Overview","sidebar":"tutorialSidebar"},"tech-related/Networking/server-web-app-local-network":{"id":"tech-related/Networking/server-web-app-local-network","title":"Hosting Local Web App","description":"Overview","sidebar":"tutorialSidebar"}}}}')}}]);