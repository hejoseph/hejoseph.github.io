"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[5556],{5938:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Portfolio/Chatbot/build-production-guide","title":"Production Build Guide for Angular Chat Application","description":"Overview","source":"@site/docs/Portfolio/Chatbot/07-build-production-guide.md","sourceDirName":"Portfolio/Chatbot","slug":"/Portfolio/Chatbot/build-production-guide","permalink":"/dev/docs/Portfolio/Chatbot/build-production-guide","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LLM Selection Feature - Use Cases & User Guide","permalink":"/dev/docs/Portfolio/Chatbot/model-selection"},"next":{"title":"CodeTyper Use Case: Introduction","permalink":"/dev/docs/Portfolio/CodeTyper/introduction"}}');var t=i(4848),s=i(8453);const l={},o="Production Build Guide for Angular Chat Application",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Quick Start Production Build",id:"quick-start-production-build",level:2},{value:"Basic Production Build",id:"basic-production-build",level:3},{value:"Advanced Production Build with Optimizations",id:"advanced-production-build-with-optimizations",level:3},{value:"Pre-Production Checklist",id:"pre-production-checklist",level:2},{value:"1. Code Quality &amp; Performance",id:"1-code-quality--performance",level:3},{value:"2. Security Hardening",id:"2-security-hardening",level:3},{value:"3. Environment Configuration",id:"3-environment-configuration",level:3},{value:"\ud83d\udd27 Angular Configuration for Production",id:"-angular-configuration-for-production",level:2},{value:"1. Update angular.json for Production Optimization",id:"1-update-angularjson-for-production-optimization",level:3},{value:"2. Create Production Environment File",id:"2-create-production-environment-file",level:3},{value:"3. Update Main Environment File",id:"3-update-main-environment-file",level:3},{value:"Security Considerations for LLM Integration",id:"security-considerations-for-llm-integration",level:2},{value:"1. API Key Security",id:"1-api-key-security",level:3},{value:"Option A: Backend Proxy (Recommended)",id:"option-a-backend-proxy-recommended",level:4},{value:"Option B: Environment-based Configuration",id:"option-b-environment-based-configuration",level:4},{value:"2. Content Security Policy (CSP)",id:"2-content-security-policy-csp",level:3},{value:"3. Input Sanitization",id:"3-input-sanitization",level:3},{value:"Build Optimization Strategies",id:"build-optimization-strategies",level:2},{value:"1. Lazy Loading Implementation",id:"1-lazy-loading-implementation",level:3},{value:"2. Bundle Analysis",id:"2-bundle-analysis",level:3},{value:"3. Service Worker for Caching",id:"3-service-worker-for-caching",level:3},{value:"4. Optimize Images and Assets",id:"4-optimize-images-and-assets",level:3},{value:"Deployment Options",id:"deployment-options",level:2},{value:"Option 1: Static Hosting (Recommended for Frontend-Only)",id:"option-1-static-hosting-recommended-for-frontend-only",level:3},{value:"Netlify Deployment",id:"netlify-deployment",level:4},{value:"Vercel Deployment",id:"vercel-deployment",level:4},{value:"Option 2: Docker Containerization",id:"option-2-docker-containerization",level:3},{value:"Option 3: AWS S3 + CloudFront",id:"option-3-aws-s3--cloudfront",level:3},{value:"\ud83d\udd0d Monitoring &amp; Analytics",id:"-monitoring--analytics",level:2},{value:"1. Error Tracking with Sentry",id:"1-error-tracking-with-sentry",level:3},{value:"2. Performance Monitoring",id:"2-performance-monitoring",level:3},{value:"3. Health Check Endpoint",id:"3-health-check-endpoint",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"1. Implement OnPush Change Detection",id:"1-implement-onpush-change-detection",level:3},{value:"2. Virtual Scrolling for Large Message Lists",id:"2-virtual-scrolling-for-large-message-lists",level:3},{value:"3. Implement Proper Caching",id:"3-implement-proper-caching",level:3},{value:"Common Production Issues &amp; Solutions",id:"common-production-issues--solutions",level:2},{value:"Issue 1: CORS Errors with LLM APIs",id:"issue-1-cors-errors-with-llm-apis",level:3},{value:"Issue 2: Large Bundle Size",id:"issue-2-large-bundle-size",level:3},{value:"Issue 3: API Key Exposure",id:"issue-3-api-key-exposure",level:3},{value:"Issue 4: Memory Leaks",id:"issue-4-memory-leaks",level:3},{value:"Issue 5: Slow Initial Load",id:"issue-5-slow-initial-load",level:3},{value:"Production Deployment Checklist",id:"production-deployment-checklist",level:2},{value:"Pre-Deployment",id:"pre-deployment",level:3},{value:"Deployment",id:"deployment",level:3},{value:"Post-Deployment",id:"post-deployment",level:3},{value:"CI/CD Pipeline Example",id:"cicd-pipeline-example",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"production-build-guide-for-angular-chat-application",children:"Production Build Guide for Angular Chat Application"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"This guide covers the complete process of preparing, building, and deploying your Angular chat application with LLM integration to production. It includes optimization strategies, security considerations, and deployment options."}),"\n",(0,t.jsx)(n.h2,{id:"quick-start-production-build",children:"Quick Start Production Build"}),"\n",(0,t.jsx)(n.h3,{id:"basic-production-build",children:"Basic Production Build"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Install dependencies\r\nnpm install\r\n\r\n# Build for production\r\nng build --configuration production\r\n\r\n# The built files will be in the dist/ folder\n"})}),"\n",(0,t.jsx)(n.h3,{id:"advanced-production-build-with-optimizations",children:"Advanced Production Build with Optimizations"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Build with all optimizations enabled\r\nng build --configuration production --aot --build-optimizer --optimization --source-map=false\n"})}),"\n",(0,t.jsx)(n.h2,{id:"pre-production-checklist",children:"Pre-Production Checklist"}),"\n",(0,t.jsx)(n.h3,{id:"1-code-quality--performance",children:"1. Code Quality & Performance"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Remove all console.log statements from production code"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Remove unused imports and dependencies"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Optimize bundle size with tree shaking"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Enable Ahead-of-Time (AOT) compilation"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Minimize and compress assets"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Enable gzip compression"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-security-hardening",children:"2. Security Hardening"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement Content Security Policy (CSP)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Secure API key handling"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Enable HTTPS only"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement proper CORS policies"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Sanitize user inputs"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Remove development-only code"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-environment-configuration",children:"3. Environment Configuration"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up production environment variables"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure production API endpoints"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up error tracking (Sentry, LogRocket)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure analytics (Google Analytics, etc.)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up monitoring and health checks"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-angular-configuration-for-production",children:"\ud83d\udd27 Angular Configuration for Production"}),"\n",(0,t.jsx)(n.h3,{id:"1-update-angularjson-for-production-optimization",children:"1. Update angular.json for Production Optimization"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\r\n  "projects": {\r\n    "your-app": {\r\n      "architect": {\r\n        "build": {\r\n          "configurations": {\r\n            "production": {\r\n              "budgets": [\r\n                {\r\n                  "type": "initial",\r\n                  "maximumWarning": "2mb",\r\n                  "maximumError": "5mb"\r\n                },\r\n                {\r\n                  "type": "anyComponentStyle",\r\n                  "maximumWarning": "6kb",\r\n                  "maximumError": "10kb"\r\n                }\r\n              ],\r\n              "outputHashing": "all",\r\n              "optimization": true,\r\n              "sourceMap": false,\r\n              "namedChunks": false,\r\n              "extractLicenses": true,\r\n              "vendorChunk": false,\r\n              "buildOptimizer": true,\r\n              "aot": true,\r\n              "fileReplacements": [\r\n                {\r\n                  "replace": "src/environments/environment.ts",\r\n                  "with": "src/environments/environment.prod.ts"\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-create-production-environment-file",children:"2. Create Production Environment File"}),"\n",(0,t.jsxs)(n.p,{children:["Create ",(0,t.jsx)(n.code,{children:"src/environments/environment.prod.ts"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export const environment = {\r\n  production: true,\r\n  apiUrl: 'https://your-production-api.com',\r\n  enableAnalytics: true,\r\n  enableErrorTracking: true,\r\n  logLevel: 'error', // Only log errors in production\r\n  version: '1.0.0'\r\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-update-main-environment-file",children:"3. Update Main Environment File"}),"\n",(0,t.jsxs)(n.p,{children:["Update ",(0,t.jsx)(n.code,{children:"src/environments/environment.ts"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000',\r\n  enableAnalytics: false,\r\n  enableErrorTracking: false,\r\n  logLevel: 'debug',\r\n  version: '1.0.0-dev'\r\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"security-considerations-for-llm-integration",children:"Security Considerations for LLM Integration"}),"\n",(0,t.jsx)(n.h3,{id:"1-api-key-security",children:"1. API Key Security"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u274c Never do this in production:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// DON'T: Hardcode API keys in frontend\r\nconst apiKey = 'your-actual-api-key-here';\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u2705 Recommended approaches:"})}),"\n",(0,t.jsx)(n.h4,{id:"option-a-backend-proxy-recommended",children:"Option A: Backend Proxy (Recommended)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Frontend calls your backend, backend calls LLM APIs\r\nprivate callLLMAPI(message: string): Observable<string> {\r\n  return this.http.post<{response: string}>('/api/chat', {\r\n    message: message,\r\n    model: this.selectedModel\r\n  }).pipe(\r\n    map(response => response.response)\r\n  );\r\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"option-b-environment-based-configuration",children:"Option B: Environment-based Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Use environment variables (still visible to users, but better)\r\nprivate callGoogleGeminiAPI(userMessage: string): Observable<string> {\r\n  const apiKey = environment.geminiApiKey; // Set via build process\r\n  // ... rest of implementation\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-content-security-policy-csp",children:"2. Content Security Policy (CSP)"}),"\n",(0,t.jsxs)(n.p,{children:["Add to your ",(0,t.jsx)(n.code,{children:"index.html"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:"<meta http-equiv=\"Content-Security-Policy\" content=\"\r\n  default-src 'self';\r\n  script-src 'self' 'unsafe-inline';\r\n  style-src 'self' 'unsafe-inline';\r\n  connect-src 'self' \r\n    https://generativelanguage.googleapis.com \r\n    https://api.openai.com \r\n    https://api.anthropic.com;\r\n  img-src 'self' data: https:;\r\n  font-src 'self' data:;\r\n\">\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-input-sanitization",children:"3. Input Sanitization"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { DomSanitizer } from '@angular/platform-browser';\r\n\r\n// Sanitize user inputs before sending to LLM\r\nsanitizeInput(input: string): string {\r\n  return this.sanitizer.sanitize(SecurityContext.HTML, input) || '';\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"build-optimization-strategies",children:"Build Optimization Strategies"}),"\n",(0,t.jsx)(n.h3,{id:"1-lazy-loading-implementation",children:"1. Lazy Loading Implementation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// app-routing.module.ts\r\nconst routes: Routes = [\r\n  {\r\n    path: 'chat',\r\n    loadChildren: () => import('./chat/chat.module').then(m => m.ChatModule)\r\n  },\r\n  {\r\n    path: 'settings',\r\n    loadChildren: () => import('./settings/settings.module').then(m => m.SettingsModule)\r\n  }\r\n];\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-bundle-analysis",children:"2. Bundle Analysis"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Install bundle analyzer\r\nnpm install --save-dev webpack-bundle-analyzer\r\n\r\n# Build with stats\r\nng build --configuration production --stats-json\r\n\r\n# Analyze bundle\r\nnpx webpack-bundle-analyzer dist/your-app/stats.json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-service-worker-for-caching",children:"3. Service Worker for Caching"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Add service worker\r\nng add @angular/pwa\r\n\r\n# This will add caching for your app shell and static assets\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-optimize-images-and-assets",children:"4. Optimize Images and Assets"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Install image optimization tools\r\nnpm install --save-dev imagemin imagemin-webp imagemin-mozjpeg imagemin-pngquant\r\n\r\n# Create optimization script in package.json\r\n"scripts": {\r\n  "optimize-images": "imagemin src/assets/images/* --out-dir=dist/assets/images --plugin=webp --plugin=mozjpeg --plugin=pngquant"\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"deployment-options",children:"Deployment Options"}),"\n",(0,t.jsx)(n.h3,{id:"option-1-static-hosting-recommended-for-frontend-only",children:"Option 1: Static Hosting (Recommended for Frontend-Only)"}),"\n",(0,t.jsx)(n.h4,{id:"netlify-deployment",children:"Netlify Deployment"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Build for production\r\nnpm run build\r\n\r\n# Install Netlify CLI\r\nnpm install -g netlify-cli\r\n\r\n# Deploy\r\nnetlify deploy --prod --dir=dist/your-app\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"netlify.toml configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[build]\r\n  publish = "dist/your-app"\r\n  command = "npm run build"\r\n\r\n[[redirects]]\r\n  from = "/*"\r\n  to = "/index.html"\r\n  status = 200\r\n\r\n[[headers]]\r\n  for = "/*"\r\n  [headers.values]\r\n    X-Frame-Options = "DENY"\r\n    X-XSS-Protection = "1; mode=block"\r\n    X-Content-Type-Options = "nosniff"\r\n    Referrer-Policy = "strict-origin-when-cross-origin"\n'})}),"\n",(0,t.jsx)(n.h4,{id:"vercel-deployment",children:"Vercel Deployment"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Install Vercel CLI\r\nnpm install -g vercel\r\n\r\n# Deploy\r\nvercel --prod\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"vercel.json configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\r\n  "version": 2,\r\n  "builds": [\r\n    {\r\n      "src": "package.json",\r\n      "use": "@vercel/static-build",\r\n      "config": {\r\n        "distDir": "dist/your-app"\r\n      }\r\n    }\r\n  ],\r\n  "routes": [\r\n    {\r\n      "src": "/(.*)",\r\n      "dest": "/index.html"\r\n    }\r\n  ],\r\n  "headers": [\r\n    {\r\n      "source": "/(.*)",\r\n      "headers": [\r\n        {\r\n          "key": "X-Frame-Options",\r\n          "value": "DENY"\r\n        },\r\n        {\r\n          "key": "X-Content-Type-Options",\r\n          "value": "nosniff"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"option-2-docker-containerization",children:"Option 2: Docker Containerization"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Dockerfile:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dockerfile",children:'# Multi-stage build\r\nFROM node:18-alpine AS build\r\n\r\nWORKDIR /app\r\nCOPY package*.json ./\r\nRUN npm ci --only=production\r\n\r\nCOPY . .\r\nRUN npm run build\r\n\r\n# Production stage\r\nFROM nginx:alpine\r\n\r\n# Copy built app\r\nCOPY --from=build /app/dist/your-app /usr/share/nginx/html\r\n\r\n# Copy nginx configuration\r\nCOPY nginx.conf /etc/nginx/nginx.conf\r\n\r\nEXPOSE 80\r\nCMD ["nginx", "-g", "daemon off;"]\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"nginx.conf:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-nginx",children:'events {\r\n    worker_connections 1024;\r\n}\r\n\r\nhttp {\r\n    include /etc/nginx/mime.types;\r\n    default_type application/octet-stream;\r\n\r\n    # Gzip compression\r\n    gzip on;\r\n    gzip_vary on;\r\n    gzip_min_length 1024;\r\n    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\r\n\r\n    server {\r\n        listen 80;\r\n        server_name localhost;\r\n        root /usr/share/nginx/html;\r\n        index index.html;\r\n\r\n        # Security headers\r\n        add_header X-Frame-Options "SAMEORIGIN" always;\r\n        add_header X-Content-Type-Options "nosniff" always;\r\n        add_header X-XSS-Protection "1; mode=block" always;\r\n\r\n        # Handle Angular routing\r\n        location / {\r\n            try_files $uri $uri/ /index.html;\r\n        }\r\n\r\n        # Cache static assets\r\n        location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {\r\n            expires 1y;\r\n            add_header Cache-Control "public, immutable";\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Build and deploy:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Build Docker image\r\ndocker build -t your-chat-app .\r\n\r\n# Run locally\r\ndocker run -p 8080:80 your-chat-app\r\n\r\n# Deploy to cloud (example with Google Cloud Run)\r\ngcloud run deploy your-chat-app --image your-chat-app --platform managed\n"})}),"\n",(0,t.jsx)(n.h3,{id:"option-3-aws-s3--cloudfront",children:"Option 3: AWS S3 + CloudFront"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Build for production\r\nnpm run build\r\n\r\n# Install AWS CLI and configure\r\naws configure\r\n\r\n# Sync to S3\r\naws s3 sync dist/your-app/ s3://your-bucket-name --delete\r\n\r\n# Invalidate CloudFront cache\r\naws cloudfront create-invalidation --distribution-id YOUR_DISTRIBUTION_ID --paths "/*"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-monitoring--analytics",children:"\ud83d\udd0d Monitoring & Analytics"}),"\n",(0,t.jsx)(n.h3,{id:"1-error-tracking-with-sentry",children:"1. Error Tracking with Sentry"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install @sentry/angular @sentry/tracing\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// app.module.ts\r\nimport * as Sentry from "@sentry/angular";\r\nimport { Integrations } from "@sentry/tracing";\r\n\r\nSentry.init({\r\n  dsn: "YOUR_SENTRY_DSN",\r\n  integrations: [\r\n    new Integrations.BrowserTracing({\r\n      tracingOrigins: ["localhost", "your-domain.com", /^\\//],\r\n      routingInstrumentation: Sentry.routingInstrumentation,\r\n    }),\r\n  ],\r\n  tracesSampleRate: 1.0,\r\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-performance-monitoring",children:"2. Performance Monitoring"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// performance.service.ts\r\n@Injectable()\r\nexport class PerformanceService {\r\n  trackLLMResponse(provider: string, responseTime: number) {\r\n    if (environment.enableAnalytics) {\r\n      // Track to your analytics service\r\n      gtag('event', 'llm_response', {\r\n        provider: provider,\r\n        response_time: responseTime\r\n      });\r\n    }\r\n  }\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-health-check-endpoint",children:"3. Health Check Endpoint"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// health.service.ts\r\n@Injectable()\r\nexport class HealthService {\r\n  async checkHealth(): Promise<HealthStatus> {\r\n    return {\r\n      status: 'healthy',\r\n      timestamp: new Date().toISOString(),\r\n      version: environment.version,\r\n      llmProviders: await this.checkLLMProviders()\r\n    };\r\n  }\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,t.jsx)(n.h3,{id:"1-implement-onpush-change-detection",children:"1. Implement OnPush Change Detection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Component({\r\n  selector: 'app-message-list',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // ...\r\n})\r\nexport class MessageListComponent {\r\n  // Component implementation\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-virtual-scrolling-for-large-message-lists",children:"2. Virtual Scrolling for Large Message Lists"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// Install CDK\r\nnpm install @angular/cdk\r\n\r\n// Implement virtual scrolling\r\n<cdk-virtual-scroll-viewport itemSize="50" class="message-viewport">\r\n  <div *cdkVirtualFor="let message of messages">\r\n    <app-message-bubble [message]="message"></app-message-bubble>\r\n  </div>\r\n</cdk-virtual-scroll-viewport>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-implement-proper-caching",children:"3. Implement Proper Caching"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Injectable()\r\nexport class CacheService {\r\n  private cache = new Map<string, any>();\r\n\r\n  get(key: string): any {\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  set(key: string, value: any, ttl: number = 300000): void {\r\n    this.cache.set(key, value);\r\n    setTimeout(() => this.cache.delete(key), ttl);\r\n  }\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"common-production-issues--solutions",children:"Common Production Issues & Solutions"}),"\n",(0,t.jsx)(n.h3,{id:"issue-1-cors-errors-with-llm-apis",children:"Issue 1: CORS Errors with LLM APIs"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Implement backend proxy or use CORS-enabled endpoints"]}),"\n",(0,t.jsx)(n.h3,{id:"issue-2-large-bundle-size",children:"Issue 2: Large Bundle Size"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Implement lazy loading and tree shaking"]}),"\n",(0,t.jsx)(n.h3,{id:"issue-3-api-key-exposure",children:"Issue 3: API Key Exposure"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Move API calls to backend or use environment variables"]}),"\n",(0,t.jsx)(n.h3,{id:"issue-4-memory-leaks",children:"Issue 4: Memory Leaks"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Proper subscription management with takeUntil pattern"]}),"\n",(0,t.jsx)(n.h3,{id:"issue-5-slow-initial-load",children:"Issue 5: Slow Initial Load"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Implement service worker and optimize critical rendering path"]}),"\n",(0,t.jsx)(n.h2,{id:"production-deployment-checklist",children:"Production Deployment Checklist"}),"\n",(0,t.jsx)(n.h3,{id:"pre-deployment",children:"Pre-Deployment"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Run production build locally and test"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Check bundle size and performance"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Verify all environment variables are set"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test error scenarios and fallbacks"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Validate security headers and CSP"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Run accessibility audit"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test on multiple devices and browsers"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"deployment",children:"Deployment"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Deploy to staging environment first"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Run smoke tests on staging"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Monitor error rates and performance"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Deploy to production"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Verify deployment health"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Monitor initial traffic and errors"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"post-deployment",children:"Post-Deployment"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up monitoring alerts"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure backup and recovery procedures"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Document rollback procedures"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up automated health checks"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Monitor user feedback and analytics"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"cicd-pipeline-example",children:"CI/CD Pipeline Example"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"GitHub Actions workflow (.github/workflows/deploy.yml):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"name: Deploy to Production\r\n\r\non:\r\n  push:\r\n    branches: [main]\r\n\r\njobs:\r\n  build-and-deploy:\r\n    runs-on: ubuntu-latest\r\n    \r\n    steps:\r\n    - uses: actions/checkout@v3\r\n    \r\n    - name: Setup Node.js\r\n      uses: actions/setup-node@v3\r\n      with:\r\n        node-version: '18'\r\n        cache: 'npm'\r\n    \r\n    - name: Install dependencies\r\n      run: npm ci\r\n    \r\n    - name: Run tests\r\n      run: npm run test:ci\r\n    \r\n    - name: Build for production\r\n      run: npm run build\r\n      env:\r\n        NODE_ENV: production\r\n    \r\n    - name: Deploy to Netlify\r\n      uses: nwtgck/actions-netlify@v2.0\r\n      with:\r\n        publish-dir: './dist/your-app'\r\n        production-branch: main\r\n        github-token: ${{ secrets.GITHUB_TOKEN }}\r\n        deploy-message: \"Deploy from GitHub Actions\"\r\n      env:\r\n        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}\r\n        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"Building for production requires careful attention to security, performance, and reliability. The key considerations for your LLM-integrated chat application are:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Security First"}),": Protect API keys and implement proper authentication"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance"}),": Optimize bundle size and implement caching"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reliability"}),": Handle errors gracefully and provide fallbacks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitoring"}),": Track performance and errors in real-time"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scalability"}),": Design for growth and increased usage"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Choose the deployment option that best fits your needs, infrastructure, and budget. Start with static hosting for simplicity, then move to containerized solutions as your requirements grow."}),"\n",(0,t.jsx)(n.p,{children:"Remember to test thoroughly in a staging environment that mirrors production before deploying to live users."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const t={},s=r.createContext(t);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);