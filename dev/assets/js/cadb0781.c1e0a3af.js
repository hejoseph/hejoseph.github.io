"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[3627],{6342:e=>{e.exports=JSON.parse('{"tag":{"label":"api-integration","permalink":"/dev/docs/tags/api-integration","allTagsPath":"/dev/docs/tags","count":3,"items":[{"id":"tech-related/Langchain/langchain-benefits","title":"API vs LangChain","description":"When working with language model APIs (like OpenAI, Anthropic, or others), you can interact with them either directly via their HTTP APIs or indirectly by using a framework such as LangChain. Here are the main differences:","permalink":"/dev/docs/tech-related/Langchain/langchain-benefits"},{"id":"Python/Chatbot/chat-with-different-ai-api","title":"Extensible AI Chat Structure","description":"For an extensible chat application where users can choose different AI models (e.g., Gemini, OpenAI, and more in the future), a structured approach using Abstract Base Classes (ABCs) and the Factory Pattern is highly effective. This allows you to define a common interface for all AI providers and easily plug in new ones without modifying existing core logic.","permalink":"/dev/docs/Python/Chatbot/chat-with-different-ai-api"},{"id":"tech-related/Huggingface/Models/models-api-usage-example","title":"Hugging Face API Usage","description":"Hugging Face provides a simple and efficient API to access and interact with a wide variety of pre-trained machine learning models. You can use these models for tasks like text generation, sentiment analysis, translation, and more, directly from your application via HTTP requests.","permalink":"/dev/docs/tech-related/Huggingface/Models/models-api-usage-example"}],"unlisted":false}}')}}]);