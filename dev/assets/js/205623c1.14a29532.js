"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[8245],{5319:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Python/python-naming-convention","title":"Naming Conventions","description":"Python follows the PEP 8 style guide for naming conventions. This guide helps improve code readability and maintainability across files, classes, methods, and variables. Below are best practices for naming in Python:","source":"@site/docs/Python/python-naming-convention.md","sourceDirName":"Python","slug":"/Python/python-naming-convention","permalink":"/dev/docs/Python/python-naming-convention","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"python","permalink":"/dev/docs/tags/python"},{"inline":true,"label":"best practices","permalink":"/dev/docs/tags/best-practices"},{"inline":true,"label":"naming conventions","permalink":"/dev/docs/tags/naming-conventions"}],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Naming Conventions","sidebar_position":1,"tags":["python","best practices","naming conventions"]},"sidebar":"tutorialSidebar","previous":{"title":"GitHub rate limit","permalink":"/dev/docs/Git/github-ai"},"next":{"title":"Extensible AI Chat Structure","permalink":"/dev/docs/Python/Chatbot/chat-with-different-ai-api"}}');var r=s(4848),t=s(8453);const l={title:"Naming Conventions",sidebar_position:1,tags:["python","best practices","naming conventions"]},a="Python Naming Best Practices",d={},c=[{value:"1. File Names",id:"1-file-names",level:2},{value:"2. Class Names",id:"2-class-names",level:2},{value:"3. Method and Function Names",id:"3-method-and-function-names",level:2},{value:"4. Variable Names",id:"4-variable-names",level:2},{value:"5. Constants",id:"5-constants",level:2},{value:"6. Private Members",id:"6-private-members",level:2},{value:"7. Special Methods",id:"7-special-methods",level:2}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"python-naming-best-practices",children:"Python Naming Best Practices"})}),"\n",(0,r.jsxs)(n.p,{children:["Python follows the ",(0,r.jsx)(n.a,{href:"https://peps.python.org/pep-0008/",children:"PEP 8"})," style guide for naming conventions. This guide helps improve code readability and maintainability across files, classes, methods, and variables. Below are best practices for naming in Python:"]}),"\n",(0,r.jsx)(n.h2,{id:"1-file-names",children:"1. File Names"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Should be ",(0,r.jsx)(n.strong,{children:"lowercase"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsxs)(n.strong,{children:["underscores (",(0,r.jsx)(n.code,{children:"_"}),")"]})," to separate words for readability."]}),"\n",(0,r.jsxs)(n.li,{children:["Example:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"user_controller.py\r\ndata_processor.py\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"2-class-names",children:"2. Class Names"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Should use the ",(0,r.jsx)(n.strong,{children:"CapWords"})," (also called ",(0,r.jsx)(n.em,{children:"CamelCase"})," or ",(0,r.jsx)(n.em,{children:"PascalCase"}),") convention."]}),"\n",(0,r.jsx)(n.li,{children:"Each word starts with a capital letter, no underscores."}),"\n",(0,r.jsxs)(n.li,{children:["Example:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class DataProcessor:\r\n    pass\r\n\r\nclass UserController:\r\n    pass\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3-method-and-function-names",children:"3. Method and Function Names"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Should be ",(0,r.jsx)(n.strong,{children:"lowercase"}),", with words separated by underscores (",(0,r.jsx)(n.code,{children:"_"}),") for readability."]}),"\n",(0,r.jsxs)(n.li,{children:["Example:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def process_data(self):\r\n    pass\r\n\r\ndef get_user_info(user_id):\r\n    pass\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"4-variable-names",children:"4. Variable Names"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Should be ",(0,r.jsx)(n.strong,{children:"lowercase"}),", with underscores (",(0,r.jsx)(n.code,{children:"_"}),") to improve readability."]}),"\n",(0,r.jsxs)(n.li,{children:["Example:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'total_count = 0\r\nuser_name = "Alice"\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"5-constants",children:"5. Constants"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.strong,{children:"all uppercase"})," letters, with words separated by underscores (",(0,r.jsx)(n.code,{children:"_"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Example:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'MAX_ATTEMPTS = 3\r\nAPI_KEY = "your-api-key"\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"6-private-members",children:"6. Private Members"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Prefix with a single underscore (",(0,r.jsx)(n.code,{children:"_"}),"), by convention, to indicate that it is for internal use."]}),"\n",(0,r.jsxs)(n.li,{children:["Example:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Example:\r\n    def _internal_method(self):\r\n        pass\r\n\r\n    def public_method(self):\r\n        pass\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"7-special-methods",children:"7. Special Methods"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:['Python\u2019s special methods (aka "magic methods") use double underscores before and after the name (e.g., ',(0,r.jsx)(n.code,{children:"__init__"}),", ",(0,r.jsx)(n.code,{children:"__str__"}),"). These are reserved for Python's internal use."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Summary Table"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Context"}),(0,r.jsx)(n.th,{children:"Convention"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"File"}),(0,r.jsx)(n.td,{children:"snake_case"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"my_script.py"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Class"}),(0,r.jsx)(n.td,{children:"CapWords"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"MyClass"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Function/Method"}),(0,r.jsx)(n.td,{children:"snake_case"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"my_function()"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Variable"}),(0,r.jsx)(n.td,{children:"snake_case"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"my_variable"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Constant"}),(0,r.jsx)(n.td,{children:"UPPER_CASE"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"MY_CONSTANT"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Private Member"}),(0,r.jsx)(n.td,{children:"_snake_case (prefix)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_my_private_member"})})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"Following these conventions keeps your Python code professional, clean, and easy to understand for others and for yourself in the future."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);