"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[7823],{2761:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"react/astro","title":"Astro file","description":"The astro.config.mjs file is the main configuration file for an Astro project. It defines how Astro should behave during development and build processes. It\u2019s written in JavaScript (with the .mjs extension to enable ES module syntax).","source":"@site/docs/react/astro.md","sourceDirName":"react","slug":"/react/astro","permalink":"/dev/docs/react/astro","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"astro","permalink":"/dev/docs/tags/astro"}],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Astro file","sidebar_position":1,"tags":["astro"]},"sidebar":"tutorialSidebar","previous":{"title":"React","permalink":"/dev/docs/category/react"},"next":{"title":"Package.json file","permalink":"/dev/docs/react/package.json"}}');var t=n(4848),r=n(8453);const o={title:"Astro file",sidebar_position:1,tags:["astro"]},d="Astro Configuration File (astro.config.mjs)",a={},c=[{value:"Basic Example",id:"basic-example",level:2},{value:"Breakdown of Fields",id:"breakdown-of-fields",level:2},{value:"<code>defineConfig()</code>",id:"defineconfig",level:3},{value:"<code>integrations</code>",id:"integrations",level:3},{value:"<code>site</code>",id:"site",level:3},{value:"<code>outDir</code>",id:"outdir",level:3},{value:"<code>base</code>",id:"base",level:3},{value:"<code>build</code>",id:"build",level:3},{value:"When Used with React",id:"when-used-with-react",level:2},{value:"Optional Fields You Might See",id:"optional-fields-you-might-see",level:2},{value:"<code>vite</code>",id:"vite",level:3},{value:"<code>markdown</code>",id:"markdown",level:3}];function l(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsxs)(i.h1,{id:"astro-configuration-file-astroconfigmjs",children:["Astro Configuration File (",(0,t.jsx)(i.code,{children:"astro.config.mjs"}),")"]})}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"astro.config.mjs"})," file is the main configuration file for an Astro project. It defines how Astro should behave during development and build processes. It\u2019s written in JavaScript (with the ",(0,t.jsx)(i.code,{children:".mjs"})," extension to enable ES module syntax)."]}),"\n",(0,t.jsx)(i.h2,{id:"basic-example",children:"Basic Example"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-js",children:"import { defineConfig } from 'astro/config';\r\nimport react from '@astrojs/react';\r\n\r\n// https://astro.build/config\r\nexport default defineConfig({\r\n  integrations: [react()],\r\n  site: 'https://example.com',\r\n  outDir: './dist',\r\n  base: '/',\r\n  build: {\r\n    format: 'directory',\r\n  },\r\n});\n"})}),"\n",(0,t.jsx)(i.h2,{id:"breakdown-of-fields",children:"Breakdown of Fields"}),"\n",(0,t.jsx)(i.h3,{id:"defineconfig",children:(0,t.jsx)(i.code,{children:"defineConfig()"})}),"\n",(0,t.jsx)(i.p,{children:"A helper function from Astro that provides type-safety and editor IntelliSense."}),"\n",(0,t.jsx)(i.h3,{id:"integrations",children:(0,t.jsx)(i.code,{children:"integrations"})}),"\n",(0,t.jsxs)(i.p,{children:["An array of Astro integrations (plugins). In this example, React is enabled so that you can use React components inside ",(0,t.jsx)(i.code,{children:".astro"})," files."]}),"\n",(0,t.jsx)(i.h3,{id:"site",children:(0,t.jsx)(i.code,{children:"site"})}),"\n",(0,t.jsx)(i.p,{children:"Specifies the canonical URL of your site. Useful for generating correct URLs for things like sitemaps, RSS feeds, and meta tags."}),"\n",(0,t.jsx)(i.h3,{id:"outdir",children:(0,t.jsx)(i.code,{children:"outDir"})}),"\n",(0,t.jsxs)(i.p,{children:["The output directory for the built site. Default is ",(0,t.jsx)(i.code,{children:"dist"}),"."]}),"\n",(0,t.jsx)(i.h3,{id:"base",children:(0,t.jsx)(i.code,{children:"base"})}),"\n",(0,t.jsx)(i.p,{children:"The base path for the site. This is useful if you are deploying to a subdirectory (e.g., GitHub Pages)."}),"\n",(0,t.jsx)(i.h3,{id:"build",children:(0,t.jsx)(i.code,{children:"build"})}),"\n",(0,t.jsx)(i.p,{children:"Allows further customization of the build process:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"format: 'directory'"})," means each route becomes its own directory with an ",(0,t.jsx)(i.code,{children:"index.html"})," file inside (e.g., ",(0,t.jsx)(i.code,{children:"/about/index.html"}),")."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"when-used-with-react",children:"When Used with React"}),"\n",(0,t.jsx)(i.p,{children:"Even if you're building primarily a React app, you might be:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Using Astro for static site generation (SSG) with React components."}),"\n",(0,t.jsx)(i.li,{children:"Migrating from or to Astro."}),"\n",(0,t.jsx)(i.li,{children:"Combining content-focused pages (e.g., blog, docs) with an SPA or MPA structure."}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"optional-fields-you-might-see",children:"Optional Fields You Might See"}),"\n",(0,t.jsx)(i.h3,{id:"vite",children:(0,t.jsx)(i.code,{children:"vite"})}),"\n",(0,t.jsx)(i.p,{children:"Allows passing custom Vite configuration."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-js",children:"vite: {\r\n  server: {\r\n    port: 3000,\r\n  },\r\n},\n"})}),"\n",(0,t.jsx)(i.h3,{id:"markdown",children:(0,t.jsx)(i.code,{children:"markdown"})}),"\n",(0,t.jsx)(i.p,{children:"Control how Markdown is rendered."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-js",children:"markdown: {\r\n  syntaxHighlight: 'prism',\r\n}\n"})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsxs)(i.p,{children:["If your app is primarily a React SPA, the presence of ",(0,t.jsx)(i.code,{children:"astro.config.mjs"})," likely means Astro is serving as the meta-framework around your React code\u2014rendering pages at build time or combining static and dynamic parts."]}),"\n",(0,t.jsxs)(i.p,{children:["You can find full docs here: ",(0,t.jsx)(i.a,{href:"https://docs.astro.build/en/reference/configuration/",children:"Astro Configuration Reference"})]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>d});var s=n(6540);const t={},r=s.createContext(t);function o(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);