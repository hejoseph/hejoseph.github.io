"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[6189],{4815:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"QA-Testing/Test-Design-Coverage/boundary-value-analysis","title":"Test Case Design Technique: Boundary Value Analysis (BVA)","description":"Overview","source":"@site/docs/QA-Testing/3-Test-Design-Coverage/2-boundary-value-analysis.md","sourceDirName":"QA-Testing/3-Test-Design-Coverage","slug":"/QA-Testing/Test-Design-Coverage/boundary-value-analysis","permalink":"/dev/docs/QA-Testing/Test-Design-Coverage/boundary-value-analysis","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Test Case Design Technique: Equivalence Partitioning","permalink":"/dev/docs/QA-Testing/Test-Design-Coverage/equivalence-partitioning"},"next":{"title":"Test Case Design Technique: Decision Table Testing","permalink":"/dev/docs/QA-Testing/Test-Design-Coverage/decision-table"}}');var r=s(4848),t=s(8453);const l={},d="Test Case Design Technique: Boundary Value Analysis (BVA)",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Why Use Boundary Value Analysis?",id:"why-use-boundary-value-analysis",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Example 1: Age Field (Valid Range: 18\u201365)",id:"example-1-age-field-valid-range-1865",level:2},{value:"Example 2: Password Length (Valid: 8\u201316 characters)",id:"example-2-password-length-valid-816-characters",level:2},{value:"Boundary Value Testing for Multiple Fields",id:"boundary-value-testing-for-multiple-fields",level:2},{value:"Variants of BVA",id:"variants-of-bva",level:2},{value:"1. <strong>Single Boundary Testing</strong>",id:"1-single-boundary-testing",level:3},{value:"2. <strong>Multiple Boundary Testing</strong>",id:"2-multiple-boundary-testing",level:3},{value:"When to Use BVA",id:"when-to-use-bva",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Summary",id:"summary",level:2},{value:"Quick BVA Template",id:"quick-bva-template",level:2}];function o(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"test-case-design-technique-boundary-value-analysis-bva",children:"Test Case Design Technique: Boundary Value Analysis (BVA)"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Boundary Value Analysis (BVA)"})," is a black-box testing technique that focuses on ",(0,r.jsx)(n.strong,{children:"testing at the edges (boundaries)"})," of input ranges where errors are most likely to occur. The idea is simple: ",(0,r.jsx)(n.strong,{children:"bugs often occur at the limits of input values"}),", not in the middle."]}),"\n",(0,r.jsxs)(n.p,{children:["This technique complements ",(0,r.jsx)(n.strong,{children:"Equivalence Partitioning (EP)"})," by zeroing in on the critical \u201cjust-at-the-edge\u201d conditions for maximum bug detection."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"why-use-boundary-value-analysis",children:"Why Use Boundary Value Analysis?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Many defects occur ",(0,r.jsx)(n.strong,{children:"at the boundaries"})," of input ranges."]}),"\n",(0,r.jsxs)(n.li,{children:["Helps ensure ",(0,r.jsx)(n.strong,{children:"limit conditions"})," are handled properly."]}),"\n",(0,r.jsxs)(n.li,{children:["Reduces test cases while still ",(0,r.jsx)(n.strong,{children:"increasing coverage"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Especially useful for ",(0,r.jsx)(n.strong,{children:"numeric fields, date ranges, loops, counters, arrays"}),", etc."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Identify input ranges (e.g., min & max values)."}),"\n",(0,r.jsx)(n.li,{children:"Determine boundaries for valid and invalid input."}),"\n",(0,r.jsxs)(n.li,{children:["Create test cases for:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Minimum value (valid)"}),"\n",(0,r.jsx)(n.li,{children:"Minimum - 1 (invalid)"}),"\n",(0,r.jsx)(n.li,{children:"Maximum value (valid)"}),"\n",(0,r.jsx)(n.li,{children:"Maximum + 1 (invalid)"}),"\n",(0,r.jsx)(n.li,{children:"Optionally, midpoint or typical valid value"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"example-1-age-field-valid-range-1865",children:"Example 1: Age Field (Valid Range: 18\u201365)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Test Case Description"}),(0,r.jsx)(n.th,{children:"Input Value"}),(0,r.jsx)(n.th,{children:"Expected Result"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Lower boundary (valid)"}),(0,r.jsx)(n.td,{children:"18"}),(0,r.jsx)(n.td,{children:"Accepted"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Just below lower boundary"}),(0,r.jsx)(n.td,{children:"17"}),(0,r.jsx)(n.td,{children:"Rejected"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Upper boundary (valid)"}),(0,r.jsx)(n.td,{children:"65"}),(0,r.jsx)(n.td,{children:"Accepted"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Just above upper boundary"}),(0,r.jsx)(n.td,{children:"66"}),(0,r.jsx)(n.td,{children:"Rejected"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Mid-range value (optional)"}),(0,r.jsx)(n.td,{children:"30"}),(0,r.jsx)(n.td,{children:"Accepted"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"example-2-password-length-valid-816-characters",children:"Example 2: Password Length (Valid: 8\u201316 characters)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Test Case Description"}),(0,r.jsx)(n.th,{children:"Input (Length)"}),(0,r.jsx)(n.th,{children:"Expected Result"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Lower boundary valid"}),(0,r.jsx)(n.td,{children:"8"}),(0,r.jsx)(n.td,{children:"Accepted"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Lower boundary invalid"}),(0,r.jsx)(n.td,{children:"7"}),(0,r.jsx)(n.td,{children:"Rejected"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Upper boundary valid"}),(0,r.jsx)(n.td,{children:"16"}),(0,r.jsx)(n.td,{children:"Accepted"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Upper boundary invalid"}),(0,r.jsx)(n.td,{children:"17"}),(0,r.jsx)(n.td,{children:"Rejected"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Mid-value"}),(0,r.jsx)(n.td,{children:"12"}),(0,r.jsx)(n.td,{children:"Accepted"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"boundary-value-testing-for-multiple-fields",children:"Boundary Value Testing for Multiple Fields"}),"\n",(0,r.jsxs)(n.p,{children:["If multiple fields have numeric or range-based constraints, test boundaries ",(0,r.jsx)(n.strong,{children:"independently and together"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Example: For a login form with ",(0,r.jsx)(n.strong,{children:"username (3\u201310 chars)"})," and ",(0,r.jsx)(n.strong,{children:"password (8\u201316 chars)"}),", test:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Username = 3 (valid), Password = 8 (valid)"}),"\n",(0,r.jsx)(n.li,{children:"Username = 2 (invalid), Password = 8 (valid)"}),"\n",(0,r.jsx)(n.li,{children:"Username = 3 (valid), Password = 7 (invalid)"}),"\n",(0,r.jsx)(n.li,{children:"... etc."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"variants-of-bva",children:"Variants of BVA"}),"\n",(0,r.jsxs)(n.h3,{id:"1-single-boundary-testing",children:["1. ",(0,r.jsx)(n.strong,{children:"Single Boundary Testing"})]}),"\n",(0,r.jsx)(n.p,{children:"Test only one input at a time while keeping others valid."}),"\n",(0,r.jsxs)(n.h3,{id:"2-multiple-boundary-testing",children:["2. ",(0,r.jsx)(n.strong,{children:"Multiple Boundary Testing"})]}),"\n",(0,r.jsx)(n.p,{children:"All input fields are tested with their boundary values simultaneously."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"when-to-use-bva",children:"When to Use BVA"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Input ranges (e.g., min/max limits)"}),"\n",(0,r.jsx)(n.li,{children:"Form validations (e.g., age, salary, percentages)"}),"\n",(0,r.jsx)(n.li,{children:"Date validations (e.g., start date/end date)"}),"\n",(0,r.jsx)(n.li,{children:"Loops, pagination, counters, numeric APIs"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Always pair BVA with ",(0,r.jsx)(n.strong,{children:"Equivalence Partitioning"})," for full test coverage."]}),"\n",(0,r.jsxs)(n.li,{children:["Watch out for ",(0,r.jsx)(n.strong,{children:"off-by-one"})," errors\u2014common bugs around boundaries."]}),"\n",(0,r.jsxs)(n.li,{children:["Don't forget ",(0,r.jsx)(n.strong,{children:"negative test cases"})," (outside the boundary)."]}),"\n",(0,r.jsxs)(n.li,{children:["Use BVA for ",(0,r.jsx)(n.strong,{children:"both input fields and output values"})," when applicable."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Boundary Value Analysis"})," is a powerful technique to catch errors that commonly occur at the extremes of input domains. It's a must-use method in a senior QA's toolkit for designing efficient, high-impact test cases."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:'"If you want to find bugs fast, push the system to its limits\u2014right at the boundaries."'}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"quick-bva-template",children:"Quick BVA Template"}),"\n",(0,r.jsxs)(n.p,{children:["For any field with range ",(0,r.jsx)(n.code,{children:"[min, max]"}),":"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Case"}),(0,r.jsx)(n.th,{children:"Value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Lower Invalid"}),(0,r.jsx)(n.td,{children:"min - 1"}),(0,r.jsx)(n.td,{children:"Just below range"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Lower Boundary"}),(0,r.jsx)(n.td,{children:"min"}),(0,r.jsx)(n.td,{children:"Lowest valid"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Upper Boundary"}),(0,r.jsx)(n.td,{children:"max"}),(0,r.jsx)(n.td,{children:"Highest valid"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Upper Invalid"}),(0,r.jsx)(n.td,{children:"max + 1"}),(0,r.jsx)(n.td,{children:"Just above range"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Midpoint (optional)"}),(0,r.jsx)(n.td,{children:"(min+max)/2"}),(0,r.jsx)(n.td,{children:"A typical valid input"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);