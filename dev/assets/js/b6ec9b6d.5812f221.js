"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[8],{996:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Git/gitflow-real-usecase","title":"Git Flow Usage","description":"Git Flow is a branching model for Git, introduced by Vincent Driessen, designed to manage feature development, releases, and hotfixes in a robust and structured way.","source":"@site/docs/Git/gitflow-real-usecase.md","sourceDirName":"Git","slug":"/Git/gitflow-real-usecase","permalink":"/dev/docs/Git/gitflow-real-usecase","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"git","permalink":"/dev/docs/tags/git"},{"inline":true,"label":"version control","permalink":"/dev/docs/tags/version-control"},{"inline":true,"label":"branching strategy","permalink":"/dev/docs/tags/branching-strategy"}],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Git Flow Usage","sidebar_position":4,"tags":["git","version control","branching strategy"]},"sidebar":"tutorialSidebar","previous":{"title":"Gitflow","permalink":"/dev/docs/Git/git-flow"},"next":{"title":"git-tags","permalink":"/dev/docs/Git/git-tags"}}');var s=i(4848),t=i(8453);const a={title:"Git Flow Usage",sidebar_position:4,tags:["git","version control","branching strategy"]},l="Git Flow: Examples & Real Use Cases",o={},c=[{value:"Key Branches in Git Flow",id:"key-branches-in-git-flow",level:2},{value:"Example Workflow",id:"example-workflow",level:2},{value:"1. Starting a Feature",id:"1-starting-a-feature",level:3},{value:"2. Starting a Release",id:"2-starting-a-release",level:3},{value:"3. Hotfixing Production",id:"3-hotfixing-production",level:3},{value:"Real Use Case",id:"real-use-case",level:2},{value:"Scenario: Software Company Delivering SaaS",id:"scenario-software-company-delivering-saas",level:3},{value:"Summary",id:"summary",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"git-flow-examples--real-use-cases",children:"Git Flow: Examples & Real Use Cases"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Git Flow"})," is a branching model for Git, introduced by Vincent Driessen, designed to manage feature development, releases, and hotfixes in a robust and structured way."]}),"\n",(0,s.jsx)(n.h2,{id:"key-branches-in-git-flow",children:"Key Branches in Git Flow"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"master"}),": Always reflects production-ready state."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"develop"}),": Integrates features; latest delivered development changes."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"feature/*"}),": For new features; branched from ",(0,s.jsx)(n.code,{children:"develop"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"release/*"}),": Prepares for a new production release; branched from ",(0,s.jsx)(n.code,{children:"develop"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"hotfix/*"}),": Fixes urgent issues in production; branched from ",(0,s.jsx)(n.code,{children:"master"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"example-workflow",children:"Example Workflow"}),"\n",(0,s.jsx)(n.h3,{id:"1-starting-a-feature",children:"1. Starting a Feature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout develop\r\ngit checkout -b feature/user-authentication\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Develop new feature (e.g., user authentication)."}),"\n",(0,s.jsx)(n.li,{children:"Commit changes regularly."}),"\n",(0,s.jsxs)(n.li,{children:["When done:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout develop\r\ngit merge feature/user-authentication\r\ngit branch -d feature/user-authentication\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-starting-a-release",children:"2. Starting a Release"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout develop\r\ngit checkout -b release/1.0.0\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Finalize features, fix bugs, update version numbers."}),"\n",(0,s.jsxs)(n.li,{children:["When stable:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout master\r\ngit merge release/1.0.0\r\ngit tag -a 1.0.0\r\ngit checkout develop\r\ngit merge release/1.0.0\r\ngit branch -d release/1.0.0\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-hotfixing-production",children:"3. Hotfixing Production"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout master\r\ngit checkout -b hotfix/1.0.1\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Fix critical production issue."}),"\n",(0,s.jsxs)(n.li,{children:["When finished:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout master\r\ngit merge hotfix/1.0.1\r\ngit tag -a 1.0.1\r\ngit checkout develop\r\ngit merge hotfix/1.0.1\r\ngit branch -d hotfix/1.0.1\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"real-use-case",children:"Real Use Case"}),"\n",(0,s.jsx)(n.h3,{id:"scenario-software-company-delivering-saas",children:"Scenario: Software Company Delivering SaaS"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Features"}),': Each new feature (e.g., "Billing Integration") is developed in its own ',(0,s.jsx)(n.code,{children:"feature/billing-integration"})," branch."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Release Preparation"}),": Before deployment, all recent features are merged into a ",(0,s.jsx)(n.code,{children:"release/2.5.0"})," branch for QA, bug fixing, and documentation updates."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Hotfixes"}),": A critical security bug is discovered in production. A ",(0,s.jsx)(n.code,{children:"hotfix/2.4.1"})," branch is created from ",(0,s.jsx)(n.code,{children:"master"}),", fixed, then merged back into both ",(0,s.jsx)(n.code,{children:"master"})," and ",(0,s.jsx)(n.code,{children:"develop"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Clean separation of new development, stabilization, and urgent fixes."}),"\n",(0,s.jsx)(n.li,{children:"Parallel development without interfering with production code."}),"\n",(0,s.jsx)(n.li,{children:"Clear process for preparing and releasing software."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(n.p,{children:"Git Flow is ideal for teams with a scheduled release cycle, multiple developers, and the need to support ongoing production hotfixes alongside new development. It brings structure and clarity to complex projects."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var r=i(6540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);