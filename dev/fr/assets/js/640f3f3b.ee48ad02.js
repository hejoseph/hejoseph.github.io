"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[5323],{5914:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"QA-Testing/Test-Design-Coverage/map-test-case-user-story","title":"Mapping Test Cases to Requirements/User Stories","description":"Overview","source":"@site/docs/QA-Testing/3-Test-Design-Coverage/7-map-test-case-user-story.md","sourceDirName":"QA-Testing/3-Test-Design-Coverage","slug":"/QA-Testing/Test-Design-Coverage/map-test-case-user-story","permalink":"/dev/fr/docs/QA-Testing/Test-Design-Coverage/map-test-case-user-story","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Types of Test Coverage: Requirement, Code, and Risk Coverage","permalink":"/dev/fr/docs/QA-Testing/Test-Design-Coverage/test-coverage-types"}}');var t=n(4848),r=n(8453);const l={},a="Mapping Test Cases to Requirements/User Stories",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Why It Matters",id:"why-it-matters",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"1. Requirements/User Stories",id:"1-requirementsuser-stories",level:3},{value:"2. Test Cases",id:"2-test-cases",level:3},{value:"Mapping Techniques",id:"mapping-techniques",level:2},{value:"1. Traceability Matrix",id:"1-traceability-matrix",level:3},{value:"2. One-to-Many and Many-to-One Mapping",id:"2-one-to-many-and-many-to-one-mapping",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Agile Considerations",id:"agile-considerations",level:2},{value:"Benefits of Mapping",id:"benefits-of-mapping",level:2},{value:"Summary",id:"summary",level:2}];function o(e){const s={blockquote:"blockquote",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"mapping-test-cases-to-requirementsuser-stories",children:"Mapping Test Cases to Requirements/User Stories"})}),"\n",(0,t.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(s.p,{children:["Mapping test cases to ",(0,t.jsx)(s.strong,{children:"requirements"})," or ",(0,t.jsx)(s.strong,{children:"user stories"})," is the practice of ensuring that each specified system behavior or feature is ",(0,t.jsx)(s.strong,{children:"verified by one or more test cases"}),". This forms the foundation of ",(0,t.jsx)(s.strong,{children:"requirement traceability"}),", helping QA teams:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Validate that all requirements are tested"}),"\n",(0,t.jsx)(s.li,{children:"Identify gaps or redundant tests"}),"\n",(0,t.jsx)(s.li,{children:"Ensure changes in requirements are reflected in test cases"}),"\n",(0,t.jsx)(s.li,{children:"Facilitate audit and compliance tracking"}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"why-it-matters",children:"Why It Matters"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Ensures ",(0,t.jsx)(s.strong,{children:"test completeness"})]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Aligns QA efforts with ",(0,t.jsx)(s.strong,{children:"business needs"})]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Helps manage ",(0,t.jsx)(s.strong,{children:"regression risks"})," when changes occur"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Enables effective ",(0,t.jsx)(s.strong,{children:"impact analysis"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,t.jsx)(s.h3,{id:"1-requirementsuser-stories",children:"1. Requirements/User Stories"}),"\n",(0,t.jsxs)(s.p,{children:["These are ",(0,t.jsx)(s.strong,{children:"functional"})," or ",(0,t.jsx)(s.strong,{children:"non-functional"})," statements of what the system should do. In Agile, they are often written as:"]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:'"As a [user], I want to [do something], so that [value is achieved]."'})}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Example:"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"As a customer, I want to reset my password via email, so I can regain access if I forget it."})}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"2-test-cases",children:"2. Test Cases"}),"\n",(0,t.jsxs)(s.p,{children:["These are ",(0,t.jsx)(s.strong,{children:"concrete steps"})," to verify that the system behaves according to the requirement or user story."]}),"\n",(0,t.jsx)(s.p,{children:"Example test cases for the password reset story:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"TC01: Verify reset link is sent to registered email"}),"\n",(0,t.jsx)(s.li,{children:"TC02: Verify link expires after X minutes"}),"\n",(0,t.jsx)(s.li,{children:"TC03: Verify password reset form accepts valid new passwords"}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"mapping-techniques",children:"Mapping Techniques"}),"\n",(0,t.jsx)(s.h3,{id:"1-traceability-matrix",children:"1. Traceability Matrix"}),"\n",(0,t.jsxs)(s.p,{children:["The most common tool is the ",(0,t.jsx)(s.strong,{children:"Requirement Traceability Matrix (RTM)"}),". It is a table that links each requirement to its associated test case(s)."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Requirement/User Story ID"}),(0,t.jsx)(s.th,{children:"Requirement Description"}),(0,t.jsx)(s.th,{children:"Test Case ID(s)"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"US-101"}),(0,t.jsx)(s.td,{children:"Reset password via email"}),(0,t.jsx)(s.td,{children:"TC-01, TC-02, TC-03"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"US-102"}),(0,t.jsx)(s.td,{children:"Login with social media account"}),(0,t.jsx)(s.td,{children:"TC-04, TC-05"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"NFR-01"}),(0,t.jsx)(s.td,{children:"System must respond in <2 sec"}),(0,t.jsx)(s.td,{children:"TC-06"})]})]})]}),"\n",(0,t.jsx)(s.p,{children:"RTM is often maintained in tools like:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Jira"})," (using plugins like Xray, Zephyr)"]}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"TestRail"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"qTest"})}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Excel"})," for small projects"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"2-one-to-many-and-many-to-one-mapping",children:"2. One-to-Many and Many-to-One Mapping"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"One requirement \u2192 Many test cases"}),": Common when a feature has multiple validation paths (e.g., edge cases, negative testing)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Many requirements \u2192 One test case"}),": Can occur if test logic overlaps, but should be used with caution"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Write ",(0,t.jsx)(s.strong,{children:"clear, testable requirements"})," and user stories"]}),"\n",(0,t.jsxs)(s.li,{children:["Ensure ",(0,t.jsx)(s.strong,{children:"every requirement"})," has at least one associated test case"]}),"\n",(0,t.jsxs)(s.li,{children:["Update mappings when:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Requirements change"}),"\n",(0,t.jsx)(s.li,{children:"Test cases are added/removed"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["Use tools that support ",(0,t.jsx)(s.strong,{children:"bi-directional traceability"})]}),"\n",(0,t.jsxs)(s.li,{children:["Include ",(0,t.jsx)(s.strong,{children:"positive, negative, and edge case tests"})," per requirement"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"agile-considerations",children:"Agile Considerations"}),"\n",(0,t.jsx)(s.p,{children:"In Agile, mapping is more dynamic:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Link test cases directly to ",(0,t.jsx)(s.strong,{children:"user stories in Jira"})]}),"\n",(0,t.jsxs)(s.li,{children:["Use ",(0,t.jsx)(s.strong,{children:"acceptance criteria"})," from user stories to define test conditions"]}),"\n",(0,t.jsxs)(s.li,{children:["Review mapping during ",(0,t.jsx)(s.strong,{children:"backlog grooming"})," and ",(0,t.jsx)(s.strong,{children:"sprint planning"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Example:"}),"\n",(0,t.jsx)(s.p,{children:"User Story:"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsx)(s.p,{children:"As a user, I want to sort products by price."}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Acceptance Criteria:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Sort ascending"}),"\n",(0,t.jsx)(s.li,{children:"Sort descending"}),"\n",(0,t.jsx)(s.li,{children:"Sort persists across pages"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Mapped Test Cases:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"TC10: Verify ascending sort"}),"\n",(0,t.jsx)(s.li,{children:"TC11: Verify descending sort"}),"\n",(0,t.jsx)(s.li,{children:"TC12: Verify sort state is retained on pagination"}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"benefits-of-mapping",children:"Benefits of Mapping"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Benefit"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Traceability"})}),(0,t.jsx)(s.td,{children:"Understand which tests validate which requirements"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Impact Analysis"})}),(0,t.jsx)(s.td,{children:"Know which tests to update when a requirement changes"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Gap Detection"})}),(0,t.jsx)(s.td,{children:"Spot missing or unlinked requirements"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Audit & Compliance"})}),(0,t.jsx)(s.td,{children:"Trace coverage for regulated environments"})]})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(s.p,{children:["Mapping test cases to requirements or user stories ensures that testing is ",(0,t.jsx)(s.strong,{children:"goal-driven, traceable, and complete"}),". It forms the backbone of any structured QA effort\u2014Agile or traditional."]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsx)(s.p,{children:"\u201cIf you don\u2019t trace your tests to requirements, you\u2019re just testing for the sake of testing.\u201d"}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Use a ",(0,t.jsx)(s.strong,{children:"traceability matrix"})," or integrated tooling to maintain and update this mapping as your project evolves."]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>a});var i=n(6540);const t={},r=i.createContext(t);function l(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);