"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[4796],{5088:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Portfolio/Timelock/project-architecture/README","title":"Project Architecture","description":"This guide explains how Angular concepts are applied in the TimeLock project, showing you the overall architecture and design patterns used.","source":"@site/docs/Portfolio/Timelock/project-architecture/README.md","sourceDirName":"Portfolio/Timelock/project-architecture","slug":"/Portfolio/Timelock/project-architecture/","permalink":"/dev/fr/docs/Portfolio/Timelock/project-architecture/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/dev/fr/docs/Portfolio/Timelock/getting-started/"},"next":{"title":"YouTube Download Tools - Project Introduction","permalink":"/dev/fr/docs/Portfolio/YT-DL-Batch/introduction"}}');var o=r(4848),i=r(8453);const s={},a="Project Architecture",c={},l=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Application Overview",id:"application-overview",level:2},{value:"Technology Stack",id:"technology-stack",level:3},{value:"Architecture Patterns",id:"architecture-patterns",level:2},{value:"1. Standalone Component Architecture",id:"1-standalone-component-architecture",level:3},{value:"2. Signal-Based State Management",id:"2-signal-based-state-management",level:3},{value:"3. Dependency Injection Pattern",id:"3-dependency-injection-pattern",level:3},{value:"4. Lazy Loading Strategy",id:"4-lazy-loading-strategy",level:3},{value:"State Management with Signals",id:"state-management-with-signals",level:2},{value:"Service-Level State",id:"service-level-state",level:3},{value:"Component-Level State",id:"component-level-state",level:3},{value:"Data Flow",id:"data-flow",level:2},{value:"Example Data Flow: Adding a Todo",id:"example-data-flow-adding-a-todo",level:3},{value:"Component Hierarchy",id:"component-hierarchy",level:2},{value:"Smart vs Dumb Components",id:"smart-vs-dumb-components",level:3},{value:"Service Layer",id:"service-layer",level:2},{value:"Core Services",id:"core-services",level:3},{value:"Utility Services",id:"utility-services",level:3},{value:"Routing Strategy",id:"routing-strategy",level:2},{value:"Route Guards and Resolvers",id:"route-guards-and-resolvers",level:3},{value:"Data Persistence",id:"data-persistence",level:2},{value:"Why IndexedDB?",id:"why-indexeddb",level:3},{value:"Data Schema",id:"data-schema",level:3},{value:"Service Integration",id:"service-integration",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"1. Lazy Loading",id:"1-lazy-loading",level:3},{value:"2. OnPush Change Detection",id:"2-onpush-change-detection",level:3},{value:"3. Signal-Based Updates",id:"3-signal-based-updates",level:3},{value:"4. Virtual Scrolling (Future Enhancement)",id:"4-virtual-scrolling-future-enhancement",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"project-architecture",children:"Project Architecture"})}),"\n",(0,o.jsx)(n.p,{children:"This guide explains how Angular concepts are applied in the TimeLock project, showing you the overall architecture and design patterns used."}),"\n",(0,o.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#application-overview",children:"Application Overview"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#architecture-patterns",children:"Architecture Patterns"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#state-management-with-signals",children:"State Management with Signals"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#data-flow",children:"Data Flow"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#component-hierarchy",children:"Component Hierarchy"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#service-layer",children:"Service Layer"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#routing-strategy",children:"Routing Strategy"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#data-persistence",children:"Data Persistence"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"application-overview",children:"Application Overview"}),"\n",(0,o.jsx)(n.p,{children:"TimeLock is a task management application that demonstrates modern Angular patterns:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"TimeLock Features:\r\n\u251c\u2500\u2500 \ud83d\udccb Project Management\r\n\u251c\u2500\u2500 \u2705 Task Management (with subtasks)\r\n\u251c\u2500\u2500 \ud83d\udcc5 Calendar View\r\n\u251c\u2500\u2500 \u23f0 Time Planning\r\n\u251c\u2500\u2500 \ud83d\udd0d Search & Filtering\r\n\u251c\u2500\u2500 \ud83c\udff7\ufe0f Tags & Categories\r\n\u251c\u2500\u2500 \ud83d\udd04 Recurring Tasks\r\n\u2514\u2500\u2500 \ud83d\udcf1 Responsive Design\n"})}),"\n",(0,o.jsx)(n.h3,{id:"technology-stack",children:"Technology Stack"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Angular 20"})," - Latest version with modern features"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"TypeScript"})," - Strong typing and better developer experience"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Signals"})," - Reactive state management"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"IndexedDB"})," - Client-side data persistence"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"CSS3"})," - Modern styling with CSS Grid and Flexbox"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Playwright"})," - End-to-end testing"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"architecture-patterns",children:"Architecture Patterns"}),"\n",(0,o.jsx)(n.h3,{id:"1-standalone-component-architecture",children:"1. Standalone Component Architecture"}),"\n",(0,o.jsx)(n.p,{children:"TimeLock uses standalone components throughout, eliminating the need for NgModules:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Traditional approach (NOT used)\r\n@NgModule({\r\n  declarations: [TodoComponent],\r\n  imports: [CommonModule]\r\n})\r\n\r\n// Modern approach (USED in TimeLock)\r\n@Component({\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule]\r\n})\r\nexport class TodoComponent { }\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-signal-based-state-management",children:"2. Signal-Based State Management"}),"\n",(0,o.jsx)(n.p,{children:"Instead of RxJS Observables for local state, TimeLock uses Angular Signals:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Service layer\r\n@Injectable({ providedIn: 'root' })\r\nexport class TodoService {\r\n  private todosSignal = signal<Todo[]>([]);\r\n  \r\n  // Read-only access for components\r\n  todos = this.todosSignal.asReadonly();\r\n  \r\n  // Computed derived state\r\n  activeTodos = computed(() => \r\n    this.todosSignal().filter(todo => !todo.completed)\r\n  );\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-dependency-injection-pattern",children:"3. Dependency Injection Pattern"}),"\n",(0,o.jsxs)(n.p,{children:["Services are injected using the modern ",(0,o.jsx)(n.code,{children:"inject()"})," function:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export class TodoComponent {\r\n  private todoService = inject(TodoService);\r\n  private projectService = inject(ProjectService);\r\n  private router = inject(Router);\r\n  \r\n  // Clean, functional approach\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"4-lazy-loading-strategy",children:"4. Lazy Loading Strategy"}),"\n",(0,o.jsx)(n.p,{children:"Routes are lazy-loaded for better performance:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export const routes: Routes = [\r\n  {\r\n    path: 'projects',\r\n    loadComponent: () => import('./pages/projects/projects.component')\r\n      .then(m => m.ProjectsComponent)\r\n  }\r\n];\n"})}),"\n",(0,o.jsx)(n.h2,{id:"state-management-with-signals",children:"State Management with Signals"}),"\n",(0,o.jsx)(n.p,{children:"TimeLock demonstrates a comprehensive signal-based state management pattern:"}),"\n",(0,o.jsx)(n.h3,{id:"service-level-state",children:"Service-Level State"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Injectable({ providedIn: 'root' })\r\nexport class TodoService {\r\n  // Private writable signals\r\n  private todosSignal = signal<Todo[]>([]);\r\n  private filterSignal = signal<FilterType>('all');\r\n  private searchTermSignal = signal<string>('');\r\n  \r\n  // Public read-only signals\r\n  todos = this.todosSignal.asReadonly();\r\n  filter = this.filterSignal.asReadonly();\r\n  searchTerm = this.searchTermSignal.asReadonly();\r\n  \r\n  // Computed signals for derived state\r\n  filteredTodos = computed(() => {\r\n    const todos = this.todosSignal();\r\n    const filter = this.filterSignal();\r\n    const searchTerm = this.searchTermSignal();\r\n    \r\n    return todos\r\n      .filter(todo => this.matchesFilter(todo, filter))\r\n      .filter(todo => this.matchesSearch(todo, searchTerm));\r\n  });\r\n  \r\n  activeTodos = computed(() => \r\n    this.todosSignal().filter(todo => !todo.completed && !todo.archived)\r\n  );\r\n  \r\n  completedTodos = computed(() => \r\n    this.todosSignal().filter(todo => todo.completed)\r\n  );\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"component-level-state",children:"Component-Level State"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export class TodoItemComponent {\r\n  @Input() todo!: Todo;\r\n  \r\n  // Local component state\r\n  isEditing = signal(false);\r\n  isExpanded = signal(false);\r\n  \r\n  // Computed local state\r\n  hasSubtasks = computed(() => this.todo.subtasks.length > 0);\r\n  completionPercentage = computed(() => {\r\n    if (!this.hasSubtasks()) return 0;\r\n    const completed = this.todo.subtasks.filter(t => t.completed).length;\r\n    return (completed / this.todo.subtasks.length) * 100;\r\n  });\r\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"data-flow",children:"Data Flow"}),"\n",(0,o.jsx)(n.p,{children:"TimeLock follows a unidirectional data flow pattern:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   Components    \u2502\u2500\u2500\u2500\u25b6\u2502    Services      \u2502\u2500\u2500\u2500\u25b6\u2502   IndexedDB     \u2502\r\n\u2502                 \u2502    \u2502                  \u2502    \u2502                 \u2502\r\n\u2502 - Display data  \u2502    \u2502 - Business logic \u2502    \u2502 - Data storage  \u2502\r\n\u2502 - Handle events \u2502    \u2502 - State management\u2502    \u2502 - Persistence   \u2502\r\n\u2502 - User input    \u2502    \u2502 - API calls      \u2502    \u2502                 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n         \u25b2                        \u2502\r\n         \u2502                        \u25bc\r\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500 Signals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,o.jsx)(n.h3,{id:"example-data-flow-adding-a-todo",children:"Example Data Flow: Adding a Todo"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"User Action"}),': User clicks "Add Todo" button']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Component"}),": TodoFormComponent emits event"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Parent Component"}),": Calls TodoService.addTodo()"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Service"}),": Updates signal and persists to IndexedDB"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Automatic Update"}),": All components using the signal automatically re-render"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// 1. User clicks button in template\r\n<button (click)=\"addTodo()\">Add Todo</button>\r\n\r\n// 2. Component method\r\naddTodo() {\r\n  this.todoService.addTodo(this.newTodo);\r\n}\r\n\r\n// 3. Service updates state\r\nasync addTodo(todo: Omit<Todo, 'id'>) {\r\n  const newTodo = { ...todo, id: this.generateId() };\r\n  this.todosSignal.update(todos => [...todos, newTodo]);\r\n  await this.indexedDBService.saveTodos(this.todosSignal());\r\n}\r\n\r\n// 4. All components automatically update via signals\n"})}),"\n",(0,o.jsx)(n.h2,{id:"component-hierarchy",children:"Component Hierarchy"}),"\n",(0,o.jsx)(n.p,{children:"TimeLock's component structure follows a clear hierarchy:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"App (Root Component)\r\n\u251c\u2500\u2500 Sidebar Navigation\r\n\u251c\u2500\u2500 Router Outlet\r\n    \u251c\u2500\u2500 ProjectsComponent\r\n    \u2502   \u251c\u2500\u2500 ProjectCardComponent\r\n    \u2502   \u2514\u2500\u2500 ProjectFormComponent\r\n    \u251c\u2500\u2500 ProjectDetailComponent\r\n    \u2502   \u251c\u2500\u2500 TodoFiltersComponent\r\n    \u2502   \u251c\u2500\u2500 TodoFormComponent\r\n    \u2502   \u2514\u2500\u2500 TodoItemComponent\r\n    \u2502       \u251c\u2500\u2500 TaskEditorComponent\r\n    \u2502       \u2514\u2500\u2500 SubtaskComponent\r\n    \u251c\u2500\u2500 CalendarComponent\r\n    \u251c\u2500\u2500 TimetableComponent\r\n    \u251c\u2500\u2500 UpcomingComponent\r\n    \u2514\u2500\u2500 SearchComponent\n"})}),"\n",(0,o.jsx)(n.h3,{id:"smart-vs-dumb-components",children:"Smart vs Dumb Components"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Smart Components"})," (Container Components):"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Inject services"}),"\n",(0,o.jsx)(n.li,{children:"Manage state"}),"\n",(0,o.jsx)(n.li,{children:"Handle business logic"}),"\n",(0,o.jsxs)(n.li,{children:["Examples: ",(0,o.jsx)(n.code,{children:"ProjectsComponent"}),", ",(0,o.jsx)(n.code,{children:"ProjectDetailComponent"})]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export class ProjectsComponent {\r\n  private projectService = inject(ProjectService);\r\n  private todoService = inject(TodoService);\r\n  \r\n  projects = this.projectService.activeProjects;\r\n  \r\n  async createProject(projectData: CreateProjectData) {\r\n    await this.projectService.addProject(projectData);\r\n  }\r\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Dumb Components"})," (Presentation Components):"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Receive data via ",(0,o.jsx)(n.code,{children:"@Input()"})]}),"\n",(0,o.jsxs)(n.li,{children:["Emit events via ",(0,o.jsx)(n.code,{children:"@Output()"})]}),"\n",(0,o.jsx)(n.li,{children:"No service dependencies"}),"\n",(0,o.jsxs)(n.li,{children:["Examples: ",(0,o.jsx)(n.code,{children:"TodoItemComponent"}),", ",(0,o.jsx)(n.code,{children:"ProjectCardComponent"})]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export class TodoItemComponent {\r\n  @Input() todo!: Todo;\r\n  @Output() todoUpdated = new EventEmitter<Todo>();\r\n  @Output() todoDeleted = new EventEmitter<string>();\r\n  \r\n  toggleComplete() {\r\n    this.todoUpdated.emit({\r\n      ...this.todo,\r\n      completed: !this.todo.completed\r\n    });\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"service-layer",children:"Service Layer"}),"\n",(0,o.jsx)(n.p,{children:"TimeLock's service layer is organized by domain:"}),"\n",(0,o.jsx)(n.h3,{id:"core-services",children:"Core Services"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"TodoService"})," - Task management"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Injectable({ providedIn: 'root' })\r\nexport class TodoService {\r\n  // CRUD operations\r\n  async addTodo(todo: Omit<Todo, 'id'>): Promise<string>\r\n  async updateTodo(id: string, updates: Partial<Todo>): Promise<void>\r\n  async deleteTodo(id: string): Promise<void>\r\n  \r\n  // Business logic\r\n  async toggleComplete(id: string): Promise<void>\r\n  async addSubtask(parentId: string, subtask: Omit<Todo, 'id'>): Promise<void>\r\n  async autoPlanTasks(tasks: Todo[], timeSlots: TimeSlot[]): Promise<void>\r\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"ProjectService"})," - Project management"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Injectable({ providedIn: 'root' })\r\nexport class ProjectService {\r\n  async addProject(project: Omit<Project, 'id'>): Promise<string>\r\n  async updateProject(id: string, updates: Partial<Project>): Promise<void>\r\n  async deleteProject(id: string): Promise<void>\r\n  setCurrentProject(projectId: string | null): void\r\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"IndexedDBService"})," - Data persistence"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Injectable({ providedIn: 'root' })\r\nexport class IndexedDBService {\r\n  async saveTodos(todos: Todo[]): Promise<void>\r\n  async loadTodos(): Promise<Todo[]>\r\n  async saveProjects(projects: Project[]): Promise<void>\r\n  async loadProjects(): Promise<Project[]>\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"utility-services",children:"Utility Services"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"TagsService"})," - Tag management\r\n",(0,o.jsx)(n.strong,{children:"RecurringTasksService"})," - Recurring task logic\r\n",(0,o.jsx)(n.strong,{children:"ConfirmationService"})," - Dialog management"]}),"\n",(0,o.jsx)(n.h2,{id:"routing-strategy",children:"Routing Strategy"}),"\n",(0,o.jsx)(n.p,{children:"TimeLock uses a feature-based routing structure:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export const routes: Routes = [\r\n  { path: '', redirectTo: '/projects', pathMatch: 'full' },\r\n  \r\n  // Main pages\r\n  { path: 'projects', loadComponent: () => import('./pages/projects/projects.component') },\r\n  { path: 'project/:id', loadComponent: () => import('./pages/project-detail/project-detail.component') },\r\n  \r\n  // Views\r\n  { path: 'calendar', loadComponent: () => import('./pages/calendar/calendar.component') },\r\n  { path: 'timetable', loadComponent: () => import('./pages/timetable/timetable.component') },\r\n  { path: 'upcoming', loadComponent: () => import('./pages/upcoming/upcoming.component') },\r\n  { path: 'search', loadComponent: () => import('./pages/search/search.component') },\r\n  \r\n  // Fallback\r\n  { path: '**', redirectTo: '/projects' }\r\n];\n"})}),"\n",(0,o.jsx)(n.h3,{id:"route-guards-and-resolvers",children:"Route Guards and Resolvers"}),"\n",(0,o.jsx)(n.p,{children:"While not currently implemented, TimeLock's architecture supports:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Example guard\r\nexport const projectExistsGuard: CanActivateFn = (route) => {\r\n  const projectService = inject(ProjectService);\r\n  const projectId = route.paramMap.get('id');\r\n  return projectService.getProjectById(projectId!) !== undefined;\r\n};\r\n\r\n// Example resolver\r\nexport const projectResolver: ResolveFn<Project> = (route) => {\r\n  const projectService = inject(ProjectService);\r\n  const projectId = route.paramMap.get('id')!;\r\n  return projectService.getProjectById(projectId)!;\r\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"data-persistence",children:"Data Persistence"}),"\n",(0,o.jsx)(n.p,{children:"TimeLock uses IndexedDB for client-side data persistence:"}),"\n",(0,o.jsx)(n.h3,{id:"why-indexeddb",children:"Why IndexedDB?"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Offline capability"})," - Works without internet"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Large storage"})," - Much more than localStorage"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Structured data"})," - Supports complex objects"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Asynchronous"})," - Non-blocking operations"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"data-schema",children:"Data Schema"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"interface DBSchema {\r\n  todos: {\r\n    key: string;\r\n    value: Todo;\r\n    indexes: { 'by-project': string; 'by-due-date': Date; };\r\n  };\r\n  projects: {\r\n    key: string;\r\n    value: Project;\r\n  };\r\n  tags: {\r\n    key: string;\r\n    value: Tag;\r\n  };\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"service-integration",children:"Service Integration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Injectable({ providedIn: 'root' })\r\nexport class IndexedDBService {\r\n  private dbName = 'TimeLockDB';\r\n  private version = 1;\r\n  \r\n  async initDB(): Promise<IDBDatabase> {\r\n    return new Promise((resolve, reject) => {\r\n      const request = indexedDB.open(this.dbName, this.version);\r\n      \r\n      request.onerror = () => reject(request.error);\r\n      request.onsuccess = () => resolve(request.result);\r\n      \r\n      request.onupgradeneeded = (event) => {\r\n        const db = (event.target as IDBOpenDBRequest).result;\r\n        this.createObjectStores(db);\r\n      };\r\n    });\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,o.jsx)(n.h3,{id:"1-lazy-loading",children:"1. Lazy Loading"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Routes are loaded on-demand"}),"\n",(0,o.jsx)(n.li,{children:"Reduces initial bundle size"}),"\n",(0,o.jsx)(n.li,{children:"Faster application startup"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"2-onpush-change-detection",children:"2. OnPush Change Detection"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // ...\r\n})\r\nexport class OptimizedComponent { }\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-signal-based-updates",children:"3. Signal-Based Updates"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Automatic dependency tracking"}),"\n",(0,o.jsx)(n.li,{children:"Minimal re-renders"}),"\n",(0,o.jsx)(n.li,{children:"Better performance than traditional observables"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"4-virtual-scrolling-future-enhancement",children:"4. Virtual Scrolling (Future Enhancement)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// For large lists\r\n<cdk-virtual-scroll-viewport itemSize="50">\r\n  <div *cdkVirtualFor="let todo of todos">{{todo.title}}</div>\r\n</cdk-virtual-scroll-viewport>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"Continue learning about TimeLock:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/Timelock/getting-started/",children:"Getting Started"})," - Set up your development environment"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/Timelock/code-structure/",children:"Code Structure"})," - Detailed code organization"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/Timelock/development-guide/",children:"Development Guide"})," - How to extend the application"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var t=r(6540);const o={},i=t.createContext(o);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);