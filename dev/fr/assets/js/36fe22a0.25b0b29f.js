"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[3776],{6217:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Portfolio/Chatbot/intro","title":"Apple-Inspired Chat Interface - Introduction","description":"Title","source":"@site/docs/Portfolio/Chatbot/01-intro.md","sourceDirName":"Portfolio/Chatbot","slug":"/Portfolio/Chatbot/intro","permalink":"/dev/fr/docs/Portfolio/Chatbot/intro","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Portfolio","permalink":"/dev/fr/docs/category/portfolio"},"next":{"title":"Hamburger Menu Toggle Bug - Fix Documentation","permalink":"/dev/fr/docs/Portfolio/Chatbot/hamburger-bug"}}');var t=n(4848),r=n(8453);const l={},a="Apple-Inspired Chat Interface - Introduction",o={},c=[{value:"Title",id:"title",level:2},{value:"Purpose",id:"purpose",level:2},{value:"Technical Details",id:"technical-details",level:2},{value:"How it Works Internally",id:"how-it-works-internally",level:3},{value:"Main Logic",id:"main-logic",level:4},{value:"Important Functions/Classes",id:"important-functionsclasses",level:4},{value:"Key Files",id:"key-files",level:4},{value:"Dependencies",id:"dependencies",level:4},{value:"Important Configurations",id:"important-configurations",level:4},{value:"How to Use / Integrate",id:"how-to-use--integrate",level:3},{value:"Basic Integration",id:"basic-integration",level:4},{value:"Service Integration",id:"service-integration",level:4},{value:"Customization Examples",id:"customization-examples",level:4},{value:"API Integration",id:"api-integration",level:4},{value:"Problems Encountered &amp; Solutions",id:"problems-encountered--solutions",level:2},{value:"Challenge 1: Responsive Sidebar Behavior",id:"challenge-1-responsive-sidebar-behavior",level:3},{value:"Challenge 2: Message Auto-scrolling",id:"challenge-2-message-auto-scrolling",level:3},{value:"Challenge 3: Textarea Auto-resize",id:"challenge-3-textarea-auto-resize",level:3},{value:"Challenge 4: Message Status Indicators",id:"challenge-4-message-status-indicators",level:3},{value:"Challenge 5: Session Management",id:"challenge-5-session-management",level:3},{value:"Known Limitations &amp; Next Steps",id:"known-limitations--next-steps",level:2},{value:"Current Limitations",id:"current-limitations",level:3},{value:"Next Steps / Improvements",id:"next-steps--improvements",level:3},{value:"Phase 1: Core Enhancements",id:"phase-1-core-enhancements",level:4},{value:"Phase 2: Advanced Features",id:"phase-2-advanced-features",level:4},{value:"Phase 3: Collaboration Features",id:"phase-3-collaboration-features",level:4},{value:"Phase 4: Accessibility &amp; Performance",id:"phase-4-accessibility--performance",level:4},{value:"Technical Debt",id:"technical-debt",level:3},{value:"Related Links or References",id:"related-links-or-references",level:2},{value:"Design References",id:"design-references",level:3},{value:"Technical References",id:"technical-references",level:3},{value:"Component Libraries for Reference",id:"component-libraries-for-reference",level:3},{value:"Testing Resources",id:"testing-resources",level:3}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"apple-inspired-chat-interface---introduction",children:"Apple-Inspired Chat Interface - Introduction"})}),"\n",(0,t.jsx)(s.h2,{id:"title",children:"Title"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Apple-Inspired AI Chat Interface with Angular"})}),"\n",(0,t.jsx)(s.h2,{id:"purpose",children:"Purpose"}),"\n",(0,t.jsx)(s.p,{children:"This feature provides a modern, responsive chat interface for AI conversations that follows Apple's design principles. It was needed to create a professional, user-friendly chat experience that feels native and intuitive, similar to Apple's messaging applications."}),"\n",(0,t.jsx)(s.h2,{id:"technical-details",children:"Technical Details"}),"\n",(0,t.jsx)(s.h3,{id:"how-it-works-internally",children:"How it Works Internally"}),"\n",(0,t.jsx)(s.h4,{id:"main-logic",children:"Main Logic"}),"\n",(0,t.jsx)(s.p,{children:"The application follows a reactive architecture using RxJS observables for state management:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"ChatService"}),": Central service managing chat state, message flow, and session handling"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Component Architecture"}),": Modular components following Angular standalone pattern"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Reactive State"}),": BehaviorSubjects for real-time updates across components"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Message Flow"}),": User input \u2192 Service processing \u2192 AI response simulation \u2192 UI update"]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"important-functionsclasses",children:"Important Functions/Classes"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsxs)(s.strong,{children:["ChatService (",(0,t.jsx)(s.code,{children:"src/app/services/chat.service.ts"}),")"]})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"sendMessage(content: string)"}),": Handles user message submission and AI response generation"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"createNewSession()"}),": Creates new chat sessions with unique IDs"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"switchToSession(sessionId: string)"}),": Manages session switching and state updates"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"generateAIResponse()"}),": Simulates AI processing with realistic delays"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsxs)(s.strong,{children:["ChatInterfaceComponent (",(0,t.jsx)(s.code,{children:"src/app/components/chat-interface/chat-interface.component.ts"}),")"]})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Main container orchestrating all chat functionality"}),"\n",(0,t.jsx)(s.li,{children:"Manages sidebar visibility and responsive behavior"}),"\n",(0,t.jsx)(s.li,{children:"Coordinates communication between child components"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsxs)(s.strong,{children:["MessageBubbleComponent (",(0,t.jsx)(s.code,{children:"src/app/components/message-bubble/message-bubble.component.ts"}),")"]})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Renders individual messages with proper styling"}),"\n",(0,t.jsx)(s.li,{children:"Handles message status indicators and timestamps"}),"\n",(0,t.jsx)(s.li,{children:"Supports both user and AI message types"}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"key-files",children:"Key Files"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"src/styles.scss"}),": Global design system with Apple-inspired color palette and typography"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"src/app/models/message.model.ts"}),": TypeScript interfaces for type safety"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"src/app/components/"}),": Modular component architecture"]}),"\n",(0,t.jsxs)(s.li,{children:["Test files (",(0,t.jsx)(s.code,{children:"*.spec.ts"}),"): Comprehensive unit tests for all components and services"]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"dependencies",children:"Dependencies"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Angular 17+"}),": Core framework with standalone components"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"RxJS"}),": Reactive programming for state management"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"TypeScript"}),": Type safety and modern JavaScript features"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"SCSS"}),": Advanced styling with CSS custom properties"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Jasmine/Karma"}),": Testing framework"]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"important-configurations",children:"Important Configurations"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Angular Configuration"}),": ",(0,t.jsx)(s.code,{children:"angular.json"})," with SCSS support and build optimization"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"TypeScript"}),": Strict mode enabled for better code quality"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Testing"}),": Karma configuration with coverage reporting"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Styling"}),": CSS custom properties for theming and responsive design"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"how-to-use--integrate",children:"How to Use / Integrate"}),"\n",(0,t.jsx)(s.h4,{id:"basic-integration",children:"Basic Integration"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"// Import the main component\r\nimport { ChatInterfaceComponent } from './app/components/chat-interface/chat-interface.component';\r\n\r\n// Use in your template\r\n<app-chat-interface></app-chat-interface>\n"})}),"\n",(0,t.jsx)(s.h4,{id:"service-integration",children:"Service Integration"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"// Inject the chat service\r\nconstructor(private chatService: ChatService) {}\r\n\r\n// Send messages programmatically\r\nthis.chatService.sendMessage('Hello, AI!');\r\n\r\n// Listen to message updates\r\nthis.chatService.messages$.subscribe(messages => {\r\n  // Handle message updates\r\n});\r\n\r\n// Manage sessions\r\nconst newSessionId = this.chatService.createNewSession();\r\nthis.chatService.switchToSession(newSessionId);\n"})}),"\n",(0,t.jsx)(s.h4,{id:"customization-examples",children:"Customization Examples"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scss",children:"// Override design tokens in your styles\r\n:root {\r\n  --apple-blue: #0066CC; // Custom blue\r\n  --font-family: 'Custom Font', sans-serif;\r\n  --radius-lg: 20px; // Larger border radius\r\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"api-integration",children:"API Integration"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"// Replace the mock AI response with real API calls\r\nprivate generateAIResponse(userMessage: string): Observable<string> {\r\n  return this.http.post<{response: string}>('/api/chat', {\r\n    message: userMessage\r\n  }).pipe(\r\n    map(result => result.response)\r\n  );\r\n}\n"})}),"\n",(0,t.jsx)(s.h2,{id:"problems-encountered--solutions",children:"Problems Encountered & Solutions"}),"\n",(0,t.jsx)(s.h3,{id:"challenge-1-responsive-sidebar-behavior",children:"Challenge 1: Responsive Sidebar Behavior"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Problem"}),": Creating a sidebar that works well on both desktop and mobile devices with smooth transitions."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Solution"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Implemented CSS transforms for smooth animations"}),"\n",(0,t.jsx)(s.li,{children:"Used media queries for different layouts (overlay on mobile, side-by-side on desktop)"}),"\n",(0,t.jsx)(s.li,{children:"Added backdrop overlay for mobile with proper z-index management"}),"\n",(0,t.jsxs)(s.li,{children:["Used ",(0,t.jsx)(s.code,{children:"cubic-bezier"})," timing functions for Apple-like animations"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"challenge-2-message-auto-scrolling",children:"Challenge 2: Message Auto-scrolling"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Problem"}),": Ensuring the chat always scrolls to the latest message without jarring user experience."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Solution"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Implemented ",(0,t.jsx)(s.code,{children:"AfterViewChecked"})," lifecycle hook for precise timing"]}),"\n",(0,t.jsxs)(s.li,{children:["Used ",(0,t.jsx)(s.code,{children:"ViewChild"})," to access scroll container directly"]}),"\n",(0,t.jsx)(s.li,{children:"Added smooth scrolling behavior with proper error handling"}),"\n",(0,t.jsx)(s.li,{children:"Optimized to only scroll when new messages are added"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"challenge-3-textarea-auto-resize",children:"Challenge 3: Textarea Auto-resize"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Problem"}),": Creating a message input that grows with content but has reasonable limits."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Solution"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Dynamically adjusted textarea height based on ",(0,t.jsx)(s.code,{children:"scrollHeight"})]}),"\n",(0,t.jsx)(s.li,{children:"Set maximum height to prevent excessive growth"}),"\n",(0,t.jsx)(s.li,{children:"Reset height to 'auto' before calculating new height"}),"\n",(0,t.jsx)(s.li,{children:"Added smooth transitions for height changes"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"challenge-4-message-status-indicators",children:"Challenge 4: Message Status Indicators"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Problem"}),": Implementing realistic message status flow (sending \u2192 sent \u2192 delivered \u2192 read)."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Solution"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Created a state machine for message status progression"}),"\n",(0,t.jsx)(s.li,{children:"Used SVG icons for crisp status indicators at any size"}),"\n",(0,t.jsx)(s.li,{children:"Implemented proper timing for status updates"}),"\n",(0,t.jsx)(s.li,{children:"Added visual feedback with color coding"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"challenge-5-session-management",children:"Challenge 5: Session Management"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Problem"}),": Managing multiple chat sessions with proper state isolation."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Solution"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Implemented session-based state management with unique IDs"}),"\n",(0,t.jsx)(s.li,{children:"Used timestamp-based session IDs for uniqueness"}),"\n",(0,t.jsx)(s.li,{children:"Created proper session switching logic with state preservation"}),"\n",(0,t.jsx)(s.li,{children:"Added session deletion with fallback to default session"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"known-limitations--next-steps",children:"Known Limitations & Next Steps"}),"\n",(0,t.jsx)(s.h3,{id:"current-limitations",children:"Current Limitations"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Mock AI Responses"}),": Currently uses simulated responses instead of real AI integration"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Local Storage"}),": Sessions are not persisted between browser sessions"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"File Attachments"}),": No support for sending images or files"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Voice Messages"}),": No audio message functionality"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Message Search"}),": No search functionality within chat history"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Message Editing"}),": Cannot edit or delete sent messages"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Emoji Support"}),": Basic text only, no emoji picker"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Typing Indicators"}),": Only shows AI typing, not user typing to others"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"next-steps--improvements",children:"Next Steps / Improvements"}),"\n",(0,t.jsx)(s.h4,{id:"phase-1-core-enhancements",children:"Phase 1: Core Enhancements"}),"\n",(0,t.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Integrate with real AI API (OpenAI, Anthropic, etc.)"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Add local storage persistence for sessions"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Implement message search functionality"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Add message editing and deletion"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Create emoji picker component"]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"phase-2-advanced-features",children:"Phase 2: Advanced Features"}),"\n",(0,t.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","File attachment support (images, documents)"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Voice message recording and playback"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Message reactions and threading"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Export chat history functionality"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Advanced settings panel"]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"phase-3-collaboration-features",children:"Phase 3: Collaboration Features"}),"\n",(0,t.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Multi-user chat support"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Real-time collaboration"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","User presence indicators"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Message encryption"]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"phase-4-accessibility--performance",children:"Phase 4: Accessibility & Performance"}),"\n",(0,t.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Enhanced screen reader support"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Keyboard navigation improvements"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Virtual scrolling for large message lists"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Progressive Web App (PWA) features"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Offline support"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"technical-debt",children:"Technical Debt"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Consider implementing virtual scrolling for performance with large message lists"}),"\n",(0,t.jsx)(s.li,{children:"Add proper error boundaries for better error handling"}),"\n",(0,t.jsx)(s.li,{children:"Implement proper loading states for all async operations"}),"\n",(0,t.jsx)(s.li,{children:"Add internationalization (i18n) support"}),"\n",(0,t.jsx)(s.li,{children:"Consider state management library (NgRx) for complex state scenarios"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"related-links-or-references",children:"Related Links or References"}),"\n",(0,t.jsx)(s.h3,{id:"design-references",children:"Design References"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://developer.apple.com/design/human-interface-guidelines/",children:"Apple Human Interface Guidelines"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://developer.apple.com/design/resources/",children:"Apple Design Resources"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://developer.apple.com/design/human-interface-guidelines/messages",children:"iOS Messages App Design Patterns"})}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"technical-references",children:"Technical References"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://angular.io/guide/standalone-components",children:"Angular Standalone Components"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://rxjs.dev/guide/operators",children:"RxJS Best Practices"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/--*",children:"CSS Custom Properties"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://www.w3.org/WAI/WCAG21/quickref/",children:"WCAG Accessibility Guidelines"})}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"component-libraries-for-reference",children:"Component Libraries for Reference"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://developer.apple.com/sf-symbols/",children:"Apple's SF Symbols"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://developer.apple.com/design/resources/",children:"iOS Design Kit"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://material.io/components",children:"Material Design Chat Components"})}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"testing-resources",children:"Testing Resources"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://angular.io/guide/testing",children:"Angular Testing Guide"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://jasmine.github.io/",children:"Jasmine Documentation"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://angular.io/guide/testing-code-coverage",children:"Testing Best Practices"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>a});var i=n(6540);const t={},r=i.createContext(t);function l(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);