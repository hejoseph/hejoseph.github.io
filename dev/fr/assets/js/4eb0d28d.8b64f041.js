"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[1842],{7495:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"react/Bug-Encountered/react-portals-explained","title":"Understanding React Portals: Why Your Modal Was Broken and How Portals Fixed It","description":"What Was Happening Before (The Problem)","source":"@site/docs/react/Bug-Encountered/react-portals-explained.md","sourceDirName":"react/Bug-Encountered","slug":"/react/Bug-Encountered/react-portals-explained","permalink":"/dev/fr/docs/react/Bug-Encountered/react-portals-explained","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Tailwind init error","permalink":"/dev/fr/docs/react/tailwind/tailwind-error"},"next":{"title":"Why Some React Apps Use \\"lint\\": \\"npx biome lint --write && npx tsc --noEmit\\"","permalink":"/dev/fr/docs/react/Code-Analysis-Tools/biome"}}');var o=r(4848),i=r(8453);const s={},a="Understanding React Portals: Why Your Modal Was Broken and How Portals Fixed It",l={},d=[{value:"What Was Happening Before (The Problem)",id:"what-was-happening-before-the-problem",level:2},{value:"The Problem: CSS Inheritance and Containment",id:"the-problem-css-inheritance-and-containment",level:3},{value:"What CSS Properties Were Causing Issues:",id:"what-css-properties-were-causing-issues",level:3},{value:"What React Portals Do (The Solution)",id:"what-react-portals-do-the-solution",level:2},{value:"Before vs After:",id:"before-vs-after",level:3},{value:"How createPortal Works",id:"how-createportal-works",level:2},{value:"Think of it Like This:",id:"think-of-it-like-this",level:3},{value:"Why This Fixed Your Specific Problems",id:"why-this-fixed-your-specific-problems",level:2},{value:"1. <strong>Size Constraints Fixed</strong>",id:"1-size-constraints-fixed",level:3},{value:"2. <strong>Positioning Fixed</strong>",id:"2-positioning-fixed",level:3},{value:"3. <strong>Z-Index Stacking Fixed</strong>",id:"3-z-index-stacking-fixed",level:3},{value:"Real-World Analogy",id:"real-world-analogy",level:2},{value:"When to Use Portals",id:"when-to-use-portals",level:2},{value:"Simple Portal Example for Beginners",id:"simple-portal-example-for-beginners",level:2},{value:"Key Takeaways",id:"key-takeaways",level:2},{value:"Common Portal Patterns",id:"common-portal-patterns",level:2},{value:"Modal Portal",id:"modal-portal",level:3},{value:"Tooltip Portal",id:"tooltip-portal",level:3},{value:"Notification Portal",id:"notification-portal",level:3}];function c(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"understanding-react-portals-why-your-modal-was-broken-and-how-portals-fixed-it",children:"Understanding React Portals: Why Your Modal Was Broken and How Portals Fixed It"})}),"\n",(0,o.jsx)(n.h2,{id:"what-was-happening-before-the-problem",children:"What Was Happening Before (The Problem)"}),"\n",(0,o.jsxs)(n.p,{children:["Imagine your React app like a ",(0,o.jsx)(n.strong,{children:"family tree"})," or ",(0,o.jsx)(n.strong,{children:"nested boxes"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"App Component\r\n\u2514\u2500\u2500 ApplicationList Component\r\n    \u2514\u2500\u2500 ApplicationCard Component\r\n        \u2514\u2500\u2500 ResumeViewer Component\r\n            \u2514\u2500\u2500 ResumePreviewModal Component \u274c (TRAPPED HERE!)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"the-problem-css-inheritance-and-containment",children:"The Problem: CSS Inheritance and Containment"}),"\n",(0,o.jsxs)(n.p,{children:["When you put a component inside another component, it ",(0,o.jsx)(n.strong,{children:"inherits"})," and gets ",(0,o.jsx)(n.strong,{children:"constrained"})," by its parent's CSS rules. Think of it like this:"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Before (Broken):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'// ResumeViewer.js\r\n<div className="resume-viewer">  {/* This div has limited size */}\r\n  <ResumePreviewModal />         {/* Modal gets trapped inside! */}\r\n</div>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The modal was like a ",(0,o.jsx)(n.strong,{children:"person trying to stretch out inside a small box"})," - it couldn't break free!"]}),"\n",(0,o.jsx)(n.h3,{id:"what-css-properties-were-causing-issues",children:"What CSS Properties Were Causing Issues:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"overflow: hidden"})}),' - Parent containers were "clipping" the modal']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"position: relative"})})," - Modal positioned relative to the card, not the screen"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"z-index"})," stacking"]})," - Modal couldn't layer above other page elements"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Size constraints"})," - Modal inherited size limitations from parents"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"what-react-portals-do-the-solution",children:"What React Portals Do (The Solution)"}),"\n",(0,o.jsxs)(n.p,{children:["A ",(0,o.jsx)(n.strong,{children:"React Portal"})," is like a ",(0,o.jsx)(n.strong,{children:"teleportation device"})," for components. It lets you render a component ",(0,o.jsx)(n.strong,{children:"anywhere in the DOM"}),", not just where it appears in your component tree."]}),"\n",(0,o.jsx)(n.h3,{id:"before-vs-after",children:"Before vs After:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Before (Component Tree):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'<body>\r\n  <div id="root">\r\n    <App>\r\n      <ApplicationCard>\r\n        <ResumeViewer>\r\n          <Modal /> \u274c Trapped inside nested divs!\r\n        </ResumeViewer>\r\n      </ApplicationCard>\r\n    </App>\r\n  </div>\r\n</body>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"After (With Portal):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'<body>\r\n  <div id="root">\r\n    <App>\r\n      <ApplicationCard>\r\n        <ResumeViewer>\r\n          {/* Modal teleports out! */}\r\n        </ResumeViewer>\r\n      </ApplicationCard>\r\n    </App>\r\n  </div>\r\n  <Modal /> \u2705 Free at the body level!\r\n</body>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"how-createportal-works",children:"How createPortal Works"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"import { createPortal } from 'react-dom';\r\n\r\n// Instead of returning the modal directly:\r\nreturn <Modal />  // \u274c Stays in component tree\r\n\r\n// We use createPortal to \"teleport\" it:\r\nreturn createPortal(\r\n  <Modal />,        // What to render\r\n  document.body     // Where to render it\r\n);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"think-of-it-like-this",children:"Think of it Like This:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Component tree"})," = Where you ",(0,o.jsx)(n.strong,{children:"write"})," the code"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"DOM tree"})," = Where it ",(0,o.jsx)(n.strong,{children:"actually appears"})," on the page"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Portal"})," = Lets you write code in one place but render it somewhere else"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"why-this-fixed-your-specific-problems",children:"Why This Fixed Your Specific Problems"}),"\n",(0,o.jsxs)(n.h3,{id:"1-size-constraints-fixed",children:["1. ",(0,o.jsx)(n.strong,{children:"Size Constraints Fixed"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"/* Before: Modal inherited this */\r\n.resume-viewer {\r\n  width: 300px;  /* Modal was limited to card width! */\r\n  height: 200px;\r\n}\r\n\r\n/* After: Modal renders at body level */\r\nbody {\r\n  /* No size constraints - modal can be full screen! */\r\n}\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"2-positioning-fixed",children:["2. ",(0,o.jsx)(n.strong,{children:"Positioning Fixed"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"/* Before: Modal positioned relative to card */\r\n.application-card {\r\n  position: relative;  /* Modal positioned relative to this! */\r\n}\r\n\r\n/* After: Modal positioned relative to viewport */\r\n.modal-backdrop {\r\n  position: fixed;     /* Now relative to entire screen! */\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"3-z-index-stacking-fixed",children:["3. ",(0,o.jsx)(n.strong,{children:"Z-Index Stacking Fixed"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"/* Before: Modal competed with card elements */\r\n.application-card { z-index: 1; }\r\n.modal { z-index: 100; }  /* Might not work if card creates stacking context */\r\n\r\n/* After: Modal at body level has clear stacking */\r\n.modal { z-index: 1000; }  /* Always on top! */\n"})}),"\n",(0,o.jsx)(n.h2,{id:"real-world-analogy",children:"Real-World Analogy"}),"\n",(0,o.jsxs)(n.p,{children:["Think of your React app like an ",(0,o.jsx)(n.strong,{children:"apartment building"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Before"}),": You tried to put a ",(0,o.jsx)(n.strong,{children:"billboard"})," inside your ",(0,o.jsx)(n.strong,{children:"apartment room"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The billboard was cramped and couldn't be seen properly"}),"\n",(0,o.jsx)(n.li,{children:"It was limited by your room's walls and ceiling"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"After"}),": You put the ",(0,o.jsx)(n.strong,{children:"billboard on the roof"})," of the building"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Now everyone can see it clearly"}),"\n",(0,o.jsx)(n.li,{children:"It's not constrained by any individual room"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"when-to-use-portals",children:"When to Use Portals"}),"\n",(0,o.jsx)(n.p,{children:'Use React Portals for components that need to "break free" from their parent containers:'}),"\n",(0,o.jsxs)(n.p,{children:["\u2705 ",(0,o.jsx)(n.strong,{children:"Modals"})," - Need to cover entire screen",(0,o.jsx)(n.br,{}),"\n","\u2705 ",(0,o.jsx)(n.strong,{children:"Tooltips"})," - Need to appear above everything",(0,o.jsx)(n.br,{}),"\n","\u2705 ",(0,o.jsx)(n.strong,{children:"Dropdown menus"})," - Need to extend beyond parent boundaries",(0,o.jsx)(n.br,{}),"\n","\u2705 ",(0,o.jsx)(n.strong,{children:"Notifications/Toasts"})," - Need to appear in fixed positions"]}),"\n",(0,o.jsx)(n.h2,{id:"simple-portal-example-for-beginners",children:"Simple Portal Example for Beginners"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'// Basic Portal Example\r\nimport { createPortal } from \'react-dom\';\r\n\r\nfunction MyModal({ isOpen, children }) {\r\n  if (!isOpen) return null;\r\n  \r\n  // This renders children at document.body instead of here!\r\n  return createPortal(\r\n    <div className="modal-backdrop">\r\n      <div className="modal-content">\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    document.body  // Target: where to actually render\r\n  );\r\n}\r\n\r\n// Usage (modal appears at body level, not inside parent)\r\nfunction App() {\r\n  return (\r\n    <div className="small-container">\r\n      <MyModal isOpen={true}>\r\n        <p>I\'m free! Not trapped in small-container!</p>\r\n      </MyModal>\r\n    </div>\r\n  );\r\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"key-takeaways",children:"Key Takeaways"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"React Portals solve CSS containment issues"})," by rendering components outside their parent hierarchy"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Component tree \u2260 DOM tree"})," - Portals let you separate where you write code from where it renders"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Perfect for overlays"})," - Modals, tooltips, dropdowns that need to escape parent constraints"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Simple to use"})," - Just wrap your component with ",(0,o.jsx)(n.code,{children:"createPortal(component, targetElement)"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The key insight: ",(0,o.jsx)(n.strong,{children:"Portals let you write component code in one place but render the output somewhere completely different in the DOM tree!"})]}),"\n",(0,o.jsx)(n.h2,{id:"common-portal-patterns",children:"Common Portal Patterns"}),"\n",(0,o.jsx)(n.h3,{id:"modal-portal",children:"Modal Portal"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'return createPortal(\r\n  <div className="modal-backdrop">\r\n    <div className="modal-content">{children}</div>\r\n  </div>,\r\n  document.body\r\n);\n'})}),"\n",(0,o.jsx)(n.h3,{id:"tooltip-portal",children:"Tooltip Portal"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'return createPortal(\r\n  <div className="tooltip" style={{ top: y, left: x }}>\r\n    {tooltipText}\r\n  </div>,\r\n  document.body\r\n);\n'})}),"\n",(0,o.jsx)(n.h3,{id:"notification-portal",children:"Notification Portal"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'return createPortal(\r\n  <div className="notification-container">\r\n    {notifications.map(notification => (\r\n      <div key={notification.id} className="notification">\r\n        {notification.message}\r\n      </div>\r\n    ))}\r\n  </div>,\r\n  document.getElementById(\'notifications-root\') || document.body\r\n);\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Remember: ",(0,o.jsx)(n.strong,{children:'When your component needs to "break free" from its parent\'s constraints, think Portals!'})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var t=r(6540);const o={},i=t.createContext(o);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);