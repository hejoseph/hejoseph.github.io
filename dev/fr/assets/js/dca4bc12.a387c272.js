"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[8755],{3406:(o,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Portfolio/MovieList/api/spring-boot-backend","title":"spring-boot-backend","description":"\x3c!-- # Spring Boot Backend API","source":"@site/docs/Portfolio/MovieList/api/spring-boot-backend.md","sourceDirName":"Portfolio/MovieList/api","slug":"/Portfolio/MovieList/api/spring-boot-backend","permalink":"/dev/fr/docs/Portfolio/MovieList/api/spring-boot-backend","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Movie List Application - Introduction","permalink":"/dev/fr/docs/Portfolio/MovieList/introduction"},"next":{"title":"MongoDB Database Configuration","permalink":"/dev/fr/docs/Portfolio/MovieList/database/mongodb-configuration"}}');var i=e(4848),r=e(8453);const s={},a=void 0,c={},d=[];function p(o){return(0,i.jsx)(i.Fragment,{})}function u(o={}){const{wrapper:t}={...(0,r.R)(),...o.components};return t?(0,i.jsx)(t,{...o,children:(0,i.jsx)(p,{...o})}):p()}},8453:(o,t,e)=>{e.d(t,{R:()=>s,x:()=>a});var n=e(6540);const i={},r=n.createContext(i);function s(o){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof o?o(t):{...t,...o}}),[t,o])}function a(o){let t;return t=o.disableParentContext?"function"==typeof o.components?o.components(i):o.components||i:s(o.components),n.createElement(r.Provider,{value:t},o.children)}}}]);