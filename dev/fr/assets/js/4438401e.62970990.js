"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[3012],{2222:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"SQL/Intro/intro-sql","title":"Introduction to SQL","description":"What is SQL?","source":"@site/docs/SQL/1-Intro/1-intro-sql.md","sourceDirName":"SQL/1-Intro","slug":"/SQL/Intro/intro-sql","permalink":"/dev/fr/docs/SQL/Intro/intro-sql","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Test Execution on Cloud Environments","permalink":"/dev/fr/docs/QA-Testing/Automation-Framework-Strategy/test-execution-on-cloud"},"next":{"title":"Types of SQL","permalink":"/dev/fr/docs/SQL/Intro/type-of-sql"}}');var r=s(4848),i=s(8453);const a={},d="Introduction to SQL",o={},l=[{value:"What is SQL?",id:"what-is-sql",level:2},{value:"History of SQL",id:"history-of-sql",level:2},{value:"SQL Standards Over Time",id:"sql-standards-over-time",level:2},{value:"Importance of SQL Standards",id:"importance-of-sql-standards",level:2},{value:"Summary",id:"summary",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"introduction-to-sql",children:"Introduction to SQL"})}),"\n",(0,r.jsx)(n.h2,{id:"what-is-sql",children:"What is SQL?"}),"\n",(0,r.jsx)(n.p,{children:"SQL (Structured Query Language) is the standard language used to communicate with relational databases. It is used for storing, manipulating, and retrieving data stored in relational database systems (RDBMS)."}),"\n",(0,r.jsx)(n.p,{children:"SQL allows users to create, modify, query, and manage data using a standardized syntax. It supports a wide range of operations including inserting data into tables, updating existing data, deleting records, retrieving specific data using queries, and managing database schemas."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"history-of-sql",children:"History of SQL"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"1970:"})," The foundations of SQL were laid by Dr. Edgar F. Codd at IBM when he published the paper ",(0,r.jsx)(n.em,{children:'"A Relational Model of Data for Large Shared Data Banks."'})," This paper introduced the concept of relational databases."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"1974:"})," Donald D. Chamberlin and Raymond F. Boyce at IBM developed a language called SEQUEL (Structured English Query Language), which later became SQL. It was originally designed to manipulate and retrieve data stored in IBM\u2019s experimental relational database system called System R."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"1979:"})," Oracle (then Relational Software Inc.) became the first company to release a commercial implementation of SQL, preceding IBM's official release."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"1986:"})," SQL was adopted as a standard by the American National Standards Institute (ANSI), and later by the International Organization for Standardization (ISO)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"sql-standards-over-time",children:"SQL Standards Over Time"}),"\n",(0,r.jsx)(n.p,{children:"SQL has evolved significantly since its inception. Here's a brief timeline of the major SQL standard versions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SQL-86 (SQL-87):"})," The first ANSI standard for SQL. Established the basic syntax and semantics."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SQL-89:"})," Minor revision with limited new features and improved consistency."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SQL-92:"})," A major update introducing a more robust set of features such as enhanced join operations, subqueries, and better compliance guidelines. Also known as SQL2."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SQL:1999 (SQL3):"})," Introduced object-relational features, triggers, recursive queries (WITH RECURSIVE), user-defined types (UDTs), and procedural extensions (like ",(0,r.jsx)(n.code,{children:"BEGIN...END"}),", loops, and conditionals)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SQL:2003:"})," Introduced XML-related features, window functions (e.g., ",(0,r.jsx)(n.code,{children:"ROW_NUMBER()"}),"), and ",(0,r.jsx)(n.code,{children:"MERGE"})," statements."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SQL:2006:"})," Focused on better integration with XML, supporting SQL/XML standard queries."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SQL:2008:"})," Included improvements to ",(0,r.jsx)(n.code,{children:"MERGE"}),", ",(0,r.jsx)(n.code,{children:"TRUNCATE"}),", ",(0,r.jsx)(n.code,{children:"FILTER"})," clause in aggregate functions, and INSTEAD OF triggers."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SQL:2011:"})," Brought significant features like temporal tables (for tracking historical data) and enhanced time-based querying."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SQL:2016:"})," Introduced JSON support, row pattern matching, and POLYMORPHIC table functions."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SQL:2019:"})," Expanded support for table functions, improved JSON querying, and better integration with modern applications."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"importance-of-sql-standards",children:"Importance of SQL Standards"}),"\n",(0,r.jsxs)(n.p,{children:["The ANSI and ISO standards ensure that SQL remains a consistent and interoperable language across different RDBMS implementations. However, ",(0,r.jsx)(n.strong,{children:"most database systems (like PostgreSQL, MySQL, SQL Server, and Oracle)"})," implement their own ",(0,r.jsx)(n.strong,{children:"dialects of SQL"})," that extend the standard with proprietary features."]}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"T-SQL (SQL Server)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"PL/SQL (Oracle)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"PL/pgSQL (PostgreSQL)"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Understanding the core SQL standard while also being aware of vendor-specific extensions is crucial for writing portable and optimized SQL code."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(n.p,{children:"SQL is a mature and evolving language that forms the backbone of relational data management. Learning its history and standards provides essential context for understanding why things work the way they do \u2014 and helps developers write better, more future-proof queries."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\u201cThe relational model is as revolutionary a concept as Copernicus\u2019 idea that the Earth moves around the Sun.\u201d \u2014 Edgar F. Codd"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var t=s(6540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);