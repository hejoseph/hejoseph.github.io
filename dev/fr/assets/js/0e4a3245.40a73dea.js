"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[6265],{2930:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>l,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"QA-Testing/Intro/shit-left-right-testing","title":"Shift-Left & Shift-Right Testing","description":"Overview","source":"@site/docs/QA-Testing/1-Intro/shit-left-right-testing.md","sourceDirName":"QA-Testing/1-Intro","slug":"/QA-Testing/Intro/shit-left-right-testing","permalink":"/dev/fr/docs/QA-Testing/Intro/shit-left-right-testing","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"How Senior QA Differs from Junior and Mid-Level Roles","permalink":"/dev/fr/docs/QA-Testing/Intro/senior-junior-qa-diff"},"next":{"title":"Canary Testing, A/B Testing & Chaos Testing","permalink":"/dev/fr/docs/QA-Testing/Intro/types-of-testing"}}');var s=n(4848),r=n(8453);const l={},o="Shift-Left & Shift-Right Testing",d={},h=[{value:"Overview",id:"overview",level:2},{value:"What is Shift-Left Testing?",id:"what-is-shift-left-testing",level:2},{value:"Definition",id:"definition",level:3},{value:"Key Activities:",id:"key-activities",level:3},{value:"Use Case: Agile Sprint Planning",id:"use-case-agile-sprint-planning",level:3},{value:"Benefits:",id:"benefits",level:3},{value:"What is Shift-Right Testing?",id:"what-is-shift-right-testing",level:2},{value:"Definition",id:"definition-1",level:3},{value:"Key Activities:",id:"key-activities-1",level:3},{value:"Use Case: Production Feature Monitoring",id:"use-case-production-feature-monitoring",level:3},{value:"Benefits:",id:"benefits-1",level:3},{value:"Shift-Left vs Shift-Right: Comparison",id:"shift-left-vs-shift-right-comparison",level:2},{value:"Role of QA in Shift-Left &amp; Shift-Right",id:"role-of-qa-in-shift-left--shift-right",level:2},{value:"In Shift-Left:",id:"in-shift-left",level:3},{value:"In Shift-Right:",id:"in-shift-right",level:3},{value:"Summary",id:"summary",level:2}];function c(e){const i={blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"shift-left--shift-right-testing",children:"Shift-Left & Shift-Right Testing"})}),"\n",(0,s.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(i.p,{children:["As modern software development embraces ",(0,s.jsx)(i.strong,{children:"Agile"}),", ",(0,s.jsx)(i.strong,{children:"DevOps"}),", and ",(0,s.jsx)(i.strong,{children:"continuous delivery"}),', traditional testing that occurs only "after development" is no longer sufficient. To ensure both speed and quality, organizations adopt two key approaches:']}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Shift-Left Testing"}),": Moving testing ",(0,s.jsx)(i.strong,{children:"earlier"})," in the development lifecycle"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Shift-Right Testing"}),": Extending testing ",(0,s.jsx)(i.strong,{children:"beyond release"}),", into production"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Both are essential pillars of ",(0,s.jsx)(i.strong,{children:"quality engineering"}),", helping prevent defects early and validate real-world performance continuously."]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"what-is-shift-left-testing",children:"What is Shift-Left Testing?"}),"\n",(0,s.jsx)(i.h3,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Shift-left testing"})," refers to ",(0,s.jsx)(i.strong,{children:"starting testing activities as early as possible"})," in the software development lifecycle (SDLC). This reduces the cost of defect fixing and helps prevent bugs before they are introduced."]}),"\n",(0,s.jsx)(i.h3,{id:"key-activities",children:"Key Activities:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.strong,{children:"Involve QA during requirements analysis"})}),"\n",(0,s.jsxs)(i.li,{children:["Review and clarify ",(0,s.jsx)(i.strong,{children:"acceptance criteria"})," early"]}),"\n",(0,s.jsxs)(i.li,{children:["Create ",(0,s.jsx)(i.strong,{children:"unit tests, component tests, API tests"})," during development"]}),"\n",(0,s.jsxs)(i.li,{children:["Automate ",(0,s.jsx)(i.strong,{children:"test data preparation"})," and ",(0,s.jsx)(i.strong,{children:"build verification"})]}),"\n",(0,s.jsxs)(i.li,{children:["Implement ",(0,s.jsx)(i.strong,{children:"Test-Driven Development (TDD)"})," and ",(0,s.jsx)(i.strong,{children:"Behavior-Driven Development (BDD)"})]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"use-case-agile-sprint-planning",children:"Use Case: Agile Sprint Planning"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"QA collaborates with developers and product owners during story refinement."}),"\n",(0,s.jsx)(i.li,{children:"As stories are defined, QA writes acceptance test cases."}),"\n",(0,s.jsxs)(i.li,{children:["Developers and QA create automation scripts ",(0,s.jsx)(i.strong,{children:"before"})," code is fully written."]}),"\n",(0,s.jsx)(i.li,{children:"Bugs are caught during code integration, not after a UI is built."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"benefits",children:"Benefits:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Early bug detection = cheaper fixes"}),"\n",(0,s.jsx)(i.li,{children:"Better collaboration = improved clarity"}),"\n",(0,s.jsx)(i.li,{children:"Improves team velocity over time"}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"what-is-shift-right-testing",children:"What is Shift-Right Testing?"}),"\n",(0,s.jsx)(i.h3,{id:"definition-1",children:"Definition"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Shift-right testing"})," involves ",(0,s.jsx)(i.strong,{children:"testing and monitoring software after it\u2019s released to production"}),". This focuses on ",(0,s.jsx)(i.strong,{children:"user experience, resilience, and performance under real-world conditions"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"key-activities-1",children:"Key Activities:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.strong,{children:"Real user monitoring (RUM)"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Synthetic monitoring"})," (automated probes to check functionality)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"A/B testing"})," and ",(0,s.jsx)(i.strong,{children:"canary releases"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Chaos testing"})," to simulate failure"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Feedback collection"})," (crash reports, session replays, user feedback)"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"use-case-production-feature-monitoring",children:"Use Case: Production Feature Monitoring"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"A new dashboard feature is live in production behind a feature flag."}),"\n",(0,s.jsxs)(i.li,{children:["QA monitors logs and usage metrics to detect:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"JavaScript errors"}),"\n",(0,s.jsx)(i.li,{children:"Slow load times"}),"\n",(0,s.jsx)(i.li,{children:"Drop in user engagement"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Based on telemetry and feedback, the team iterates quickly."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"benefits-1",children:"Benefits:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Enables ",(0,s.jsx)(i.strong,{children:"continuous validation"})]}),"\n",(0,s.jsx)(i.li,{children:"Helps test what cannot be simulated in lower environments"}),"\n",(0,s.jsx)(i.li,{children:"Improves reliability and user satisfaction"}),"\n",(0,s.jsx)(i.li,{children:"Provides data for better decision-making"}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"shift-left-vs-shift-right-comparison",children:"Shift-Left vs Shift-Right: Comparison"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Dimension"}),(0,s.jsx)(i.th,{children:"Shift-Left Testing"}),(0,s.jsx)(i.th,{children:"Shift-Right Testing"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.strong,{children:"Focus"})}),(0,s.jsx)(i.td,{children:"Prevention (before release)"}),(0,s.jsx)(i.td,{children:"Detection & recovery (after release)"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.strong,{children:"Goal"})}),(0,s.jsx)(i.td,{children:"Find bugs early"}),(0,s.jsx)(i.td,{children:"Observe and improve real-world behavior"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.strong,{children:"Tools"})}),(0,s.jsx)(i.td,{children:"JUnit, Selenium, Postman, Jest"}),(0,s.jsx)(i.td,{children:"Datadog, New Relic, Sentry, Gremlin"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.strong,{children:"Testing Types"})}),(0,s.jsx)(i.td,{children:"Unit, API, Integration, Static Analysis"}),(0,s.jsx)(i.td,{children:"Monitoring, A/B Testing, Chaos Engineering"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.strong,{children:"QA Involvement"})}),(0,s.jsx)(i.td,{children:"Requirement analysis, code reviews"}),(0,s.jsx)(i.td,{children:"Post-release monitoring and validation"})]})]})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"role-of-qa-in-shift-left--shift-right",children:"Role of QA in Shift-Left & Shift-Right"}),"\n",(0,s.jsxs)(i.p,{children:["As a ",(0,s.jsx)(i.strong,{children:"senior QA engineer"}),", you bridge both ends of the pipeline:"]}),"\n",(0,s.jsx)(i.h3,{id:"in-shift-left",children:"In Shift-Left:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Collaborate in backlog grooming and story creation"}),"\n",(0,s.jsx)(i.li,{children:"Define testable acceptance criteria and test cases early"}),"\n",(0,s.jsx)(i.li,{children:"Pair with developers on unit tests and BDD scenarios"}),"\n",(0,s.jsx)(i.li,{children:"Ensure CI pipelines include fast feedback from tests"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"in-shift-right",children:"In Shift-Right:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Set up observability (logs, traces, metrics)"}),"\n",(0,s.jsx)(i.li,{children:"Monitor dashboards post-release"}),"\n",(0,s.jsx)(i.li,{children:"Analyze customer feedback and incident reports"}),"\n",(0,s.jsx)(i.li,{children:"Drive improvements based on production insights"}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsxs)(i.p,{children:["Shift-Left and Shift-Right aren\u2019t just methodologies \u2014 they reflect a ",(0,s.jsx)(i.strong,{children:"quality-first mindset across the lifecycle"}),". Together, they form a feedback loop where ",(0,s.jsx)(i.strong,{children:"prevention meets observation"}),", enabling ",(0,s.jsx)(i.strong,{children:"faster, smarter, and safer"})," software releases."]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:'"Shift-Left catches the bug before it bites. Shift-Right watches to see if it still stings."'}),"\n"]})]})}function a(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>o});var t=n(6540);const s={},r=t.createContext(s);function l(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);