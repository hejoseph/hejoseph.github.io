"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[2682],{1573:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Portfolio/MovieList/summary","title":"Movie List Application - Documentation Summary","description":"Project Overview","source":"@site/docs/Portfolio/MovieList/summary.md","sourceDirName":"Portfolio/MovieList","slug":"/Portfolio/MovieList/summary","permalink":"/dev/fr/docs/Portfolio/MovieList/summary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"React Frontend Application","permalink":"/dev/fr/docs/Portfolio/MovieList/frontend/react-application"},"next":{"title":"Notes App - Project Introduction","permalink":"/dev/fr/docs/Portfolio/NoteApp/introduction"}}');var r=i(4848),t=i(8453);const o={},l="Movie List Application - Documentation Summary",c={},d=[{value:"Project Overview",id:"project-overview",level:2},{value:"Architecture Summary",id:"architecture-summary",level:2},{value:"Three-Tier Architecture",id:"three-tier-architecture",level:3},{value:"Technology Stack",id:"technology-stack",level:3},{value:"Documentation Structure",id:"documentation-structure",level:2},{value:"1. Introduction",id:"1-introduction",level:3},{value:"2. Database Configuration",id:"2-database-configuration",level:3},{value:"3. Spring Boot Backend",id:"3-spring-boot-backend",level:3},{value:"4. React Frontend",id:"4-react-frontend",level:3},{value:"5. Docker Deployment",id:"5-docker-deployment",level:3},{value:"6. Dockerfile Details",id:"6-dockerfile-details",level:3},{value:"Key Features Implemented",id:"key-features-implemented",level:2},{value:"Movie Browsing",id:"movie-browsing",level:3},{value:"Review System",id:"review-system",level:3},{value:"Technical Features",id:"technical-features",level:3},{value:"Development Workflow",id:"development-workflow",level:2},{value:"Local Development Setup",id:"local-development-setup",level:3},{value:"Making Changes",id:"making-changes",level:3},{value:"API Endpoints Reference",id:"api-endpoints-reference",level:2},{value:"Movies API",id:"movies-api",level:3},{value:"Reviews API",id:"reviews-api",level:3},{value:"Component Relationships",id:"component-relationships",level:2},{value:"Frontend Flow",id:"frontend-flow",level:3},{value:"Backend Flow",id:"backend-flow",level:3},{value:"Best Practices Demonstrated",id:"best-practices-demonstrated",level:2},{value:"Frontend Best Practices",id:"frontend-best-practices",level:3},{value:"Backend Best Practices",id:"backend-best-practices",level:3},{value:"DevOps Best Practices",id:"devops-best-practices",level:3},{value:"Potential Enhancements",id:"potential-enhancements",level:2},{value:"Authentication &amp; Authorization",id:"authentication--authorization",level:3},{value:"Enhanced Features",id:"enhanced-features",level:3},{value:"Technical Improvements",id:"technical-improvements",level:3},{value:"Learning Outcomes",id:"learning-outcomes",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Development Resources",id:"development-resources",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"movie-list-application---documentation-summary",children:"Movie List Application - Documentation Summary"})}),"\n",(0,r.jsx)(n.h2,{id:"project-overview",children:"Project Overview"}),"\n",(0,r.jsx)(n.p,{children:"The Movie List Application is a modern full-stack web application that demonstrates best practices in containerized microservices architecture. Users can browse movies, watch trailers, and write reviews through an intuitive interface."}),"\n",(0,r.jsx)(n.h2,{id:"architecture-summary",children:"Architecture Summary"}),"\n",(0,r.jsx)(n.h3,{id:"three-tier-architecture",children:"Three-Tier Architecture"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frontend"}),": React.js single-page application"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend"}),": Spring Boot REST API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Database"}),": MongoDB NoSQL database"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"technology-stack",children:"Technology Stack"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frontend"}),": React 18, React Router, Bootstrap, Material-UI, Axios"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend"}),": Spring Boot 3, Spring Data MongoDB, Lombok"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Database"}),": MongoDB with automatic initialization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deployment"}),": Docker & Docker Compose"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build Tools"}),": Maven (backend), npm (frontend)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"documentation-structure",children:"Documentation Structure"}),"\n",(0,r.jsxs)(n.h3,{id:"1-introduction",children:["1. ",(0,r.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/MovieList/introduction",children:"Introduction"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": High-level overview and getting started guide\r\n",(0,r.jsx)(n.strong,{children:"Key Topics"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Application architecture and component overview"}),"\n",(0,r.jsx)(n.li,{children:"Technology explanations for beginners"}),"\n",(0,r.jsx)(n.li,{children:"Development setup with Docker Compose"}),"\n",(0,r.jsx)(n.li,{children:"Application flow and benefits"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"2-database-configuration",children:["2. ",(0,r.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/MovieList/database/mongodb-configuration",children:"Database Configuration"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": MongoDB setup and data management\r\n",(0,r.jsx)(n.strong,{children:"Key Topics"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Container configuration and initialization"}),"\n",(0,r.jsx)(n.li,{children:"Database structure and movie data schema"}),"\n",(0,r.jsx)(n.li,{children:"Connection configuration for different environments"}),"\n",(0,r.jsx)(n.li,{children:"Data persistence options and initialization scripts"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"3-spring-boot-backend",children:["3. ",(0,r.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/MovieList/api/spring-boot-backend",children:"Spring Boot Backend"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Backend API architecture and implementation\r\n",(0,r.jsx)(n.strong,{children:"Key Topics"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Layered architecture (Controller \u2192 Service \u2192 Repository)"}),"\n",(0,r.jsx)(n.li,{children:"REST API endpoints for movies and reviews"}),"\n",(0,r.jsx)(n.li,{children:"Spring Boot features and annotations"}),"\n",(0,r.jsx)(n.li,{children:"Data models and MongoDB integration"}),"\n",(0,r.jsx)(n.li,{children:"CORS configuration and dependency injection"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"4-react-frontend",children:["4. ",(0,r.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/MovieList/frontend/react-application",children:"React Frontend"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Frontend application structure and components\r\n",(0,r.jsx)(n.strong,{children:"Key Topics"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"React application architecture and routing"}),"\n",(0,r.jsx)(n.li,{children:"Component hierarchy and state management"}),"\n",(0,r.jsx)(n.li,{children:"API integration with Axios"}),"\n",(0,r.jsx)(n.li,{children:"UI libraries and responsive design"}),"\n",(0,r.jsx)(n.li,{children:"Modern React patterns (hooks, functional components)"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"5-docker-deployment",children:["5. ",(0,r.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/MovieList/deployment/docker-setup",children:"Docker Deployment"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Containerization and orchestration\r\n",(0,r.jsx)(n.strong,{children:"Key Topics"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Docker Compose service configuration"}),"\n",(0,r.jsx)(n.li,{children:"Container dependencies and networking"}),"\n",(0,r.jsx)(n.li,{children:"Port mappings and volume management"}),"\n",(0,r.jsx)(n.li,{children:"Development vs production considerations"}),"\n",(0,r.jsx)(n.li,{children:"Common commands and troubleshooting"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"6-dockerfile-details",children:["6. ",(0,r.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/MovieList/deployment/dockerfile-details",children:"Dockerfile Details"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Container build processes and optimization\r\n",(0,r.jsx)(n.strong,{children:"Key Topics"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Multi-stage builds for frontend optimization"}),"\n",(0,r.jsx)(n.li,{children:"Backend containerization with OpenJDK"}),"\n",(0,r.jsx)(n.li,{children:"Build context and layer caching strategies"}),"\n",(0,r.jsx)(n.li,{children:"Security considerations and image optimization"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-features-implemented",children:"Key Features Implemented"}),"\n",(0,r.jsx)(n.h3,{id:"movie-browsing",children:"Movie Browsing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Carousel Display"}),": Interactive movie carousel with backdrop images"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Movie Details"}),": Poster, title, genres, and release information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Trailer Integration"}),": YouTube trailer playback"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responsive Design"}),": Works on desktop and mobile devices"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"review-system",children:"Review System"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"View Reviews"}),": Display existing reviews for each movie"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Write Reviews"}),": Users can submit new reviews"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-time Updates"}),": Reviews appear immediately after submission"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Database Integration"}),": Reviews stored in MongoDB with timestamps"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"technical-features",children:"Technical Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RESTful API"}),": Clean API design with proper HTTP methods"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Single Page Application"}),": Client-side routing for fast navigation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Containerized Deployment"}),": Complete Docker setup for easy deployment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Auto-initialization"}),": Database populated with sample data automatically"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CORS Enabled"}),": Frontend and backend communication configured"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,r.jsx)(n.h3,{id:"local-development-setup",children:"Local Development Setup"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clone Repository"}),": Get the source code"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Start Services"}),": ",(0,r.jsx)(n.code,{children:"docker-compose up --build"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Access Application"}),": Frontend at localhost:3000, API at localhost:8080"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Database Ready"}),": MongoDB automatically initialized with movie data"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"making-changes",children:"Making Changes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frontend Changes"}),": Edit React components, changes reflect immediately"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Changes"}),": Modify Java code, rebuild container"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Database Changes"}),": Update initialization scripts in mongo-init folder"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"api-endpoints-reference",children:"API Endpoints Reference"}),"\n",(0,r.jsx)(n.h3,{id:"movies-api",children:"Movies API"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /api/v1/movies"})," - Retrieve all movies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /api/v1/movies/{imdbId}"})," - Get specific movie by IMDb ID"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"reviews-api",children:"Reviews API"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"POST /api/v1/reviews"})," - Create new review","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Body: ",(0,r.jsx)(n.code,{children:'{"reviewBody": "text", "imdbId": "movieId"}'})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"component-relationships",children:"Component Relationships"}),"\n",(0,r.jsx)(n.h3,{id:"frontend-flow",children:"Frontend Flow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"App.js (state management)\r\n\u251c\u2500\u2500 Header.js (navigation)\r\n\u251c\u2500\u2500 Home.js \u2192 Hero.js (movie carousel)\r\n\u251c\u2500\u2500 Trailer.js (YouTube player)\r\n\u251c\u2500\u2500 Reviews.js (review display/form)\r\n\u2514\u2500\u2500 NotFound.js (404 page)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"backend-flow",children:"Backend Flow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"MovieController \u2192 MovieService \u2192 MovieRepository \u2192 MongoDB\r\nReviewController \u2192 ReviewService \u2192 ReviewRepository \u2192 MongoDB\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices-demonstrated",children:"Best Practices Demonstrated"}),"\n",(0,r.jsx)(n.h3,{id:"frontend-best-practices",children:"Frontend Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Component Separation"}),": Single responsibility principle"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"State Management"}),": Centralized state with prop passing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Handling"}),": Try-catch blocks for API calls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responsive Design"}),": Bootstrap grid system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modern React"}),": Hooks instead of class components"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"backend-best-practices",children:"Backend Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Layered Architecture"}),": Clear separation of concerns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dependency Injection"}),": Spring's IoC container"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RESTful Design"}),": Proper HTTP methods and status codes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Validation"}),": Input validation and error handling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration Management"}),": Environment-specific properties"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"devops-best-practices",children:"DevOps Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Containerization"}),": Consistent environments across development/production"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-stage Builds"}),": Optimized container images"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service Dependencies"}),": Proper startup order with health checks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Volume Management"}),": Data persistence and initialization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Network Isolation"}),": Container networking for security"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"potential-enhancements",children:"Potential Enhancements"}),"\n",(0,r.jsx)(n.h3,{id:"authentication--authorization",children:"Authentication & Authorization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User registration and login system"}),"\n",(0,r.jsx)(n.li,{children:"JWT token-based authentication"}),"\n",(0,r.jsx)(n.li,{children:"Role-based access control for reviews"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"enhanced-features",children:"Enhanced Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Movie search and filtering"}),"\n",(0,r.jsx)(n.li,{children:"User watchlists and favorites"}),"\n",(0,r.jsx)(n.li,{children:"Rating system (stars/scores)"}),"\n",(0,r.jsx)(n.li,{children:"Movie recommendations"}),"\n",(0,r.jsx)(n.li,{children:"User profiles and review history"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"technical-improvements",children:"Technical Improvements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Database indexing for performance"}),"\n",(0,r.jsx)(n.li,{children:"Caching layer (Redis)"}),"\n",(0,r.jsx)(n.li,{children:"API rate limiting"}),"\n",(0,r.jsx)(n.li,{children:"Comprehensive testing (unit, integration, e2e)"}),"\n",(0,r.jsx)(n.li,{children:"CI/CD pipeline setup"}),"\n",(0,r.jsx)(n.li,{children:"Production monitoring and logging"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"learning-outcomes",children:"Learning Outcomes"}),"\n",(0,r.jsx)(n.p,{children:"This project demonstrates:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Full-stack Development"}),": Frontend, backend, and database integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modern Web Technologies"}),": React, Spring Boot, MongoDB"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Containerization"}),": Docker and Docker Compose"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API Design"}),": RESTful services and HTTP best practices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Database Design"}),": NoSQL document modeling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Component Architecture"}),": Modular, maintainable code structure"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Port Conflicts"}),": Ensure ports 3000, 8080, 27017 are available"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Docker Issues"}),": Check Docker Desktop is running"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build Failures"}),": Verify all dependencies are installed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API Errors"}),": Check backend logs with ",(0,r.jsx)(n.code,{children:"docker logs movie-api"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"development-resources",children:"Development Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"React Documentation"}),": ",(0,r.jsx)(n.a,{href:"https://reactjs.org/docs",children:"https://reactjs.org/docs"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spring Boot Guides"}),": ",(0,r.jsx)(n.a,{href:"https://spring.io/guides",children:"https://spring.io/guides"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MongoDB Documentation"}),": ",(0,r.jsx)(n.a,{href:"https://docs.mongodb.com",children:"https://docs.mongodb.com"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Docker Documentation"}),": ",(0,r.jsx)(n.a,{href:"https://docs.docker.com",children:"https://docs.docker.com"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This documentation provides a comprehensive guide to understanding, developing, and deploying the Movie List Application. Each section builds upon the previous ones to give you a complete picture of how modern web applications are structured and deployed."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);