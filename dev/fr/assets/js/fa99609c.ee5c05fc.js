"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[3232],{2008:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"tech-related/Clean Code/clean-code-basics","title":"Principes Clean Code","description":"clean-code-representation.png","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/tech-related/Clean Code/clean-code-basics.md","sourceDirName":"tech-related/Clean Code","slug":"/tech-related/Clean Code/clean-code-basics","permalink":"/dev/fr/docs/tech-related/Clean Code/clean-code-basics","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"bonnes pratiques","permalink":"/dev/fr/docs/tags/bonnes-pratiques"},{"inline":true,"label":"lisibilit\xe9 du code","permalink":"/dev/fr/docs/tags/lisibilite-du-code"},{"inline":true,"label":"d\xe9veloppement logiciel","permalink":"/dev/fr/docs/tags/developpement-logiciel"}],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Principes Clean Code","sidebar_position":1,"tags":["bonnes pratiques","lisibilit\xe9 du code","d\xe9veloppement logiciel"]},"sidebar":"tutorialSidebar","previous":{"title":"Max Token","permalink":"/dev/fr/docs/tech-related/Chatbot/understand-models-max-token"},"next":{"title":"Aper\xe7u de Hugging Face","permalink":"/dev/fr/docs/tech-related/Huggingface/huggingface-intro"}}');var t=s(4848),r=s(8453);const l={title:"Principes Clean Code",sidebar_position:1,tags:["bonnes pratiques","lisibilit\xe9 du code","d\xe9veloppement logiciel"]},o='Principes Essentiels de "Clean Code"',a={},c=[{value:"1. Noms Significatifs",id:"1-noms-significatifs",level:2},{value:"2. Fonctions : Faire Une Seule Chose",id:"2-fonctions--faire-une-seule-chose",level:2},{value:"3. Commentaires",id:"3-commentaires",level:2},{value:"4. Formatage",id:"4-formatage",level:2},{value:"5. Gestion des Erreurs",id:"5-gestion-des-erreurs",level:2},{value:"6. Tests Unitaires",id:"6-tests-unitaires",level:2},{value:"7. Raffinements Successifs",id:"7-raffinements-successifs",level:2},{value:"8. Am\xe9lioration Continue",id:"8-am\xe9lioration-continue",level:2},{value:"9. Heuristiques et Odeurs de Code",id:"9-heuristiques-et-odeurs-de-code",level:2},{value:"10. Exemples Concrets",id:"10-exemples-concrets",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"principes-essentiels-de-clean-code",children:'Principes Essentiels de "Clean Code"'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"clean-code-representation.png",src:s(9816).A+"",width:"512",height:"360"})}),"\n",(0,t.jsxs)(n.p,{children:["Les extraits du livre ",(0,t.jsx)(n.strong,{children:'"Clean Code"'})," de Robert C. Martin mettent en avant l'importance fondamentale d'\xe9crire du code propre et lisible pour garantir la maintenance, l'\xe9volutivit\xe9 et la collaboration dans les projets logiciels. Voici un r\xe9sum\xe9 structur\xe9 des th\xe8mes majeurs et des id\xe9es cl\xe9s abord\xe9s dans ces extraits."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"1-noms-significatifs",children:"1. Noms Significatifs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\xc9viter le mappage mental"})," : Les noms doivent \xeatre explicites et refl\xe9ter le domaine du probl\xe8me ou de la solution.","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"Readers shouldn\u2019t have to mentally translate your names into other names they already know."'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\xc9viter les noms \xe0 lettre unique"})," : Sauf pour des cas tr\xe8s limit\xe9s (ex : compteurs de boucle).","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"There can be no worse reason for using the name c than because a and b were already taken."'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Noms courts vs. longs"})," : Privil\xe9gier la concision tant que la clart\xe9 est pr\xe9serv\xe9e.","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"Shorter names are generally better than longer ones, so long as they are clear."'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Contextes clairs"})," : Les noms doivent \xeatre contextualis\xe9s pour \xe9viter toute ambigu\xeft\xe9."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"2-fonctions--faire-une-seule-chose",children:"2. Fonctions : Faire Une Seule Chose"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Principe de la "Seule Chose"'})," : Une fonction doit avoir une seule responsabilit\xe9.","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"They should usually be shorter than Listing 3-2! Indeed, Listing 3-2 should really be shortened to Listing 3-3."'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Blocs courts et indentation"})," : Les blocs ",(0,t.jsx)(n.code,{children:"if"}),", ",(0,t.jsx)(n.code,{children:"else"}),", ",(0,t.jsx)(n.code,{children:"while"}),", etc. devraient id\xe9alement contenir une seule ligne, souvent un appel de fonction.","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"This implies that the blocks within if statements, else statements, while statements, and so on should be one line long. Probably that line should be a function call."'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"3-commentaires",children:"3. Commentaires"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\xc9viter les mauvais commentaires"})," : Ne pas masquer du code mal \xe9crit par des commentaires.","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"Don\u2019t Use a Comment When You Can Use a Function or a Variable"'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\xc9viter la redondance"})," : Les commentaires qui r\xe9p\xe8tent le code sont inutiles, tout comme les Javadocs sur des getters/setters simples."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"4-formatage",children:"4. Formatage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Alignement et densit\xe9"})," : Utiliser l\u2019espace blanc pour clarifier les relations entre les \xe9l\xe9ments du code."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Priorit\xe9 des op\xe9rateurs"})," : Le formatage doit refl\xe9ter la logique des op\xe9rations."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Respect de l\u2019indentation"})," : Toujours respecter l\u2019indentation pour la lisibilit\xe9 et la pr\xe9vention d\u2019erreurs.","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"Whenever I have succumbed to this temptation, I have almost always gone back and put the indentation back in."'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scopes muets"})," : Rendre explicite les boucles ou instructions vides pour \xe9viter les erreurs subtiles."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"5-gestion-des-erreurs",children:"5. Gestion des Erreurs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pr\xe9f\xe9rer les exceptions aux codes de retour"})," : Les exceptions clarifient la s\xe9paration entre le flux normal et la gestion des erreurs."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"6-tests-unitaires",children:"6. Tests Unitaires"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TDD (Test Driven Development)"})," : \xc9crire les tests avant le code pour garantir la qualit\xe9 et la maintenabilit\xe9.","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"To avoid this, I use the discipline of Test-Driven Development (TDD)."'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tests utiles"})," : Les tests doivent r\xe9v\xe9ler les r\xe8gles g\xe9n\xe9rales du code et aider \xe0 identifier les cas manquants."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"7-raffinements-successifs",children:"7. Raffinements Successifs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Processus incr\xe9mental"})," : Le code propre s\u2019obtient par des am\xe9liorations successives et it\xe9ratives."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TDD pour guider la refactorisation"})," : Les tests permettent de s\xe9curiser les refactorisations."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"8-am\xe9lioration-continue",children:"8. Am\xe9lioration Continue"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Exemple JUnit"})," : M\xeame un code d\xe9j\xe0 propre peut toujours \xeatre am\xe9lior\xe9.","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"But no module is immune from improvement, and each of us has the responsibility to leave the code a little better than we found it." (La R\xe8gle du Boy Scout)'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"9-heuristiques-et-odeurs-de-code",children:"9. Heuristiques et Odeurs de Code"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Noms clairs"})," : Les noms sont essentiels pour la lisibilit\xe9.","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"Names in software are 90 percent of what make software readable."'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\xc9viter les encodages"})," : Ne pas surcharger les noms avec des informations de type ou de port\xe9e."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fonctions \xe0 responsabilit\xe9 unique"})," : \xc9viter les fonctions qui font plusieurs choses.","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'"Functions of this kind do more than one thing, and should be converted into many smaller functions, each of which does one thing." (G30)'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"S\xe9paration des niveaux d\u2019abstraction"})," : Organiser le code pour distinguer clairement les diff\xe9rents niveaux d\u2019abstraction."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"10-exemples-concrets",children:"10. Exemples Concrets"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Refactorisation SerialDate"})," : Pr\xe9sentation d\u2019un cas r\xe9el de refactorisation, avec introduction de nouvelles classes et validation par tests unitaires."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:'Les principes de "Clean Code" sont essentiels pour \xe9crire du code lisible, maintenable et \xe9volutif. Ils couvrent la nomination, la structure des fonctions, l\u2019utilisation des commentaires, le formatage, la gestion des erreurs, les tests et l\u2019am\xe9lioration continue. L\u2019application de ces principes se traduit par une meilleure productivit\xe9, une qualit\xe9 logicielle accrue et une collaboration facilit\xe9e au sein des \xe9quipes de d\xe9veloppement.'})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},9816:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/clean-code-representation-0887e99ada29800b1759fba302597c26.png"}}]);