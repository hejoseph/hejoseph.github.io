"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[1341],{535:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Portfolio/Timelock/angular-fundamentals/README","title":"Angular Fundamentals","description":"This guide introduces core Angular concepts using examples from the TimeLock project. If you\'re new to Angular, this is your starting point.","source":"@site/docs/Portfolio/Timelock/angular-fundamentals/README.md","sourceDirName":"Portfolio/Timelock/angular-fundamentals","slug":"/Portfolio/Timelock/angular-fundamentals/","permalink":"/dev/fr/docs/Portfolio/Timelock/angular-fundamentals/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"TimeLock Documentation Summary","permalink":"/dev/fr/docs/Portfolio/Timelock/SUMMARY"},"next":{"title":"Auto-Plan Feature Documentation","permalink":"/dev/fr/docs/Portfolio/Timelock/auto-plan-feature"}}');var o=t(4848),i=t(8453);const s={},a="Angular Fundamentals",l={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"What is Angular?",id:"what-is-angular",level:2},{value:"Key Angular Concepts in TimeLock",id:"key-angular-concepts-in-timelock",level:3},{value:"Components",id:"components",level:2},{value:"Component Structure",id:"component-structure",level:3},{value:"Real Example from TimeLock",id:"real-example-from-timelock",level:3},{value:"Component Communication",id:"component-communication",level:3},{value:"Services and Dependency Injection",id:"services-and-dependency-injection",level:2},{value:"Creating a Service",id:"creating-a-service",level:3},{value:"Using Services in Components",id:"using-services-in-components",level:3},{value:"TimeLock Service Examples",id:"timelock-service-examples",level:3},{value:"Signals",id:"signals",level:2},{value:"Basic Signals",id:"basic-signals",level:3},{value:"Signals in Templates",id:"signals-in-templates",level:3},{value:"TimeLock Signal Examples",id:"timelock-signal-examples",level:3},{value:"Routing",id:"routing",level:2},{value:"Route Configuration",id:"route-configuration",level:3},{value:"Navigation",id:"navigation",level:3},{value:"Route Parameters",id:"route-parameters",level:3},{value:"Modules vs Standalone Components",id:"modules-vs-standalone-components",level:2},{value:"Traditional NgModule Approach (Old)",id:"traditional-ngmodule-approach-old",level:3},{value:"Standalone Components (Modern - Used in TimeLock)",id:"standalone-components-modern---used-in-timelock",level:3},{value:"Benefits of Standalone Components",id:"benefits-of-standalone-components",level:3},{value:"TypeScript Integration",id:"typescript-integration",level:2},{value:"Interface Definitions",id:"interface-definitions",level:3},{value:"Type Safety in Components",id:"type-safety-in-components",level:3},{value:"Generic Types",id:"generic-types",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"angular-fundamentals",children:"Angular Fundamentals"})}),"\n",(0,o.jsx)(n.p,{children:"This guide introduces core Angular concepts using examples from the TimeLock project. If you're new to Angular, this is your starting point."}),"\n",(0,o.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#what-is-angular",children:"What is Angular?"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#components",children:"Components"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#services-and-dependency-injection",children:"Services and Dependency Injection"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#signals",children:"Signals (Reactive State Management)"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#routing",children:"Routing"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#modules-vs-standalone-components",children:"Modules vs Standalone Components"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#typescript-integration",children:"TypeScript Integration"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"what-is-angular",children:"What is Angular?"}),"\n",(0,o.jsx)(n.p,{children:"Angular is a TypeScript-based web application framework developed by Google. It provides:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Component-based architecture"})," - Build encapsulated components that manage their own state"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Dependency injection"})," - Manage dependencies efficiently"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Reactive programming"})," - Handle asynchronous data with RxJS and Signals"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Routing"})," - Navigate between different views"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Forms"})," - Handle user input with powerful form controls"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"HTTP client"})," - Communicate with backend services"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"key-angular-concepts-in-timelock",children:"Key Angular Concepts in TimeLock"}),"\n",(0,o.jsxs)(n.p,{children:["TimeLock uses ",(0,o.jsx)(n.strong,{children:"Angular 20"})," with modern patterns:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Standalone components"})," (no NgModules needed)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Signals"})," for reactive state management"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Lazy loading"})," for performance"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Dependency injection"})," for services"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,o.jsx)(n.p,{children:"Components are the building blocks of Angular applications. Each component consists of:"}),"\n",(0,o.jsx)(n.h3,{id:"component-structure",children:"Component Structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Component({\r\n  selector: 'app-example',           // HTML tag name\r\n  standalone: true,                 // Modern standalone component\r\n  imports: [CommonModule],          // Dependencies\r\n  template: `<h1>{{title}}</h1>`,  // HTML template\r\n  styleUrls: ['./example.css']      // Component styles\r\n})\r\nexport class ExampleComponent {\r\n  title = 'Hello World';            // Component properties\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"real-example-from-timelock",children:"Real Example from TimeLock"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// From src/app/components/todo-item/todo-item.component.ts\r\n@Component({\r\n  selector: 'app-todo-item',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, TaskEditorComponent],\r\n  templateUrl: './todo-item.component.html',\r\n  styleUrls: ['./todo-item.component.css']\r\n})\r\nexport class TodoItemComponent {\r\n  @Input() todo!: Todo;                    // Input from parent\r\n  @Output() todoUpdated = new EventEmitter<Todo>();  // Output to parent\r\n  \r\n  isEditing = signal(false);               // Component state with signals\r\n  \r\n  toggleComplete() {\r\n    // Component method\r\n    this.todoUpdated.emit({\r\n      ...this.todo,\r\n      completed: !this.todo.completed\r\n    });\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"component-communication",children:"Component Communication"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Parent to Child"}),": Use ",(0,o.jsx)(n.code,{children:"@Input()"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// Parent template\r\n<app-todo-item [todo]="selectedTodo"></app-todo-item>\r\n\r\n// Child component\r\n@Input() todo!: Todo;\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Child to Parent"}),": Use ",(0,o.jsx)(n.code,{children:"@Output()"})," and ",(0,o.jsx)(n.code,{children:"EventEmitter"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// Child component\r\n@Output() todoUpdated = new EventEmitter<Todo>();\r\n\r\nonUpdate() {\r\n  this.todoUpdated.emit(this.todo);\r\n}\r\n\r\n// Parent template\r\n<app-todo-item (todoUpdated)="handleTodoUpdate($event)"></app-todo-item>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"services-and-dependency-injection",children:"Services and Dependency Injection"}),"\n",(0,o.jsx)(n.p,{children:"Services handle business logic and data management. Angular's dependency injection system provides services to components."}),"\n",(0,o.jsx)(n.h3,{id:"creating-a-service",children:"Creating a Service"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Injectable({\r\n  providedIn: 'root'  // Available application-wide\r\n})\r\nexport class TodoService {\r\n  private todos = signal<Todo[]>([]);\r\n  \r\n  addTodo(todo: Todo) {\r\n    this.todos.update(todos => [...todos, todo]);\r\n  }\r\n  \r\n  getTodos() {\r\n    return this.todos.asReadonly();\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"using-services-in-components",children:"Using Services in Components"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export class TodoListComponent {\r\n  private todoService = inject(TodoService);  // Modern injection syntax\r\n  \r\n  // Or using constructor injection (traditional way)\r\n  constructor(private todoService: TodoService) {}\r\n  \r\n  todos = this.todoService.getTodos();  // Access service data\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"timelock-service-examples",children:"TimeLock Service Examples"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"ProjectService"})," - Manages projects"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Simplified example from src/app/services/project.service.ts\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProjectService {\r\n  private projectsSignal = signal<Project[]>([]);\r\n  \r\n  projects = this.projectsSignal.asReadonly();\r\n  \r\n  async addProject(projectData: Omit<Project, 'id'>): Promise<string> {\r\n    const newProject = { ...projectData, id: this.generateId() };\r\n    this.projectsSignal.update(projects => [...projects, newProject]);\r\n    await this.saveProjects();\r\n    return newProject.id;\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"signals",children:"Signals"}),"\n",(0,o.jsx)(n.p,{children:"Signals are Angular's modern reactive state management solution (introduced in Angular 16+)."}),"\n",(0,o.jsx)(n.h3,{id:"basic-signals",children:"Basic Signals"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { signal, computed } from '@angular/core';\r\n\r\nexport class ExampleComponent {\r\n  // Writable signal\r\n  count = signal(0);\r\n  \r\n  // Computed signal (derived state)\r\n  doubleCount = computed(() => this.count() * 2);\r\n  \r\n  // Read signal value\r\n  getCurrentCount() {\r\n    return this.count();  // Call like a function\r\n  }\r\n  \r\n  // Update signal\r\n  increment() {\r\n    this.count.update(value => value + 1);\r\n    // Or set directly: this.count.set(5);\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"signals-in-templates",children:"Signals in Templates"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'\x3c!-- Display signal values --\x3e\r\n<p>Count: {{count()}}</p>\r\n<p>Double: {{doubleCount()}}</p>\r\n\r\n\x3c!-- Use in event handlers --\x3e\r\n<button (click)="increment()">Increment</button>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"timelock-signal-examples",children:"TimeLock Signal Examples"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// From TodoService\r\nprivate todosSignal = signal<Todo[]>([]);\r\nprivate filterSignal = signal<FilterType>('all');\r\n\r\n// Computed signals for filtered data\r\nactiveTodos = computed(() => \r\n  this.todosSignal().filter(todo => !todo.completed && !todo.archived)\r\n);\r\n\r\ncompletedTodos = computed(() => \r\n  this.todosSignal().filter(todo => todo.completed)\r\n);\r\n\r\nfilteredTodos = computed(() => {\r\n  const todos = this.todosSignal();\r\n  const filter = this.filterSignal();\r\n  \r\n  switch (filter) {\r\n    case 'active': return todos.filter(t => !t.completed);\r\n    case 'completed': return todos.filter(t => t.completed);\r\n    default: return todos;\r\n  }\r\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"routing",children:"Routing"}),"\n",(0,o.jsx)(n.p,{children:"Angular Router enables navigation between different views/pages."}),"\n",(0,o.jsx)(n.h3,{id:"route-configuration",children:"Route Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// From src/app/app.routes.ts\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: '/projects', pathMatch: 'full' },\r\n  { \r\n    path: 'projects', \r\n    loadComponent: () => import('./pages/projects/projects.component')\r\n      .then(m => m.ProjectsComponent)\r\n  },\r\n  { \r\n    path: 'project/:id', \r\n    loadComponent: () => import('./pages/project-detail/project-detail.component')\r\n      .then(m => m.ProjectDetailComponent)\r\n  }\r\n];\n"})}),"\n",(0,o.jsx)(n.h3,{id:"navigation",children:"Navigation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// In component\r\nimport { Router } from '@angular/router';\r\n\r\nexport class ExampleComponent {\r\n  private router = inject(Router);\r\n  \r\n  navigateToProject(projectId: string) {\r\n    this.router.navigate(['/project', projectId]);\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'\x3c!-- In template --\x3e\r\n<a routerLink="/projects">Projects</a>\r\n<a [routerLink]="[\'/project\', project.id]">{{project.name}}</a>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"route-parameters",children:"Route Parameters"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// In component\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nexport class ProjectDetailComponent {\r\n  private route = inject(ActivatedRoute);\r\n  \r\n  ngOnInit() {\r\n    const projectId = this.route.snapshot.paramMap.get('id');\r\n    // Or reactive: this.route.paramMap.subscribe(params => ...)\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"modules-vs-standalone-components",children:"Modules vs Standalone Components"}),"\n",(0,o.jsxs)(n.p,{children:["TimeLock uses ",(0,o.jsx)(n.strong,{children:"standalone components"})," (Angular 14+), which is the modern approach."]}),"\n",(0,o.jsx)(n.h3,{id:"traditional-ngmodule-approach-old",children:"Traditional NgModule Approach (Old)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@NgModule({\r\n  declarations: [AppComponent, TodoComponent],\r\n  imports: [BrowserModule, FormsModule],\r\n  providers: [TodoService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\n"})}),"\n",(0,o.jsx)(n.h3,{id:"standalone-components-modern---used-in-timelock",children:"Standalone Components (Modern - Used in TimeLock)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Component({\r\n  selector: 'app-todo',\r\n  standalone: true,                    // No module needed!\r\n  imports: [CommonModule, FormsModule], // Direct imports\r\n  template: `...`\r\n})\r\nexport class TodoComponent { }\r\n\r\n// Bootstrap directly\r\nbootstrapApplication(App, {\r\n  providers: [\r\n    provideRouter(routes),\r\n    // other providers\r\n  ]\r\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"benefits-of-standalone-components",children:"Benefits of Standalone Components"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Simpler"})," - No need to manage NgModules"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Better tree-shaking"})," - Unused code is eliminated"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Lazy loading"})," - Components can be loaded on-demand"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Easier testing"})," - Less boilerplate"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"typescript-integration",children:"TypeScript Integration"}),"\n",(0,o.jsx)(n.p,{children:"Angular is built with TypeScript, providing strong typing and better developer experience."}),"\n",(0,o.jsx)(n.h3,{id:"interface-definitions",children:"Interface Definitions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// From src/app/models/todo.model.ts\r\nexport interface Todo {\r\n  id: string;\r\n  title: string;\r\n  description?: string;        // Optional property\r\n  completed: boolean;\r\n  priority: 'low' | 'medium' | 'high';  // Union types\r\n  dueDate?: Date;\r\n  tags?: string[];\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"type-safety-in-components",children:"Type Safety in Components"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export class TodoComponent {\r\n  @Input() todo!: Todo;  // Strongly typed input\r\n  \r\n  updateTodo(updates: Partial<Todo>) {  // Partial type utility\r\n    // TypeScript ensures type safety\r\n    this.todo = { ...this.todo, ...updates };\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"generic-types",children:"Generic Types"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Generic service method\r\nasync loadData<T>(key: string): Promise<T[]> {\r\n  // Implementation\r\n}\r\n\r\n// Usage\r\nconst todos = await this.loadData<Todo>('todos');\r\nconst projects = await this.loadData<Project>('projects');\n"})}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"Now that you understand Angular fundamentals, continue with:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/Timelock/project-architecture/",children:"Project Architecture"})," - See how these concepts work together in TimeLock"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/Timelock/getting-started/",children:"Getting Started"})," - Set up your development environment"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/Timelock/code-structure/",children:"Code Structure"})," - Explore the actual codebase"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);