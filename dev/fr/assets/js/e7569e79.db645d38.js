"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[2248],{8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(6540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},9754:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Portfolio/NoteApp/introduction","title":"Notes App - Project Introduction","description":"Overview","source":"@site/docs/Portfolio/NoteApp/01-introduction.md","sourceDirName":"Portfolio/NoteApp","slug":"/Portfolio/NoteApp/introduction","permalink":"/dev/fr/docs/Portfolio/NoteApp/introduction","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Score Logging Implementation Guide","permalink":"/dev/fr/docs/Portfolio/CodeTyper/Feature/SCORE_LOGGING_IMPLEMENTATION"},"next":{"title":"Authentication System","permalink":"/dev/fr/docs/Portfolio/NoteApp/Api/authentication"}}');var o=t(4848),s=t(8453);const r={},c="Notes App - Project Introduction",l={},a=[{value:"Overview",id:"overview",level:2},{value:"What This Application Does",id:"what-this-application-does",level:2},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Frontend (Client Tier)",id:"frontend-client-tier",level:3},{value:"Backend (Application Tier)",id:"backend-application-tier",level:3},{value:"Database (Data Tier)",id:"database-data-tier",level:3},{value:"Key Technologies Explained",id:"key-technologies-explained",level:2},{value:"MERN Stack Components",id:"mern-stack-components",level:3},{value:"Supporting Technologies",id:"supporting-technologies",level:3},{value:"Project Structure",id:"project-structure",level:2},{value:"How the Components Work Together",id:"how-the-components-work-together",level:2},{value:"Development and Deployment",id:"development-and-deployment",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"notes-app---project-introduction",children:"Notes App - Project Introduction"})}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"The Notes App is a full-stack web application that allows users to create, manage, and organize personal notes. Built using the MERN stack (MongoDB, Express.js, React, Node.js), this application demonstrates modern web development practices with containerized deployment using Docker."}),"\n",(0,o.jsx)(n.h2,{id:"what-this-application-does",children:"What This Application Does"}),"\n",(0,o.jsx)(n.p,{children:"The Notes App provides a complete note-taking solution where users can:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Create accounts and authenticate"})," - Users sign up with their name, email, and password to access their personal notes"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Manage notes"})," - Create, edit, delete, and organize notes with titles, content, and tags"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Search functionality"})," - Find specific notes by searching through titles and content"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Pin important notes"})," - Mark important notes to keep them at the top of the list"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Secure access"})," - All user data is protected with JWT (JSON Web Token) authentication"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,o.jsxs)(n.p,{children:["This is a ",(0,o.jsx)(n.strong,{children:"three-tier application"})," with clear separation of concerns:"]}),"\n",(0,o.jsx)(n.h3,{id:"frontend-client-tier",children:"Frontend (Client Tier)"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Technology"}),": React.js with Vite build tool"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Location"}),": ",(0,o.jsx)(n.code,{children:"frontend/notes-app/"})," directory"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Purpose"}),": Provides the user interface that runs in web browsers"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Port"}),": Runs on port 5173 during development"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"backend-application-tier",children:"Backend (Application Tier)"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Technology"}),": Node.js with Express.js framework"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Location"}),": ",(0,o.jsx)(n.code,{children:"backend/"})," directory"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Purpose"}),": Handles business logic, API endpoints, and authentication"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Port"}),": Runs on port 8000"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"database-data-tier",children:"Database (Data Tier)"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Technology"}),": MongoDB"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Purpose"}),": Stores user accounts and notes data"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Port"}),": Runs on port 27017"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"key-technologies-explained",children:"Key Technologies Explained"}),"\n",(0,o.jsx)(n.h3,{id:"mern-stack-components",children:"MERN Stack Components"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"MongoDB"}),": A NoSQL database that stores data in flexible, JSON-like documents. Perfect for storing notes with varying content and tags."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Express.js"}),": A minimal web framework for Node.js that handles HTTP requests, routing, and middleware. It creates the REST API that the frontend communicates with."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"React"}),": A JavaScript library for building user interfaces. It creates interactive web pages that update dynamically without full page reloads."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Node.js"}),": A JavaScript runtime that allows running JavaScript on the server side, enabling full-stack JavaScript development."]}),"\n",(0,o.jsx)(n.h3,{id:"supporting-technologies",children:"Supporting Technologies"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"JWT (JSON Web Tokens)"}),": Used for secure user authentication. When users log in, they receive a token that proves their identity for subsequent requests."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Docker"}),": Containerization technology that packages the application and its dependencies into portable containers, ensuring consistent deployment across different environments."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Vite"}),": A modern build tool for the frontend that provides fast development server and optimized production builds."]}),"\n",(0,o.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,o.jsxs)(n.p,{children:["The application follows a ",(0,o.jsx)(n.strong,{children:"monorepo structure"})," with clear separation:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"notes-app/\r\n\u251c\u2500\u2500 backend/           # Server-side application\r\n\u251c\u2500\u2500 frontend/          # Client-side application\r\n\u251c\u2500\u2500 docker-compose.yml # Container orchestration\r\n\u2514\u2500\u2500 README.md         # Project documentation\n"})}),"\n",(0,o.jsx)(n.h2,{id:"how-the-components-work-together",children:"How the Components Work Together"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"User Interaction"}),": Users interact with the React frontend through their web browser"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"API Communication"}),": The frontend sends HTTP requests to the Express.js backend API"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Authentication"}),": The backend validates user credentials and issues JWT tokens"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Data Storage"}),": The backend communicates with MongoDB to store and retrieve notes"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Response Flow"}),": Data flows back through the same path to update the user interface"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"development-and-deployment",children:"Development and Deployment"}),"\n",(0,o.jsxs)(n.p,{children:["The application uses ",(0,o.jsx)(n.strong,{children:"Docker Compose"})," to orchestrate multiple services:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Frontend container serving the React application"}),"\n",(0,o.jsx)(n.li,{children:"Backend container running the Node.js API"}),"\n",(0,o.jsx)(n.li,{children:"MongoDB container for data persistence"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This containerized approach ensures that the application runs consistently across different development and production environments."}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"This introduction provides the foundation for understanding the Notes App. The following documentation will dive deeper into each component:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Backend API architecture and endpoints"}),"\n",(0,o.jsx)(n.li,{children:"Frontend React components and user interface"}),"\n",(0,o.jsx)(n.li,{children:"Database models and data relationships"}),"\n",(0,o.jsx)(n.li,{children:"Authentication and security implementation"}),"\n",(0,o.jsx)(n.li,{children:"Deployment and containerization details"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);