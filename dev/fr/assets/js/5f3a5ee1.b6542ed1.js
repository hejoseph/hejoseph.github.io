"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[930],{3972:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"QA-Testing/Test-Design-Coverage/state-transition","title":"Test Case Design Technique: State Transition Testing","description":"Overview","source":"@site/docs/QA-Testing/3-Test-Design-Coverage/4-state-transition.md","sourceDirName":"QA-Testing/3-Test-Design-Coverage","slug":"/QA-Testing/Test-Design-Coverage/state-transition","permalink":"/dev/fr/docs/QA-Testing/Test-Design-Coverage/state-transition","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Test Case Design Technique: Decision Table Testing","permalink":"/dev/fr/docs/QA-Testing/Test-Design-Coverage/decision-table"},"next":{"title":"Test Case Design Technique: Pairwise Testing","permalink":"/dev/fr/docs/QA-Testing/Test-Design-Coverage/pairwise-testing"}}');var i=t(4848),r=t(8453);const d={},l="Test Case Design Technique: State Transition Testing",c={},a=[{value:"Overview",id:"overview",level:2},{value:"Why Use State Transition Testing?",id:"why-use-state-transition-testing",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Example: ATM Card Authentication",id:"example-atm-card-authentication",level:2},{value:"States:",id:"states",level:3},{value:"Events:",id:"events",level:3},{value:"State Transition Table",id:"state-transition-table",level:3},{value:"State Diagram",id:"state-diagram",level:3},{value:"Test Scenarios",id:"test-scenarios",level:2},{value:"When to Use State Transition Testing",id:"when-to-use-state-transition-testing",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Summary",id:"summary",level:2},{value:"Quick Template",id:"quick-template",level:2}];function h(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"test-case-design-technique-state-transition-testing",children:"Test Case Design Technique: State Transition Testing"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"State Transition Testing"})," is a black-box test design technique used when the system behaves differently based on its ",(0,i.jsx)(n.strong,{children:"current state"})," and ",(0,i.jsx)(n.strong,{children:"events or inputs"})," that cause it to transition to another state."]}),"\n",(0,i.jsxs)(n.p,{children:["This technique is especially useful for ",(0,i.jsx)(n.strong,{children:"workflow-based systems"}),", ",(0,i.jsx)(n.strong,{children:"user interfaces"}),", ",(0,i.jsx)(n.strong,{children:"authentication systems"}),", and anything involving ",(0,i.jsx)(n.strong,{children:"finite state machines"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"why-use-state-transition-testing",children:"Why Use State Transition Testing?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Helps test systems with ",(0,i.jsx)(n.strong,{children:"sequential logic"})," and ",(0,i.jsx)(n.strong,{children:"state dependencies"})]}),"\n",(0,i.jsxs)(n.li,{children:["Ensures coverage of all ",(0,i.jsx)(n.strong,{children:"valid and invalid transitions"})]}),"\n",(0,i.jsx)(n.li,{children:"Captures real-world behavior better than input/output-only testing"}),"\n",(0,i.jsx)(n.li,{children:"Identifies missing or undefined states or transitions"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State"}),': A condition or situation of the system (e.g., "Logged In", "Locked").']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transition"}),": A change from one state to another triggered by an event or input."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Event/Input"}),': The trigger that causes a transition (e.g., "Enter Password").']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Action"}),": The result or behavior that occurs during the transition."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"example-atm-card-authentication",children:"Example: ATM Card Authentication"}),"\n",(0,i.jsx)(n.h3,{id:"states",children:"States:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Idle"}),"\n",(0,i.jsx)(n.li,{children:"Card Inserted"}),"\n",(0,i.jsx)(n.li,{children:"PIN Entered"}),"\n",(0,i.jsx)(n.li,{children:"Authenticated"}),"\n",(0,i.jsx)(n.li,{children:"Card Locked"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"events",children:"Events:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Insert card"}),"\n",(0,i.jsx)(n.li,{children:"Enter PIN"}),"\n",(0,i.jsx)(n.li,{children:"Enter wrong PIN 3 times"}),"\n",(0,i.jsx)(n.li,{children:"Eject card"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"state-transition-table",children:"State Transition Table"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Current State"}),(0,i.jsx)(n.th,{children:"Event"}),(0,i.jsx)(n.th,{children:"Next State"}),(0,i.jsx)(n.th,{children:"Action"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Idle"}),(0,i.jsx)(n.td,{children:"Insert card"}),(0,i.jsx)(n.td,{children:"Card Inserted"}),(0,i.jsx)(n.td,{children:"Prompt for PIN"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Card Inserted"}),(0,i.jsx)(n.td,{children:"Enter valid PIN"}),(0,i.jsx)(n.td,{children:"Authenticated"}),(0,i.jsx)(n.td,{children:"Show main menu"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Card Inserted"}),(0,i.jsx)(n.td,{children:"Enter wrong PIN"}),(0,i.jsx)(n.td,{children:"Card Inserted"}),(0,i.jsx)(n.td,{children:"Show error"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Card Inserted"}),(0,i.jsx)(n.td,{children:"3 wrong PINs"}),(0,i.jsx)(n.td,{children:"Card Locked"}),(0,i.jsx)(n.td,{children:"Lock card, keep card inside"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Any State"}),(0,i.jsx)(n.td,{children:"Eject card"}),(0,i.jsx)(n.td,{children:"Idle"}),(0,i.jsx)(n.td,{children:"Return card"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"state-diagram",children:"State Diagram"}),"\n",(0,i.jsx)(n.p,{children:"(Use a diagramming tool to visualize if needed)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[Idle] \u2192 Insert Card \u2192 [Card Inserted]\r\n  \u2514\u2500\u2500 Eject \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n[Card Inserted] \u2192 Enter Valid PIN \u2192 [Authenticated]\r\n       \u2193 Wrong PIN \xd73\r\n   [Card Locked]\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"test-scenarios",children:"Test Scenarios"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Valid Flow"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Insert card \u2192 Enter correct PIN \u2192 Authenticated"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Invalid PIN Flow"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Insert card \u2192 Enter wrong PIN \xd73 \u2192 Card Locked"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Cancel Midway"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Insert card \u2192 Eject card \u2192 Idle"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Edge Case"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Insert card \u2192 Enter wrong PIN twice \u2192 Correct PIN \u2192 Authenticated"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"when-to-use-state-transition-testing",children:"When to Use State Transition Testing"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Systems with ",(0,i.jsx)(n.strong,{children:"workflow or status-based logic"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Login/authentication"})," modules"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Shopping carts"}),", ",(0,i.jsx)(n.strong,{children:"order processing"}),", ",(0,i.jsx)(n.strong,{children:"ticket booking"})]}),"\n",(0,i.jsxs)(n.li,{children:["Devices with ",(0,i.jsx)(n.strong,{children:"mode-based behavior"})," (e.g., mobile phone: Locked \u2192 Unlocked \u2192 Sleep)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use state diagrams to visualize system behavior"}),"\n",(0,i.jsxs)(n.li,{children:["Ensure test cases ",(0,i.jsx)(n.strong,{children:"cover all transitions"}),', not just the "happy path"']}),"\n",(0,i.jsxs)(n.li,{children:["Include ",(0,i.jsx)(n.strong,{children:"negative transitions"})," (e.g., invalid input, unauthorized states)"]}),"\n",(0,i.jsxs)(n.li,{children:["Test ",(0,i.jsx)(n.strong,{children:"illegal transitions"})," and system responses to unexpected states"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"State Transition Testing"})," helps QA engineers model the dynamic behavior of systems where actions depend on history or system state. It ensures that the software behaves correctly across ",(0,i.jsx)(n.strong,{children:"all possible flows"})," and ",(0,i.jsx)(n.strong,{children:"not just one-off conditions"}),"."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u201cIf your system can be in multiple states, don\u2019t just test the inputs\u2014test the journeys.\u201d"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"quick-template",children:"Quick Template"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Test Case ID"}),(0,i.jsx)(n.th,{children:"Current State"}),(0,i.jsx)(n.th,{children:"Input/Event"}),(0,i.jsx)(n.th,{children:"Expected Next State"}),(0,i.jsx)(n.th,{children:"Expected Action"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"TC01"}),(0,i.jsx)(n.td,{children:"Idle"}),(0,i.jsx)(n.td,{children:"Insert card"}),(0,i.jsx)(n.td,{children:"Card Inserted"}),(0,i.jsx)(n.td,{children:"Prompt for PIN"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"TC02"}),(0,i.jsx)(n.td,{children:"Card Inserted"}),(0,i.jsx)(n.td,{children:"Wrong PIN x3"}),(0,i.jsx)(n.td,{children:"Card Locked"}),(0,i.jsx)(n.td,{children:"Card retained, access denied"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"TC03"}),(0,i.jsx)(n.td,{children:"Authenticated"}),(0,i.jsx)(n.td,{children:"Eject card"}),(0,i.jsx)(n.td,{children:"Idle"}),(0,i.jsx)(n.td,{children:"Card returned"})]})]})]})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>l});var s=t(6540);const i={},r=s.createContext(i);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);