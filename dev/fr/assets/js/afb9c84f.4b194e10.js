"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[5070],{503:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Portfolio/Timelock/code-structure/README","title":"Code Structure","description":"This guide provides a detailed walkthrough of TimeLock\'s codebase, explaining how files are organized and how different parts work together.","source":"@site/docs/Portfolio/Timelock/code-structure/README.md","sourceDirName":"Portfolio/Timelock/code-structure","slug":"/Portfolio/Timelock/code-structure/","permalink":"/dev/fr/docs/Portfolio/Timelock/code-structure/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Translation Performance Case Study","permalink":"/dev/fr/docs/Portfolio/Timelock/bug/translation_performance_problem"},"next":{"title":"Development Guide","permalink":"/dev/fr/docs/Portfolio/Timelock/development-guide/"}}');var o=r(4848),s=r(8453);const i={},a="Code Structure",d={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Directory Structure",id:"directory-structure",level:2},{value:"Application Bootstrap",id:"application-bootstrap",level:2},{value:"Entry Point: <code>main.ts</code>",id:"entry-point-maints",level:3},{value:"Application Configuration: <code>app.config.ts</code>",id:"application-configuration-appconfigts",level:3},{value:"Root Component: <code>app.ts</code>",id:"root-component-appts",level:3},{value:"Component Architecture",id:"component-architecture",level:2},{value:"Component Categories",id:"component-categories",level:3},{value:"Example: TodoItem Component",id:"example-todoitem-component",level:3},{value:"Component Communication Patterns",id:"component-communication-patterns",level:3},{value:"Service Layer",id:"service-layer",level:2},{value:"Service Organization",id:"service-organization",level:3},{value:"Example: TodoService Structure",id:"example-todoservice-structure",level:3},{value:"IndexedDB Service",id:"indexeddb-service",level:3},{value:"Models and Types",id:"models-and-types",level:2},{value:"Todo Model",id:"todo-model",level:3},{value:"Project Model",id:"project-model",level:3},{value:"Routing System",id:"routing-system",level:2},{value:"Route Configuration",id:"route-configuration",level:3},{value:"Route Parameters",id:"route-parameters",level:3},{value:"Styling Architecture",id:"styling-architecture",level:2},{value:"Global Styles",id:"global-styles",level:3},{value:"Component Styles",id:"component-styles",level:3},{value:"Testing Structure",id:"testing-structure",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"E2E Tests",id:"e2e-tests",level:3},{value:"Next Steps",id:"next-steps",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"code-structure",children:"Code Structure"})}),"\n",(0,o.jsx)(n.p,{children:"This guide provides a detailed walkthrough of TimeLock's codebase, explaining how files are organized and how different parts work together."}),"\n",(0,o.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#directory-structure",children:"Directory Structure"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#application-bootstrap",children:"Application Bootstrap"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#component-architecture",children:"Component Architecture"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#service-layer",children:"Service Layer"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#models-and-types",children:"Models and Types"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#routing-system",children:"Routing System"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#styling-architecture",children:"Styling Architecture"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#testing-structure",children:"Testing Structure"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"src/\r\n\u251c\u2500\u2500 app/\r\n\u2502   \u251c\u2500\u2500 components/              # Reusable UI components\r\n\u2502   \u2502   \u251c\u2500\u2500 auto-plan-dialog/\r\n\u2502   \u2502   \u251c\u2500\u2500 confirmation-dialog/\r\n\u2502   \u2502   \u251c\u2500\u2500 import-dialog/\r\n\u2502   \u2502   \u251c\u2500\u2500 parent-selection-dialog/\r\n\u2502   \u2502   \u251c\u2500\u2500 task-editor/\r\n\u2502   \u2502   \u251c\u2500\u2500 todo-filters/\r\n\u2502   \u2502   \u251c\u2500\u2500 todo-form/\r\n\u2502   \u2502   \u2514\u2500\u2500 todo-item/\r\n\u2502   \u251c\u2500\u2500 pages/                   # Route-level components\r\n\u2502   \u2502   \u251c\u2500\u2500 calendar/\r\n\u2502   \u2502   \u251c\u2500\u2500 project-detail/\r\n\u2502   \u2502   \u251c\u2500\u2500 projects/\r\n\u2502   \u2502   \u251c\u2500\u2500 search/\r\n\u2502   \u2502   \u251c\u2500\u2500 timetable/\r\n\u2502   \u2502   \u2514\u2500\u2500 upcoming/\r\n\u2502   \u251c\u2500\u2500 services/                # Business logic and data\r\n\u2502   \u2502   \u251c\u2500\u2500 confirmation.service.ts\r\n\u2502   \u2502   \u251c\u2500\u2500 indexeddb.service.ts\r\n\u2502   \u2502   \u251c\u2500\u2500 project.service.ts\r\n\u2502   \u2502   \u251c\u2500\u2500 recurring-tasks.service.ts\r\n\u2502   \u2502   \u251c\u2500\u2500 tags.service.ts\r\n\u2502   \u2502   \u2514\u2500\u2500 todo.service.ts\r\n\u2502   \u251c\u2500\u2500 models/                  # TypeScript interfaces\r\n\u2502   \u2502   \u251c\u2500\u2500 project.model.ts\r\n\u2502   \u2502   \u2514\u2500\u2500 todo.model.ts\r\n\u2502   \u251c\u2500\u2500 task-item/              # Legacy components (being refactored)\r\n\u2502   \u251c\u2500\u2500 task-list/\r\n\u2502   \u251c\u2500\u2500 app.config.ts           # Application configuration\r\n\u2502   \u251c\u2500\u2500 app.routes.ts           # Route definitions\r\n\u2502   \u251c\u2500\u2500 app.ts                  # Root component\r\n\u2502   \u2514\u2500\u2500 app.css                 # Root component styles\r\n\u251c\u2500\u2500 assets/                     # Static assets\r\n\u2502   \u251c\u2500\u2500 calendar_logo.svg\r\n\u2502   \u251c\u2500\u2500 logo.svg\r\n\u2502   \u251c\u2500\u2500 timetable_logo.svg\r\n\u2502   \u2514\u2500\u2500 upcoming_logo.svg\r\n\u251c\u2500\u2500 index.html                  # Main HTML file\r\n\u251c\u2500\u2500 main.ts                     # Application entry point\r\n\u2514\u2500\u2500 styles.css                  # Global styles\n"})}),"\n",(0,o.jsx)(n.h2,{id:"application-bootstrap",children:"Application Bootstrap"}),"\n",(0,o.jsxs)(n.h3,{id:"entry-point-maints",children:["Entry Point: ",(0,o.jsx)(n.code,{children:"main.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { App } from './app/app';\r\n\r\nbootstrapApplication(App, appConfig)\r\n  .catch((err) => console.error(err));\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Key Points:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Uses ",(0,o.jsx)(n.code,{children:"bootstrapApplication()"})," for standalone components"]}),"\n",(0,o.jsxs)(n.li,{children:["No ",(0,o.jsx)(n.code,{children:"AppModule"})," needed (modern Angular approach)"]}),"\n",(0,o.jsxs)(n.li,{children:["Configuration is externalized to ",(0,o.jsx)(n.code,{children:"app.config.ts"})]}),"\n"]}),"\n",(0,o.jsxs)(n.h3,{id:"application-configuration-appconfigts",children:["Application Configuration: ",(0,o.jsx)(n.code,{children:"app.config.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ApplicationConfig, provideBrowserGlobalErrorListeners, provideZoneChangeDetection } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\nimport { routes } from './app.routes';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideBrowserGlobalErrorListeners(),\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes)\r\n  ]\r\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Configuration Features:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Global error handling"})," - Catches unhandled errors"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Zone.js optimization"})," - Event coalescing for performance"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Router configuration"})," - Enables routing functionality"]}),"\n"]}),"\n",(0,o.jsxs)(n.h3,{id:"root-component-appts",children:["Root Component: ",(0,o.jsx)(n.code,{children:"app.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'@Component({\r\n  selector: \'app-root\',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterOutlet, RouterModule],\r\n  template: `\r\n    <div class="app-container">\r\n      \x3c!-- Sidebar Toggle Button --\x3e\r\n      <button class="sidebar-toggle" (click)="toggleSidebar()">\r\n        \x3c!-- Hamburger menu --\x3e\r\n      </button>\r\n\r\n      \x3c!-- Sidebar Navigation --\x3e\r\n      <aside class="sidebar" [class.open]="sidebarOpen()">\r\n        <div class="sidebar-header">\r\n          <h1 class="app-title">TimeLock</h1>\r\n        </div>\r\n        \r\n        <nav class="sidebar-nav">\r\n          \x3c!-- Navigation links --\x3e\r\n        </nav>\r\n        \r\n        \x3c!-- Projects section --\x3e\r\n        <div class="projects-section">\r\n          \x3c!-- Project list --\x3e\r\n        </div>\r\n      </aside>\r\n\r\n      \x3c!-- Main Content --\x3e\r\n      <main class="main-content">\r\n        <router-outlet></router-outlet>\r\n      </main>\r\n    </div>\r\n  `\r\n})\r\nexport class App {\r\n  private projectService = inject(ProjectService);\r\n  \r\n  sidebarOpen = signal(false);\r\n  projects = this.projectService.activeProjects;\r\n  currentProject = this.projectService.currentProject;\r\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Root Component Features:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Layout structure"})," - Sidebar + main content"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Navigation management"})," - Sidebar toggle and routing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Project integration"})," - Displays project list"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Responsive design"})," - Mobile-friendly sidebar"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"component-architecture",children:"Component Architecture"}),"\n",(0,o.jsx)(n.h3,{id:"component-categories",children:"Component Categories"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"1. Page Components"})," (",(0,o.jsx)(n.code,{children:"src/app/pages/"}),")"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Route-level components"}),"\n",(0,o.jsx)(n.li,{children:"Container components that manage state"}),"\n",(0,o.jsx)(n.li,{children:"Coordinate multiple child components"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"2. Feature Components"})," (",(0,o.jsx)(n.code,{children:"src/app/components/"}),")"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Reusable UI components"}),"\n",(0,o.jsx)(n.li,{children:"Presentation components with inputs/outputs"}),"\n",(0,o.jsx)(n.li,{children:"Focused on specific functionality"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"3. Dialog Components"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Modal dialogs for user interactions"}),"\n",(0,o.jsx)(n.li,{children:"Confirmation dialogs, forms, selection dialogs"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-todoitem-component",children:"Example: TodoItem Component"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// src/app/components/todo-item/todo-item.component.ts\r\n@Component({\r\n  selector: 'app-todo-item',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, TaskEditorComponent],\r\n  templateUrl: './todo-item.component.html',\r\n  styleUrls: ['./todo-item.component.css']\r\n})\r\nexport class TodoItemComponent {\r\n  @Input() todo!: Todo;\r\n  @Input() depth: number = 0;\r\n  @Input() showProject: boolean = false;\r\n  \r\n  @Output() todoUpdated = new EventEmitter<Todo>();\r\n  @Output() todoDeleted = new EventEmitter<string>();\r\n  @Output() subtaskAdded = new EventEmitter<{parentId: string, subtask: Omit<Todo, 'id'>}>();\r\n  \r\n  // Local state\r\n  isEditing = signal(false);\r\n  isExpanded = signal(false);\r\n  showSubtasks = signal(true);\r\n  \r\n  // Computed properties\r\n  hasSubtasks = computed(() => this.todo.subtasks.length > 0);\r\n  completionPercentage = computed(() => {\r\n    if (!this.hasSubtasks()) return 0;\r\n    const completed = this.todo.subtasks.filter(t => t.completed).length;\r\n    return (completed / this.todo.subtasks.length) * 100;\r\n  });\r\n  \r\n  // Methods\r\n  toggleComplete() {\r\n    this.todoUpdated.emit({\r\n      ...this.todo,\r\n      completed: !this.todo.completed,\r\n      updatedAt: new Date()\r\n    });\r\n  }\r\n  \r\n  startEditing() {\r\n    this.isEditing.set(true);\r\n  }\r\n  \r\n  saveEdit(updatedTodo: Todo) {\r\n    this.isEditing.set(false);\r\n    this.todoUpdated.emit(updatedTodo);\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Component Structure:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Inputs"})," - Data from parent components"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Outputs"})," - Events to parent components"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Local state"})," - Component-specific state with signals"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Computed properties"})," - Derived state"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Methods"})," - Event handlers and business logic"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"component-communication-patterns",children:"Component Communication Patterns"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"1. Parent-Child Communication"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// Parent template\r\n<app-todo-item \r\n  [todo]="todo" \r\n  [depth]="0"\r\n  (todoUpdated)="handleTodoUpdate($event)"\r\n  (todoDeleted)="handleTodoDelete($event)">\r\n</app-todo-item>\r\n\r\n// Parent component\r\nhandleTodoUpdate(updatedTodo: Todo) {\r\n  this.todoService.updateTodo(updatedTodo.id, updatedTodo);\r\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"2. Service-Based Communication"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Components communicate through shared services\r\nexport class ComponentA {\r\n  private todoService = inject(TodoService);\r\n  \r\n  addTodo(todo: Todo) {\r\n    this.todoService.addTodo(todo);  // Updates signal\r\n  }\r\n}\r\n\r\nexport class ComponentB {\r\n  private todoService = inject(TodoService);\r\n  \r\n  todos = this.todoService.todos;  // Reactive to changes\r\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"service-layer",children:"Service Layer"}),"\n",(0,o.jsx)(n.h3,{id:"service-organization",children:"Service Organization"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Core Services:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"TodoService"})," - Task management"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ProjectService"})," - Project management"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"IndexedDBService"})," - Data persistence"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Utility Services:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"TagsService"})," - Tag management"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"RecurringTasksService"})," - Recurring task logic"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ConfirmationService"})," - Dialog management"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-todoservice-structure",children:"Example: TodoService Structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Injectable({ providedIn: 'root' })\r\nexport class TodoService {\r\n  private indexedDBService = inject(IndexedDBService);\r\n  \r\n  // Private signals (writable)\r\n  private todosSignal = signal<Todo[]>([]);\r\n  private filterSignal = signal<FilterType>('all');\r\n  private searchTermSignal = signal<string>('');\r\n  private sortTypeSignal = signal<SortType>('created');\r\n  \r\n  // Public signals (readonly)\r\n  todos = this.todosSignal.asReadonly();\r\n  filter = this.filterSignal.asReadonly();\r\n  searchTerm = this.searchTermSignal.asReadonly();\r\n  sortType = this.sortTypeSignal.asReadonly();\r\n  \r\n  // Computed signals\r\n  filteredTodos = computed(() => {\r\n    let todos = this.todosSignal();\r\n    const filter = this.filterSignal();\r\n    const searchTerm = this.searchTermSignal().toLowerCase();\r\n    \r\n    // Apply filters\r\n    todos = this.applyFilter(todos, filter);\r\n    todos = this.applySearch(todos, searchTerm);\r\n    todos = this.applySorting(todos, this.sortTypeSignal());\r\n    \r\n    return todos;\r\n  });\r\n  \r\n  activeTodos = computed(() => \r\n    this.todosSignal().filter(todo => !todo.completed && !todo.archived)\r\n  );\r\n  \r\n  completedTodos = computed(() => \r\n    this.todosSignal().filter(todo => todo.completed)\r\n  );\r\n  \r\n  // CRUD operations\r\n  async addTodo(todoData: Omit<Todo, 'id' | 'createdAt' | 'updatedAt'>): Promise<string> {\r\n    const newTodo: Todo = {\r\n      ...todoData,\r\n      id: this.generateId(),\r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n      subtasks: [],\r\n      isExpanded: false,\r\n      order: this.getNextOrder()\r\n    };\r\n    \r\n    this.todosSignal.update(todos => [...todos, newTodo]);\r\n    await this.saveTodos();\r\n    return newTodo.id;\r\n  }\r\n  \r\n  async updateTodo(id: string, updates: Partial<Todo>): Promise<void> {\r\n    this.todosSignal.update(todos =>\r\n      todos.map(todo =>\r\n        todo.id === id\r\n          ? { ...todo, ...updates, updatedAt: new Date() }\r\n          : todo\r\n      )\r\n    );\r\n    await this.saveTodos();\r\n  }\r\n  \r\n  async deleteTodo(id: string): Promise<void> {\r\n    this.todosSignal.update(todos => \r\n      this.removeTodoRecursively(todos, id)\r\n    );\r\n    await this.saveTodos();\r\n  }\r\n  \r\n  // Business logic methods\r\n  async toggleComplete(id: string): Promise<void> {\r\n    const todo = this.findTodoById(id);\r\n    if (todo) {\r\n      await this.updateTodo(id, { completed: !todo.completed });\r\n    }\r\n  }\r\n  \r\n  async addSubtask(parentId: string, subtaskData: Omit<Todo, 'id'>): Promise<string> {\r\n    // Implementation for adding subtasks\r\n  }\r\n  \r\n  // Utility methods\r\n  private generateId(): string {\r\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n  }\r\n  \r\n  private async saveTodos(): Promise<void> {\r\n    await this.indexedDBService.saveTodos(this.todosSignal());\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Service Patterns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Signal-based state"})," - Reactive state management"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Computed derived state"})," - Automatic updates"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Async operations"})," - Promise-based API"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Error handling"})," - Try-catch blocks"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Data persistence"})," - Automatic saving"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"indexeddb-service",children:"IndexedDB Service"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Injectable({ providedIn: 'root' })\r\nexport class IndexedDBService {\r\n  private dbName = 'TimeLockDB';\r\n  private version = 1;\r\n  private db: IDBDatabase | null = null;\r\n  \r\n  async initDB(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      const request = indexedDB.open(this.dbName, this.version);\r\n      \r\n      request.onerror = () => reject(request.error);\r\n      request.onsuccess = () => {\r\n        this.db = request.result;\r\n        resolve();\r\n      };\r\n      \r\n      request.onupgradeneeded = (event) => {\r\n        const db = (event.target as IDBOpenDBRequest).result;\r\n        this.createObjectStores(db);\r\n      };\r\n    });\r\n  }\r\n  \r\n  private createObjectStores(db: IDBDatabase): void {\r\n    // Create todos store\r\n    if (!db.objectStoreNames.contains('todos')) {\r\n      const todosStore = db.createObjectStore('todos', { keyPath: 'id' });\r\n      todosStore.createIndex('projectId', 'projectId', { unique: false });\r\n      todosStore.createIndex('dueDate', 'dueDate', { unique: false });\r\n    }\r\n    \r\n    // Create projects store\r\n    if (!db.objectStoreNames.contains('projects')) {\r\n      db.createObjectStore('projects', { keyPath: 'id' });\r\n    }\r\n  }\r\n  \r\n  async saveTodos(todos: Todo[]): Promise<void> {\r\n    if (!this.db) await this.initDB();\r\n    \r\n    const transaction = this.db!.transaction(['todos'], 'readwrite');\r\n    const store = transaction.objectStore('todos');\r\n    \r\n    // Clear existing data\r\n    await store.clear();\r\n    \r\n    // Add all todos\r\n    for (const todo of todos) {\r\n      await store.add(todo);\r\n    }\r\n  }\r\n  \r\n  async loadTodos(): Promise<Todo[]> {\r\n    if (!this.db) await this.initDB();\r\n    \r\n    const transaction = this.db!.transaction(['todos'], 'readonly');\r\n    const store = transaction.objectStore('todos');\r\n    const request = store.getAll();\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      request.onsuccess = () => resolve(request.result || []);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"models-and-types",children:"Models and Types"}),"\n",(0,o.jsx)(n.h3,{id:"todo-model",children:"Todo Model"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// src/app/models/todo.model.ts\r\nexport interface Todo {\r\n  id: string;\r\n  title: string;\r\n  description?: string;\r\n  completed: boolean;\r\n  archived: boolean;\r\n  priority: 'low' | 'medium' | 'high';\r\n  dueDate?: Date;\r\n  startDateTime?: Date;\r\n  endDateTime?: Date;\r\n  duration?: number;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  category?: string;\r\n  parentId?: string;\r\n  projectId?: string;\r\n  subtasks: Todo[];\r\n  isExpanded: boolean;\r\n  order: number;\r\n  isAutoPlanned?: boolean;\r\n  tags?: string[];\r\n  isRecurring?: boolean;\r\n  recurrencePattern?: RecurrencePattern;\r\n  originalTaskId?: string;\r\n  nextDueDate?: Date;\r\n}\r\n\r\nexport interface RecurrencePattern {\r\n  type: 'daily' | 'weekly' | 'monthly';\r\n  interval: number;\r\n  endDate?: Date;\r\n  maxOccurrences?: number;\r\n  currentOccurrences?: number;\r\n}\r\n\r\nexport interface Tag {\r\n  name: string;\r\n  color: string;\r\n  count?: number;\r\n}\r\n\r\nexport type FilterType = 'all' | 'active' | 'completed' | 'archived';\r\nexport type SortType = 'created' | 'priority' | 'dueDate' | 'alphabetical';\n"})}),"\n",(0,o.jsx)(n.h3,{id:"project-model",children:"Project Model"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// src/app/models/project.model.ts\r\nexport interface Project {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  color: string;\r\n  icon?: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  isArchived: boolean;\r\n  order: number;\r\n}\r\n\r\nexport interface ProjectStats {\r\n  totalTasks: number;\r\n  completedTasks: number;\r\n  activeTasks: number;\r\n  overdueTasks: number;\r\n  highPriorityTasks: number;\r\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Model Design Principles:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Immutable updates"})," - Always create new objects"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Optional properties"})," - Use ",(0,o.jsx)(n.code,{children:"?"})," for optional fields"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Union types"})," - Restrict values with type unions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Date objects"})," - Use Date type for temporal data"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Nested structures"})," - Support complex hierarchies"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"routing-system",children:"Routing System"}),"\n",(0,o.jsx)(n.h3,{id:"route-configuration",children:"Route Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// src/app/app.routes.ts\r\nimport { Routes } from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/projects',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'projects',\r\n    loadComponent: () => import('./pages/projects/projects.component')\r\n      .then(m => m.ProjectsComponent)\r\n  },\r\n  {\r\n    path: 'project/:id',\r\n    loadComponent: () => import('./pages/project-detail/project-detail.component')\r\n      .then(m => m.ProjectDetailComponent)\r\n  },\r\n  {\r\n    path: 'calendar',\r\n    loadComponent: () => import('./pages/calendar/calendar.component')\r\n      .then(m => m.CalendarComponent)\r\n  },\r\n  {\r\n    path: 'timetable',\r\n    loadComponent: () => import('./pages/timetable/timetable.component')\r\n      .then(m => m.TimetableComponent)\r\n  },\r\n  {\r\n    path: 'upcoming',\r\n    loadComponent: () => import('./pages/upcoming/upcoming.component')\r\n      .then(m => m.UpcomingComponent)\r\n  },\r\n  {\r\n    path: 'search',\r\n    loadComponent: () => import('./pages/search/search.component')\r\n      .then(m => m.SearchComponent)\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/projects'\r\n  }\r\n];\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Routing Features:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Lazy loading"})," - Components loaded on demand"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Route parameters"})," - Dynamic routes with parameters"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Redirects"})," - Default and fallback routes"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Wildcard routes"})," - Handle unknown routes"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"route-parameters",children:"Route Parameters"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// In ProjectDetailComponent\r\nexport class ProjectDetailComponent {\r\n  private route = inject(ActivatedRoute);\r\n  private projectService = inject(ProjectService);\r\n  \r\n  projectId = signal<string | null>(null);\r\n  project = computed(() => {\r\n    const id = this.projectId();\r\n    return id ? this.projectService.getProjectById(id) : null;\r\n  });\r\n  \r\n  ngOnInit() {\r\n    // Get route parameter\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    this.projectId.set(id);\r\n    \r\n    // Set current project\r\n    if (id) {\r\n      this.projectService.setCurrentProject(id);\r\n    }\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"styling-architecture",children:"Styling Architecture"}),"\n",(0,o.jsx)(n.h3,{id:"global-styles",children:"Global Styles"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"/* src/styles.css */\r\n:root {\r\n  /* Color variables */\r\n  --primary-color: #3b82f6;\r\n  --success-color: #10b981;\r\n  --warning-color: #f59e0b;\r\n  --danger-color: #ef4444;\r\n  \r\n  /* Spacing */\r\n  --spacing-xs: 0.25rem;\r\n  --spacing-sm: 0.5rem;\r\n  --spacing-md: 1rem;\r\n  --spacing-lg: 1.5rem;\r\n  --spacing-xl: 2rem;\r\n  \r\n  /* Typography */\r\n  --font-size-sm: 0.875rem;\r\n  --font-size-base: 1rem;\r\n  --font-size-lg: 1.125rem;\r\n  --font-size-xl: 1.25rem;\r\n}\r\n\r\n/* Reset and base styles */\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n  line-height: 1.6;\r\n  color: #374151;\r\n  background-color: #f9fafb;\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"component-styles",children:"Component Styles"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"/* Component-specific styles */\r\n.todo-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: var(--spacing-md);\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 0.5rem;\r\n  background: white;\r\n  margin-bottom: var(--spacing-sm);\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.todo-item:hover {\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.todo-item.completed {\r\n  opacity: 0.6;\r\n  text-decoration: line-through;\r\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Styling Patterns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"CSS Custom Properties"})," - Consistent design tokens"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"BEM methodology"})," - Clear class naming"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Component scoping"})," - Styles scoped to components"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Responsive design"})," - Mobile-first approach"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"testing-structure",children:"Testing Structure"}),"\n",(0,o.jsx)(n.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Component test example\r\ndescribe('TodoItemComponent', () => {\r\n  let component: TodoItemComponent;\r\n  let fixture: ComponentFixture<TodoItemComponent>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [TodoItemComponent]\r\n    }).compileComponents();\r\n\r\n    fixture = TestBed.createComponent(TodoItemComponent);\r\n    component = fixture.componentInstance;\r\n    component.todo = mockTodo;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('should emit todoUpdated when toggling complete', () => {\r\n    spyOn(component.todoUpdated, 'emit');\r\n    component.toggleComplete();\r\n    expect(component.todoUpdated.emit).toHaveBeenCalled();\r\n  });\r\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"e2e-tests",children:"E2E Tests"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// e2e/app.spec.ts\r\nimport { test, expect } from '@playwright/test';\r\n\r\ntest('should create a new todo', async ({ page }) => {\r\n  await page.goto('/');\r\n  \r\n  // Navigate to projects\r\n  await page.click('[data-testid=\"projects-link\"]');\r\n  \r\n  // Add new todo\r\n  await page.fill('[data-testid=\"todo-input\"]', 'New test todo');\r\n  await page.click('[data-testid=\"add-todo-button\"]');\r\n  \r\n  // Verify todo appears\r\n  await expect(page.locator('[data-testid=\"todo-item\"]')).toContainText('New test todo');\r\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"Now that you understand the code structure:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Start developing"})," - ",(0,o.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/Timelock/development-guide/",children:"Development Guide"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Learn the features"})," - ",(0,o.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/Timelock/features/",children:"Features Overview"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Understand architecture"})," - ",(0,o.jsx)(n.a,{href:"/dev/fr/docs/Portfolio/Timelock/project-architecture/",children:"Project Architecture"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The codebase follows modern Angular patterns and best practices, making it an excellent learning resource for Angular development."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(6540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);