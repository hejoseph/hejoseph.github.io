"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[2767],{8316:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>a,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"SQL/Basics/null-handling","title":"NULL Handling","description":"In SQL, NULL represents a missing or unknown value. It is not the same as zero (0) or an empty string (\'\'). Handling NULL values correctly is essential for writing accurate and reliable queries.","source":"@site/docs/SQL/2-Basics/5-null-handling.md","sourceDirName":"SQL/2-Basics","slug":"/SQL/Basics/null-handling","permalink":"/dev/fr/docs/SQL/Basics/null-handling","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Sorting and Aliasing","permalink":"/dev/fr/docs/SQL/Basics/sorting-alias"}}');var l=s(4848),d=s(8453);const i={},c="NULL Handling",h={},o=[{value:"What is NULL?",id:"what-is-null",level:2},{value:"Checking for NULL",id:"checking-for-null",level:2},{value:"NULL and Comparison Operators",id:"null-and-comparison-operators",level:2},{value:"NULL in Conditions",id:"null-in-conditions",level:2},{value:"COALESCE",id:"coalesce",level:2},{value:"ISNULL and IFNULL",id:"isnull-and-ifnull",level:2},{value:"NULL with Aggregates",id:"null-with-aggregates",level:2},{value:"ORDER BY and NULL",id:"order-by-and-null",level:2},{value:"Summary",id:"summary",level:2}];function t(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"null-handling",children:"NULL Handling"})}),"\n",(0,l.jsxs)(n.p,{children:["In SQL, ",(0,l.jsx)(n.code,{children:"NULL"})," represents a missing or unknown value. It is not the same as zero (",(0,l.jsx)(n.code,{children:"0"}),") or an empty string (",(0,l.jsx)(n.code,{children:"''"}),"). Handling ",(0,l.jsx)(n.code,{children:"NULL"})," values correctly is essential for writing accurate and reliable queries."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"what-is-null",children:"What is NULL?"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"NULL"})," means ",(0,l.jsx)(n.em,{children:"no value"})," or ",(0,l.jsx)(n.em,{children:"unknown value"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Any arithmetic operation with ",(0,l.jsx)(n.code,{children:"NULL"})," results in ",(0,l.jsx)(n.code,{children:"NULL"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Comparisons with ",(0,l.jsx)(n.code,{children:"NULL"})," require special syntax \u2014 you cannot use ",(0,l.jsx)(n.code,{children:"="})," or ",(0,l.jsx)(n.code,{children:"!="})," directly."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"checking-for-null",children:"Checking for NULL"}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.code,{children:"IS NULL"})," or ",(0,l.jsx)(n.code,{children:"IS NOT NULL"})," to test for ",(0,l.jsx)(n.code,{children:"NULL"})," values."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM employees\r\nWHERE manager_id IS NULL;\r\n\r\nSELECT * FROM employees\r\nWHERE department_id IS NOT NULL;\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"null-and-comparison-operators",children:"NULL and Comparison Operators"}),"\n",(0,l.jsxs)(n.p,{children:["Comparisons like ",(0,l.jsx)(n.code,{children:"="})," and ",(0,l.jsx)(n.code,{children:"<>"})," do not work with ",(0,l.jsx)(n.code,{children:"NULL"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- This won't work as expected:\r\nSELECT * FROM employees WHERE manager_id = NULL;\r\n\r\n-- Correct way:\r\nSELECT * FROM employees WHERE manager_id IS NULL;\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"null-in-conditions",children:"NULL in Conditions"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"NULL"})," affects logical conditions:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"TRUE AND NULL"})," \u2192 ",(0,l.jsx)(n.code,{children:"NULL"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"FALSE OR NULL"})," \u2192 ",(0,l.jsx)(n.code,{children:"NULL"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"NOT NULL"})," \u2192 ",(0,l.jsx)(n.code,{children:"NULL"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["This is why queries must explicitly check for ",(0,l.jsx)(n.code,{children:"NULL"}),"."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"coalesce",children:"COALESCE"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"COALESCE"})," returns the first non-",(0,l.jsx)(n.code,{children:"NULL"})," value from a list of expressions."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT first_name, COALESCE(middle_name, 'N/A') AS middle_name\r\nFROM employees;\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["If ",(0,l.jsx)(n.code,{children:"middle_name"})," is ",(0,l.jsx)(n.code,{children:"NULL"}),", ",(0,l.jsx)(n.code,{children:"'N/A'"})," is returned instead."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"isnull-and-ifnull",children:"ISNULL and IFNULL"}),"\n",(0,l.jsxs)(n.p,{children:["Different databases have vendor-specific functions for handling ",(0,l.jsx)(n.code,{children:"NULL"}),":"]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Function"}),(0,l.jsx)(n.th,{children:"Database"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"ISNULL(expression, replacement)"})}),(0,l.jsx)(n.td,{children:"SQL Server"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"IFNULL(expression, replacement)"})}),(0,l.jsx)(n.td,{children:"MySQL"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"NVL(expression, replacement)"})}),(0,l.jsx)(n.td,{children:"Oracle"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"COALESCE(expression1, expression2, ...)"})}),(0,l.jsx)(n.td,{children:"Standard SQL"})]})]})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example (MySQL):"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT IFNULL(phone_number, 'Unknown') FROM customers;\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"null-with-aggregates",children:"NULL with Aggregates"}),"\n",(0,l.jsxs)(n.p,{children:["Aggregate functions handle ",(0,l.jsx)(n.code,{children:"NULL"})," values automatically:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"COUNT(*)"})," counts all rows."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"COUNT(column)"})," counts non-",(0,l.jsx)(n.code,{children:"NULL"})," values only."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"SUM"}),", ",(0,l.jsx)(n.code,{children:"AVG"}),", ",(0,l.jsx)(n.code,{children:"MAX"}),", and ",(0,l.jsx)(n.code,{children:"MIN"})," ignore ",(0,l.jsx)(n.code,{children:"NULL"})," values."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT COUNT(*) AS total_rows,\r\n       COUNT(manager_id) AS managers_only\r\nFROM employees;\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"order-by-and-null",children:"ORDER BY and NULL"}),"\n",(0,l.jsxs)(n.p,{children:["By default, the placement of ",(0,l.jsx)(n.code,{children:"NULL"})," values when sorting depends on the database:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Some treat ",(0,l.jsx)(n.code,{children:"NULL"})," as the lowest value (",(0,l.jsx)(n.code,{children:"NULLS FIRST"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:["Others treat ",(0,l.jsx)(n.code,{children:"NULL"})," as the highest value (",(0,l.jsx)(n.code,{children:"NULLS LAST"}),")."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"You can control this explicitly:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT first_name, hire_date\r\nFROM employees\r\nORDER BY hire_date NULLS LAST;\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Concept"}),(0,l.jsx)(n.th,{children:"Syntax"}),(0,l.jsx)(n.th,{children:"Example"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Check for NULL"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"IS NULL"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"WHERE middle_name IS NULL"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Replace NULL"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"COALESCE"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"COALESCE(phone, 'N/A')"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Vendor-specific"}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"ISNULL"}),", ",(0,l.jsx)(n.code,{children:"IFNULL"}),", ",(0,l.jsx)(n.code,{children:"NVL"})]}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"IFNULL(address, 'Unknown')"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Aggregate behavior"}),(0,l.jsx)(n.td,{children:"Ignores NULLs"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"AVG(salary)"})})]})]})]}),"\n",(0,l.jsxs)(n.p,{children:["Handling ",(0,l.jsx)(n.code,{children:"NULL"})," correctly ensures accurate results and prevents unexpected bugs in your queries."]})]})}function a(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(6540);const l={},d=r.createContext(l);function i(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);