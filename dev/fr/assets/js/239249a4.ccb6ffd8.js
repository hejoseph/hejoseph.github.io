"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[6541],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}},9792:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"QA-Testing/Automation-Framework-Strategy/integrate-with-pipelines","title":"Integration with CI/CD Pipelines","description":"Overview","source":"@site/docs/QA-Testing/4-Automation-Framework-Strategy/4-integrate-with-pipelines.md","sourceDirName":"QA-Testing/4-Automation-Framework-Strategy","slug":"/QA-Testing/Automation-Framework-Strategy/integrate-with-pipelines","permalink":"/dev/fr/docs/QA-Testing/Automation-Framework-Strategy/integrate-with-pipelines","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Automating Different Layers of Testing","permalink":"/dev/fr/docs/QA-Testing/Automation-Framework-Strategy/automate-different-layers"},"next":{"title":"Test Execution on Cloud Environments","permalink":"/dev/fr/docs/QA-Testing/Automation-Framework-Strategy/test-execution-on-cloud"}}');var i=s(4848),r=s(8453);const l={},o="Integration with CI/CD Pipelines",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Why Integrate Testing into CI/CD?",id:"why-integrate-testing-into-cicd",level:2},{value:"1. GitHub Actions",id:"1-github-actions",level:2},{value:"What It Is:",id:"what-it-is",level:3},{value:"Example: Run Tests on Push",id:"example-run-tests-on-push",level:3},{value:"Other Use Cases:",id:"other-use-cases",level:3},{value:"2. Jenkins Pipelines",id:"2-jenkins-pipelines",level:2},{value:"What It Is:",id:"what-it-is-1",level:3},{value:"Example: Basic Jenkinsfile",id:"example-basic-jenkinsfile",level:3},{value:"Key Features:",id:"key-features",level:3},{value:"Best Practices for CI/CD Testing",id:"best-practices-for-cicd-testing",level:2},{value:"Real-World Use Case",id:"real-world-use-case",level:2},{value:"Summary",id:"summary",level:2}];function a(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"integration-with-cicd-pipelines",children:"Integration with CI/CD Pipelines"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"CI/CD (Continuous Integration / Continuous Delivery) is the backbone of modern DevOps practices. Integrating automated testing into your CI/CD pipelines ensures:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Early detection of defects"}),"\n",(0,i.jsx)(n.li,{children:"Fast feedback for developers"}),"\n",(0,i.jsx)(n.li,{children:"Consistent, repeatable test execution"}),"\n",(0,i.jsx)(n.li,{children:"Higher release confidence"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Popular CI/CD tools include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GitHub Actions"})," \u2013 Built-in CI/CD for GitHub repositories"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Jenkins Pipelines"})," \u2013 Extensible open-source automation server"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"why-integrate-testing-into-cicd",children:"Why Integrate Testing into CI/CD?"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Benefit"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Shift-left Testing"})}),(0,i.jsx)(n.td,{children:"Catch bugs early in development stages"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Automated Regression Checks"})}),(0,i.jsx)(n.td,{children:"Run critical test suites on every change"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Faster Feedback Loop"})}),(0,i.jsx)(n.td,{children:"Developers know within minutes if their changes broke something"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Continuous Quality Gate"})}),(0,i.jsx)(n.td,{children:"Prevent deployments if tests fail"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"1-github-actions",children:"1. GitHub Actions"}),"\n",(0,i.jsx)(n.h3,{id:"what-it-is",children:"What It Is:"}),"\n",(0,i.jsxs)(n.p,{children:["GitHub Actions allows you to ",(0,i.jsx)(n.strong,{children:"define workflows"})," as ",(0,i.jsx)(n.code,{children:".yml"})," files in your repo, triggered on ",(0,i.jsx)(n.strong,{children:"push, pull requests"}),", or schedule."]}),"\n",(0,i.jsx)(n.h3,{id:"example-run-tests-on-push",children:"Example: Run Tests on Push"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"name: Run Tests\r\n\r\non:\r\n  push:\r\n    branches: [ main ]\r\n  pull_request:\r\n    branches: [ main ]\r\n\r\njobs:\r\n  test:\r\n    runs-on: ubuntu-latest\r\n\r\n    steps:\r\n    - name: Checkout Code\r\n      uses: actions/checkout@v3\r\n\r\n    - name: Set up Node.js\r\n      uses: actions/setup-node@v3\r\n      with:\r\n        node-version: 18\r\n\r\n    - name: Install Dependencies\r\n      run: npm install\r\n\r\n    - name: Run Cypress Tests\r\n      run: npm run test:e2e\n"})}),"\n",(0,i.jsx)(n.h3,{id:"other-use-cases",children:"Other Use Cases:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Schedule nightly regression runs"}),"\n",(0,i.jsx)(n.li,{children:"Deploy on test success"}),"\n",(0,i.jsx)(n.li,{children:"Slack notifications for test failures"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-jenkins-pipelines",children:"2. Jenkins Pipelines"}),"\n",(0,i.jsx)(n.h3,{id:"what-it-is-1",children:"What It Is:"}),"\n",(0,i.jsxs)(n.p,{children:["Jenkins uses a ",(0,i.jsx)(n.strong,{children:"Groovy-based DSL"})," (",(0,i.jsx)(n.code,{children:"Jenkinsfile"}),") to define multistage pipelines. It supports complex workflows and integrations."]}),"\n",(0,i.jsx)(n.h3,{id:"example-basic-jenkinsfile",children:"Example: Basic Jenkinsfile"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:"pipeline {\r\n    agent any\r\n\r\n    stages {\r\n        stage('Checkout') {\r\n            steps {\r\n                checkout scm\r\n            }\r\n        }\r\n\r\n        stage('Install Dependencies') {\r\n            steps {\r\n                sh 'npm install'\r\n            }\r\n        }\r\n\r\n        stage('Run Tests') {\r\n            steps {\r\n                sh 'npm run test'\r\n            }\r\n        }\r\n\r\n        stage('Publish Results') {\r\n            steps {\r\n                junit 'reports/**/*.xml'\r\n            }\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"key-features",children:"Key Features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Support for ",(0,i.jsx)(n.strong,{children:"parallel execution"})]}),"\n",(0,i.jsxs)(n.li,{children:["Extensive ",(0,i.jsx)(n.strong,{children:"plugin ecosystem"})]}),"\n",(0,i.jsx)(n.li,{children:"Custom integrations (Docker, Slack, TestRail, etc.)"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"best-practices-for-cicd-testing",children:"Best Practices for CI/CD Testing"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Practice"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Test early and often"})}),(0,i.jsx)(n.td,{children:"Trigger on push, PRs, and on schedule"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Fail fast"})}),(0,i.jsx)(n.td,{children:"Stop pipeline if critical tests fail"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Isolate flaky tests"})}),(0,i.jsx)(n.td,{children:"Don't let unreliable tests block the pipeline"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Parallel execution"})}),(0,i.jsx)(n.td,{children:"Run large test suites faster"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Artifact archiving"})}),(0,i.jsx)(n.td,{children:"Store reports/screenshots for later analysis"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Integrate with deployment gates"})}),(0,i.jsx)(n.td,{children:"Allow deployment only if tests pass"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"real-world-use-case",children:"Real-World Use Case"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"CI Workflow with GitHub Actions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Developer opens a Pull Request."}),"\n",(0,i.jsxs)(n.li,{children:["GitHub Action triggers:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Linting"}),"\n",(0,i.jsx)(n.li,{children:"Unit tests"}),"\n",(0,i.jsx)(n.li,{children:"API tests"}),"\n",(0,i.jsx)(n.li,{children:"E2E tests (e.g., Cypress)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["If all tests pass:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"PR is approved & merged"}),"\n",(0,i.jsx)(n.li,{children:"Another action triggers deployment to staging"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Post-deploy smoke tests run"}),"\n",(0,i.jsx)(n.li,{children:"On success, code is promoted to production"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(n.p,{children:"Integrating automated tests into CI/CD pipelines is critical for modern, high-velocity teams."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Tool"}),(0,i.jsx)(n.th,{children:"Strengths"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"GitHub Actions"})}),(0,i.jsx)(n.td,{children:"Simple setup, tight GitHub integration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Jenkins"})}),(0,i.jsx)(n.td,{children:"Highly configurable, great for enterprise needs"})]})]})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u201cA failing test in CI is a chance to prevent a failure in production.\u201d"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Choose your CI/CD tool based on team size, complexity, and project needs \u2014 but make sure testing is a ",(0,i.jsx)(n.strong,{children:"core stage"})," of every pipeline."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);