"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[4262],{3249:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"Portfolio/MovieList/introduction","title":"Movie List Application - Introduction","description":"Overview","source":"@site/docs/Portfolio/MovieList/01-introduction.md","sourceDirName":"Portfolio/MovieList","slug":"/Portfolio/MovieList/introduction","permalink":"/dev/fr/docs/Portfolio/MovieList/introduction","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"JSON Processing Utilities","permalink":"/dev/fr/docs/Portfolio/Jsonamic/utils/json-processing"},"next":{"title":"spring-boot-backend","permalink":"/dev/fr/docs/Portfolio/MovieList/api/spring-boot-backend"}}');var s=i(4848),t=i(8453);const r={},l="Movie List Application - Introduction",c={},a=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"1. Frontend (movie-list-front)",id:"1-frontend-movie-list-front",level:3},{value:"2. Backend API (movie-api)",id:"2-backend-api-movie-api",level:3},{value:"3. Database (mongo-local)",id:"3-database-mongo-local",level:3},{value:"Key Technologies Explained",id:"key-technologies-explained",level:2},{value:"Docker &amp; Docker Compose",id:"docker--docker-compose",level:3},{value:"Spring Boot",id:"spring-boot",level:3},{value:"React.js",id:"reactjs",level:3},{value:"MongoDB",id:"mongodb",level:3},{value:"Application Flow",id:"application-flow",level:2},{value:"Development Setup",id:"development-setup",level:2},{value:"Project Benefits",id:"project-benefits",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"movie-list-application---introduction",children:"Movie List Application - Introduction"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"The Movie List Application is a full-stack web application that allows users to browse movies, view details, and write reviews. It's built using modern web technologies and follows a microservices architecture pattern with containerization."}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.p,{children:"This application consists of three main components that work together:"}),"\n",(0,s.jsx)(n.h3,{id:"1-frontend-movie-list-front",children:"1. Frontend (movie-list-front)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Technology"}),": React.js (JavaScript library for building user interfaces)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Port"}),": 3000 (exposed through Docker)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Provides the user interface where users can browse movies, view details, and interact with the application"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-backend-api-movie-api",children:"2. Backend API (movie-api)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Technology"}),": Spring Boot (Java framework for building web applications)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Port"}),": 8080"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Handles business logic, data processing, and provides REST API endpoints for the frontend"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-database-mongo-local",children:"3. Database (mongo-local)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Technology"}),": MongoDB (NoSQL document database)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Port"}),": 27017"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Stores movie data, user reviews, and other application data"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"key-technologies-explained",children:"Key Technologies Explained"}),"\n",(0,s.jsx)(n.h3,{id:"docker--docker-compose",children:"Docker & Docker Compose"}),"\n",(0,s.jsxs)(n.p,{children:["The entire application is ",(0,s.jsx)(n.strong,{children:"containerized"})," using Docker, which means each component runs in its own isolated environment (container). Docker Compose orchestrates these containers, defining how they should work together."]}),"\n",(0,s.jsx)(n.h3,{id:"spring-boot",children:"Spring Boot"}),"\n",(0,s.jsx)(n.p,{children:"A Java framework that simplifies building production-ready applications. It provides:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Auto-configuration"}),": Automatically sets up common configurations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Embedded server"}),": Runs without needing external application servers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dependency injection"}),": Manages component dependencies automatically"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"reactjs",children:"React.js"}),"\n",(0,s.jsx)(n.p,{children:"A JavaScript library for building interactive user interfaces using:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Components"}),": Reusable UI building blocks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Virtual DOM"}),": Efficient rendering system"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"State management"}),": Handles dynamic data changes"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"mongodb",children:"MongoDB"}),"\n",(0,s.jsx)(n.p,{children:"A NoSQL database that stores data in flexible, JSON-like documents rather than traditional tables and rows."}),"\n",(0,s.jsx)(n.h2,{id:"application-flow",children:"Application Flow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User Access"}),": Users access the React frontend at ",(0,s.jsx)(n.code,{children:"http://localhost:3000"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API Communication"}),": Frontend makes HTTP requests to the Spring Boot API at ",(0,s.jsx)(n.code,{children:"http://localhost:8080"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Storage"}),": API interacts with MongoDB to store and retrieve movie and review data"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Response Chain"}),": Data flows back through API to frontend and displays to user"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"development-setup",children:"Development Setup"}),"\n",(0,s.jsx)(n.p,{children:"The application uses Docker Compose to manage all services with a single command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker-compose up --build\n"})}),"\n",(0,s.jsx)(n.p,{children:"This command:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Builds Docker images for frontend and backend"}),"\n",(0,s.jsx)(n.li,{children:"Starts MongoDB database"}),"\n",(0,s.jsx)(n.li,{children:"Connects all services together"}),"\n",(0,s.jsx)(n.li,{children:"Makes the application available for use"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"project-benefits",children:"Project Benefits"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scalability"}),": Each component can be scaled independently"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Maintainability"}),": Clear separation of concerns between frontend, backend, and database"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Portability"}),": Docker containers ensure consistent behavior across different environments"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Modern Stack"}),": Uses current industry-standard technologies and practices"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var o=i(6540);const s={},t=o.createContext(s);function r(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);