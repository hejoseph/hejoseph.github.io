"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[2614],{775:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"react/tailwind/integrate-tailwind-docusaurus","title":"Tailwind with docusaurus","description":"\xc9tape 1 : Installation de Tailwind CSS et ses d\xe9pendances","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/react/tailwind/integrate-tailwind-docusaurus.md","sourceDirName":"react/tailwind","slug":"/react/tailwind/integrate-tailwind-docusaurus","permalink":"/dev/fr/docs/react/tailwind/integrate-tailwind-docusaurus","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"tailwindcss","permalink":"/dev/fr/docs/tags/tailwindcss"}],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Tailwind with docusaurus","sidebar_position":2,"tags":["tailwindcss"]},"sidebar":"tutorialSidebar","previous":{"title":"Tailwind CSS","permalink":"/dev/fr/docs/react/tailwind/tailwindcss"},"next":{"title":"Tailwind init error","permalink":"/dev/fr/docs/react/tailwind/tailwind-error"}}');var t=n(4848),l=n(8453);const r={title:"Tailwind with docusaurus",sidebar_position:2,tags:["tailwindcss"]},a="Int\xe9gration de Tailwind CSS avec Docusaurus",d={},c=[{value:"\xc9tape 1 : Installation de Tailwind CSS et ses d\xe9pendances",id:"\xe9tape-1--installation-de-tailwind-css-et-ses-d\xe9pendances",level:2},{value:"\xc9tape 2 : Configuration de Tailwind CSS",id:"\xe9tape-2--configuration-de-tailwind-css",level:2},{value:"\xc9tape 3 : Cr\xe9ation de la configuration PostCSS",id:"\xe9tape-3--cr\xe9ation-de-la-configuration-postcss",level:2},{value:"\xc9tape 4 : Ajout des directives Tailwind",id:"\xe9tape-4--ajout-des-directives-tailwind",level:2},{value:"\xc9tape 5 : Mise \xe0 jour de la configuration Docusaurus",id:"\xe9tape-5--mise-\xe0-jour-de-la-configuration-docusaurus",level:2},{value:"\xc9tape 6 : Purge des styles inutilis\xe9s (Optionnel)",id:"\xe9tape-6--purge-des-styles-inutilis\xe9s-optionnel",level:2},{value:"\xc9tape 7 : Utilisation de Tailwind dans les composants",id:"\xe9tape-7--utilisation-de-tailwind-dans-les-composants",level:2},{value:"Notes importantes",id:"notes-importantes",level:2}];function o(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"int\xe9gration-de-tailwind-css-avec-docusaurus",children:"Int\xe9gration de Tailwind CSS avec Docusaurus"})}),"\n",(0,t.jsx)(s.h2,{id:"\xe9tape-1--installation-de-tailwind-css-et-ses-d\xe9pendances",children:"\xc9tape 1 : Installation de Tailwind CSS et ses d\xe9pendances"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"npm install -D tailwindcss postcss autoprefixer\r\nnpx tailwindcss init\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Pourquoi c'est n\xe9cessaire :"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"tailwindcss"})," : La librairie principale de Tailwind CSS qui g\xe9n\xe8re les classes utilitaires"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"postcss"})," : Requis pour le traitement du CSS de Tailwind (Tailwind est un plugin PostCSS)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"autoprefixer"})," : Ajoute les pr\xe9fixes vendeurs aux r\xe8gles CSS pour une meilleure compatibilit\xe9 navigateur"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"npx tailwindcss init"})," : Cr\xe9e un fichier de configuration par d\xe9faut (",(0,t.jsx)(s.code,{children:"tailwind.config.js"}),") pour personnaliser Tailwind"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"\xe9tape-2--configuration-de-tailwind-css",children:"\xc9tape 2 : Configuration de Tailwind CSS"}),"\n",(0,t.jsxs)(s.p,{children:["Le fichier ",(0,t.jsx)(s.code,{children:"tailwind.config.js"})," indique \xe0 Tailwind o\xf9 chercher les classes utilis\xe9es :"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"content: [\r\n  './src/**/*.{js,jsx,ts,tsx}',\r\n  './docs/**/*.{md,mdx}',\r\n  './blog/**/*.{md,mdx}',\r\n  './static/**/*.html',\r\n  './docusaurus.config.js',\r\n]\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Pourquoi c'est important :"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Tailwind scanne ces fichiers pour trouver les classes \xe0 g\xe9n\xe9rer"}),"\n",(0,t.jsx)(s.li,{children:"Sans les bons chemins, vos classes utilitaires ne fonctionneront pas"}),"\n",(0,t.jsx)(s.li,{children:"On inclut les fichiers JS/TS, MD/MDX et HTML pour couvrir tout le contenu Docusaurus"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"\xe9tape-3--cr\xe9ation-de-la-configuration-postcss",children:"\xc9tape 3 : Cr\xe9ation de la configuration PostCSS"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"postcss.config.js"})," configure le pipeline de traitement CSS :"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"module.exports = {\r\n  plugins: {\r\n    tailwindcss: {},\r\n    autoprefixer: {},\r\n  },\r\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Pourquoi c'est n\xe9cessaire :"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"PostCSS doit savoir quels plugins utiliser"}),"\n",(0,t.jsx)(s.li,{children:"L'ordre compte : Tailwind s'ex\xe9cute d'abord, puis autoprefixer"}),"\n",(0,t.jsx)(s.li,{children:"Docusaurus utilise d\xe9j\xe0 PostCSS en interne, ceci l'\xe9tend simplement"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"\xe9tape-4--ajout-des-directives-tailwind",children:"\xc9tape 4 : Ajout des directives Tailwind"}),"\n",(0,t.jsxs)(s.p,{children:["Dans votre fichier CSS principal (",(0,t.jsx)(s.code,{children:"src/css/custom.css"}),") :"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-css",children:"@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Ce que cela fait :"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"@tailwind base"})," : Ajoute les styles de base de Tailwind (normalize.css + styles basiques)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"@tailwind components"})," : Ajoute les classes de composants (comme .btn, .card)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"@tailwind utilities"})," : G\xe9n\xe8re toutes les classes utilitaires (la partie la plus importante)"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"\xe9tape-5--mise-\xe0-jour-de-la-configuration-docusaurus",children:"\xc9tape 5 : Mise \xe0 jour de la configuration Docusaurus"}),"\n",(0,t.jsxs)(s.p,{children:["Le plugin dans ",(0,t.jsx)(s.code,{children:"docusaurus.config.js"})," :"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"async function myPlugin() {\r\n  return {\r\n    name: 'docusaurus-tailwindcss',\r\n    configurePostCss(postcssOptions) {\r\n      postcssOptions.plugins.push(require('tailwindcss'));\r\n      postcssOptions.plugins.push(require('autoprefixer'));\r\n      return postcssOptions;\r\n    },\r\n  };\r\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Pourquoi c'est critique :"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Docusaurus a sa propre configuration PostCSS"}),"\n",(0,t.jsx)(s.li,{children:"Ce plugin garantit que Tailwind est ajout\xe9 \xe0 ce pipeline"}),"\n",(0,t.jsx)(s.li,{children:"Sans cela, Docusaurus ignorerait le traitement de Tailwind"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"\xe9tape-6--purge-des-styles-inutilis\xe9s-optionnel",children:"\xc9tape 6 : Purge des styles inutilis\xe9s (Optionnel)"}),"\n",(0,t.jsxs)(s.p,{children:["L'option ",(0,t.jsx)(s.code,{children:"purge"})," dans Tailwind v2 (appel\xe9e ",(0,t.jsx)(s.code,{children:"content"})," dans v3+) :"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"purge: [\r\n  './src/**/*.{js,jsx,ts,tsx}',\r\n  // ... autres chemins\r\n]\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Objectif :"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"En production, supprime les classes CSS inutilis\xe9es"}),"\n",(0,t.jsx)(s.li,{children:"R\xe9duit significativement la taille du fichier CSS final"}),"\n",(0,t.jsx)(s.li,{children:"Ne scanne que les fichiers correspondant \xe0 ces motifs"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"\xe9tape-7--utilisation-de-tailwind-dans-les-composants",children:"\xc9tape 7 : Utilisation de Tailwind dans les composants"}),"\n",(0,t.jsx)(s.p,{children:"Exemple d'utilisation dans un composant :"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-jsx",children:'<div className="bg-blue-500 text-white p-4 rounded-lg">\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Points cl\xe9s :"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Utilisez ",(0,t.jsx)(s.code,{children:"className"})," au lieu de ",(0,t.jsx)(s.code,{children:"class"})," dans les composants React"]}),"\n",(0,t.jsx)(s.li,{children:"Les classes utilitaires fonctionnent comme en HTML"}),"\n",(0,t.jsx)(s.li,{children:"Fonctionne dans les composants React et les fichiers MDX"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"notes-importantes",children:"Notes importantes"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Processus de build"})," : Tailwind fonctionne pendant le build, pas au runtime"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"D\xe9tection des classes"})," : Seules les classes trouv\xe9es dans vos fichiers de contenu seront g\xe9n\xe9r\xe9es"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Conflits CSS"})," : Les styles de base de Tailwind peuvent entrer en conflit avec Docusaurus - des ajustements peuvent \xeatre n\xe9cessaires"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Mode sombre"})," : Le mode sombre de Tailwind peut fonctionner avec le syst\xe8me de th\xe8me de Docusaurus"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Red\xe9marrage n\xe9cessaire"})," : Apr\xe8s des changements de configuration, red\xe9marrez votre serveur de d\xe9veloppement"]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>a});var i=n(6540);const t={},l=i.createContext(t);function r(e){const s=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:s},e.children)}}}]);