"use strict";(self.webpackChunkmydevdocs=self.webpackChunkmydevdocs||[]).push([[7765],{8115:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Portfolio/MovieList/deployment/dockerfile-details","title":"Dockerfile Configuration Details","description":"Overview","source":"@site/docs/Portfolio/MovieList/deployment/dockerfile-details.md","sourceDirName":"Portfolio/MovieList/deployment","slug":"/Portfolio/MovieList/deployment/dockerfile-details","permalink":"/dev/fr/docs/Portfolio/MovieList/deployment/dockerfile-details","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Docker Deployment Configuration","permalink":"/dev/fr/docs/Portfolio/MovieList/deployment/docker-setup"},"next":{"title":"React Frontend Application","permalink":"/dev/fr/docs/Portfolio/MovieList/frontend/react-application"}}');var s=i(4848),l=i(8453);const t={},o="Dockerfile Configuration Details",d={},c=[{value:"Overview",id:"overview",level:2},{value:"Frontend Dockerfile (React Application)",id:"frontend-dockerfile-react-application",level:2},{value:"Multi-Stage Build Process",id:"multi-stage-build-process",level:3},{value:"Stage 1: Build Stage",id:"stage-1-build-stage",level:3},{value:"Stage 2: Production Stage",id:"stage-2-production-stage",level:3},{value:"Backend Dockerfile (Spring Boot Application)",id:"backend-dockerfile-spring-boot-application",level:2},{value:"Simple Single-Stage Build",id:"simple-single-stage-build",level:3},{value:"Pre-Build Requirement",id:"pre-build-requirement",level:3},{value:"Alternative Multi-Stage Approach",id:"alternative-multi-stage-approach",level:3},{value:"Database Container (MongoDB)",id:"database-container-mongodb",level:2},{value:"Build Context and .dockerignore",id:"build-context-and-dockerignore",level:2},{value:"Frontend Build Context",id:"frontend-build-context",level:3},{value:"Backend Build Context",id:"backend-build-context",level:3},{value:"Image Optimization Strategies",id:"image-optimization-strategies",level:2},{value:"Frontend Optimizations",id:"frontend-optimizations",level:3},{value:"Backend Optimizations",id:"backend-optimizations",level:3},{value:"Container Runtime Behavior",id:"container-runtime-behavior",level:2},{value:"Frontend Container",id:"frontend-container",level:3},{value:"Backend Container",id:"backend-container",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Frontend Security",id:"frontend-security",level:3},{value:"Backend Security",id:"backend-security",level:3},{value:"Development vs Production",id:"development-vs-production",level:2},{value:"Development Differences",id:"development-differences",level:3},{value:"Production Differences",id:"production-differences",level:3},{value:"Benefits of This Docker Strategy",id:"benefits-of-this-docker-strategy",level:2}];function a(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"dockerfile-configuration-details",children:"Dockerfile Configuration Details"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Each service in the Movie List Application has its own Dockerfile that defines how to build the container image. These Dockerfiles use different base images and build processes optimized for their specific technology stack."}),"\n",(0,s.jsx)(n.h2,{id:"frontend-dockerfile-react-application",children:"Frontend Dockerfile (React Application)"}),"\n",(0,s.jsx)(n.h3,{id:"multi-stage-build-process",children:"Multi-Stage Build Process"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dockerfile",children:'# Stage 1: Build the React application\r\nFROM node:16 AS build\r\nWORKDIR /app\r\nCOPY package*.json ./\r\nRUN npm install\r\nCOPY . .\r\nRUN npm run build\r\n\r\n# Stage 2: Serve with Nginx\r\nFROM nginx:alpine\r\nCOPY --from=build /app/build /usr/share/nginx/html\r\nEXPOSE 3000\r\nCMD ["nginx", "-g", "daemon off;"]\n'})}),"\n",(0,s.jsx)(n.h3,{id:"stage-1-build-stage",children:"Stage 1: Build Stage"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Base Image"}),": ",(0,s.jsx)(n.code,{children:"node:16"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Official Node.js image with version 16"}),"\n",(0,s.jsx)(n.li,{children:"Includes npm and all Node.js development tools"}),"\n",(0,s.jsx)(n.li,{children:"Used only for building the React application"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Build Process:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"WORKDIR /app"}),": Sets working directory inside container"]}),"\n",(0,s.jsxs)(n.li,{children:["*",(0,s.jsx)(n.em,{children:"COPY package"}),".json ./**: Copies package.json and package-lock.json first"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"RUN npm install"}),": Installs all dependencies (leverages Docker layer caching)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"COPY . ."}),": Copies all application source code"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"RUN npm run build"}),": Creates optimized production build in ",(0,s.jsx)(n.code,{children:"/app/build"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Why Copy package.json First?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Docker Layer Caching"}),": If source code changes but dependencies don't, Docker reuses the npm install layer"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Faster Builds"}),": Only re-installs dependencies when package.json changes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Efficiency"}),": Common Docker best practice for Node.js applications"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"stage-2-production-stage",children:"Stage 2: Production Stage"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Base Image"}),": ",(0,s.jsx)(n.code,{children:"nginx:alpine"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lightweight Alpine Linux with Nginx web server"}),"\n",(0,s.jsx)(n.li,{children:"Much smaller than Node.js image (only ~23MB vs ~900MB)"}),"\n",(0,s.jsx)(n.li,{children:"Perfect for serving static files"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Production Setup:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"COPY --from=build"}),": Copies built React app from previous stage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"EXPOSE 3000"}),": Documents that container listens on port 3000"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CMD"}),": Starts Nginx in foreground mode"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Benefits of Multi-Stage Build:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Smaller Image Size"}),": Final image only contains Nginx and built files"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security"}),": No development tools in production image"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance"}),": Nginx is optimized for serving static content"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clean Separation"}),": Build tools separate from runtime environment"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"backend-dockerfile-spring-boot-application",children:"Backend Dockerfile (Spring Boot Application)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dockerfile",children:'FROM openjdk:17-jdk-slim\r\nWORKDIR /app\r\nCOPY target/MovieApi.jar /app/MovieApi.jar\r\nCMD ["java", "-jar", "/app/MovieApi.jar"]\n'})}),"\n",(0,s.jsx)(n.h3,{id:"simple-single-stage-build",children:"Simple Single-Stage Build"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Base Image"}),": ",(0,s.jsx)(n.code,{children:"openjdk:17-jdk-slim"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Official OpenJDK 17 image with slim variant"}),"\n",(0,s.jsx)(n.li,{children:"Includes Java Runtime Environment (JRE) and Java Development Kit (JDK)"}),"\n",(0,s.jsx)(n.li,{children:"Slim variant reduces image size while keeping essential tools"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Build Process:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"WORKDIR /app"}),": Sets working directory"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"COPY target/MovieApi.jar"}),": Copies pre-built JAR file from Maven build"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CMD"}),": Runs the Spring Boot application using Java"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"pre-build-requirement",children:"Pre-Build Requirement"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Important"}),": This Dockerfile expects the JAR file to already exist in ",(0,s.jsx)(n.code,{children:"target/MovieApi.jar"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Maven Build Process:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# This must be run before Docker build\r\nmvn clean package\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Maven Configuration (pom.xml):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<build>\r\n    <finalName>MovieApi</finalName>\r\n    <plugins>\r\n        <plugin>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-maven-plugin</artifactId>\r\n        </plugin>\r\n    </plugins>\r\n</build>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"alternative-multi-stage-approach",children:"Alternative Multi-Stage Approach"}),"\n",(0,s.jsx)(n.p,{children:"A more complete Dockerfile might include the Maven build:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dockerfile",children:'# Build stage\r\nFROM maven:3.8.4-openjdk-17 AS build\r\nWORKDIR /app\r\nCOPY pom.xml .\r\nRUN mvn dependency:go-offline\r\nCOPY src ./src\r\nRUN mvn clean package -DskipTests\r\n\r\n# Runtime stage\r\nFROM openjdk:17-jdk-slim\r\nWORKDIR /app\r\nCOPY --from=build /app/target/MovieApi.jar /app/MovieApi.jar\r\nCMD ["java", "-jar", "/app/MovieApi.jar"]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"database-container-mongodb",children:"Database Container (MongoDB)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"No Custom Dockerfile"}),": Uses official MongoDB image directly"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"mongo-local:\r\n  image: mongo:latest\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Why No Custom Dockerfile?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"MongoDB image is already optimized"}),"\n",(0,s.jsx)(n.li,{children:"Configuration handled through environment variables and volumes"}),"\n",(0,s.jsx)(n.li,{children:"Initialization scripts mounted as volumes"}),"\n",(0,s.jsx)(n.li,{children:"Keeps setup simple and maintainable"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"build-context-and-dockerignore",children:"Build Context and .dockerignore"}),"\n",(0,s.jsx)(n.h3,{id:"frontend-build-context",children:"Frontend Build Context"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Context"}),": ",(0,s.jsx)(n.code,{children:"./movie-list-front"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Typical .dockerignore:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"node_modules\r\nnpm-debug.log\r\n.git\r\n.gitignore\r\nREADME.md\r\n.env\r\n.nyc_output\r\ncoverage\r\n.cache\n"})}),"\n",(0,s.jsx)(n.h3,{id:"backend-build-context",children:"Backend Build Context"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Context"}),": ",(0,s.jsx)(n.code,{children:"./movie-api"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Typical .dockerignore:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"target/\r\n.mvn/\r\nmvnw\r\nmvnw.cmd\r\n.git\r\n.gitignore\r\nREADME.md\n"})}),"\n",(0,s.jsx)(n.h2,{id:"image-optimization-strategies",children:"Image Optimization Strategies"}),"\n",(0,s.jsx)(n.h3,{id:"frontend-optimizations",children:"Frontend Optimizations"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-Stage Build"}),": Reduces final image size by 95%"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Alpine Base"}),": Uses minimal Linux distribution"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Layer Caching"}),": Optimizes dependency installation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Static File Serving"}),": Nginx efficiently serves React build"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"backend-optimizations",children:"Backend Optimizations"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Slim JDK"}),": Uses minimal Java runtime"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Single JAR"}),": Spring Boot creates executable JAR with all dependencies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No Build Tools"}),": Runtime image doesn't include Maven"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fast Startup"}),": Spring Boot optimized for container environments"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"container-runtime-behavior",children:"Container Runtime Behavior"}),"\n",(0,s.jsx)(n.h3,{id:"frontend-container",children:"Frontend Container"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Nginx Process"}),": Runs as PID 1 in container"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Static Files"}),": Serves React build from ",(0,s.jsx)(n.code,{children:"/usr/share/nginx/html"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Port 80"}),": Nginx default port (mapped to 3000 externally)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration"}),": Uses default Nginx configuration"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"backend-container",children:"Backend Container"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Java Process"}),": Spring Boot application runs as PID 1"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Embedded Tomcat"}),": Web server included in Spring Boot"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Port 8080"}),": Spring Boot default port"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Profiles"}),": Uses environment variable to select configuration"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"frontend-security",children:"Frontend Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Non-Root User"}),": Nginx runs as nginx user (not root)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Read-Only Files"}),": Static files don't need write permissions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Minimal Attack Surface"}),": Only Nginx and static files in final image"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"backend-security",children:"Backend Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"JVM Security"}),": OpenJDK includes security updates"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Application Security"}),": Spring Boot security features"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Environment Variables"}),": Sensitive data through environment variables"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Network Isolation"}),": Container network provides isolation"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"development-vs-production",children:"Development vs Production"}),"\n",(0,s.jsx)(n.h3,{id:"development-differences",children:"Development Differences"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Volume Mounts"}),": Source code mounted for hot reloading"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Debug Ports"}),": Additional ports for debugging"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Development Tools"}),": May include additional debugging tools"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"production-differences",children:"Production Differences"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Optimized Builds"}),": Production React build with minification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Health Checks"}),": Container health monitoring"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Resource Limits"}),": CPU and memory constraints"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Logging"}),": Structured logging for monitoring"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"benefits-of-this-docker-strategy",children:"Benefits of This Docker Strategy"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Technology-Specific Optimization"}),": Each Dockerfile optimized for its stack"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Size Efficiency"}),": Multi-stage builds minimize image sizes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Build Speed"}),": Layer caching speeds up development"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security"}),": Minimal runtime images reduce attack surface"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Portability"}),": Consistent behavior across environments"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Maintainability"}),": Simple, focused Dockerfiles"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(6540);const s={},l=r.createContext(s);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);